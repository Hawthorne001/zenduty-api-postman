{
  "info": {
    "_postman_id": "dc6326c5-5fad-4b3c-b7e2-b911612d7a7f",
    "name": "Zenduty API",
    "description": "List of all Zenduty API endpoints.",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
    "_exporter_id": "35110243"
  },
  "item": [
    {
      "name": "User Profile",
      "item": [
        {
          "name": "User Profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/user/profile/",
            "description": "# Get User Profile\n\nThis endpoint retrieves the profile of the requested user.\n\n## Request\n\n### URL\n\n`GET` {{host}}/api/user/profile/\n\n### Headers\n\nNo specific headers are required for this request.\n\n### Parameters\n\nNo parameters are required for this request.\n\n### Request Body\n\nThe request does not include a request body.\n\n## Response\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n\nThe response includes the requested user's profile information in JSON format, including:\n\n- `username` (string): The username of the user.\n    \n- `email` (string): The email address of the user.\n    \n- `first_name` (string): The first name of the user.\n    \n- `last_name` (string): The last name of the user.\n    \n- `role` (integer): The role of the user.\n    \n- `contacts` (array): An array of contact information including name, creation date, contact type, value, and unique ID.\n    \n- `notification_rules` (array): An array of notification rules including creation date, start delay, type, unique ID, contact, urgency, and user.\n    \n- `forwarding_rules` (array): An array of forwarding rules including creation date, unique ID, time zone, from date, to date, to user, created by, and user.\n    \n- `permissions` (array): An array of permissions for the user.\n    \n- `teams` (array): An array of teams including unique ID, name, privacy status, and members.\n    \n\n``` json\n{\n  \"username\":\"\",\n  \"email\":\"\",\n  \"first_name\":\"\",\n  \"last_name\":\"\",\n  \"role\":0,\n  \"contacts\":[{\"name\":\"\",\"creation_date\":\"\",\"contact_type\":0,\"value\":\"\",\"unique_id\":\"\"}],\n  \"notification_rules\":[{\"creation_date\":\"\",\"start_delay\":0,\"type\":\"\",\"unique_id\":\"\",\"contact\":\"\",\"urgency\":0,\"user\":\"\"}],\n  \"forwarding_rules\":[{\"creation_date\":\"\",\"unique_id\":\"\",\"time_zone\":\"\",\"from_date\":\"\",\"to_date\":\"\",\"to_user\":\"\",\"created_by\":\"\",\"user\":\"\"}],\n  \"permissions\":[],\n  \"teams\":[{\"unique_id\":\"\",\"name\":\"\",\"private\":true,\"members\":[]}]\n}\n\n ```"
          },
          "response": [
            {
              "name": "User Profile - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/user/profile/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Wed, 24 Jul 2024 06:30:43 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "Allow",
                  "value": "GET, OPTIONS"
                },
                {
                  "key": "X-Server-Albedo",
                  "value": "UPGRADED"
                },
                {
                  "key": "X-DiscoveryId",
                  "value": "f5897dd64610a47e40833764f79411ce"
                },
                {
                  "key": "X-RateLimit-Limit",
                  "value": ""
                },
                {
                  "key": "X-RateLimit-Remaining",
                  "value": ""
                },
                {
                  "key": "X-RateLimit-Period",
                  "value": ""
                },
                {
                  "key": "X-Frame-Options",
                  "value": "DENY"
                },
                {
                  "key": "Vary",
                  "value": "Cookie"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "GET, PUT, POST, DELETE, PATCH, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
                },
                {
                  "key": "Access-Control-Expose-Headers",
                  "value": "*"
                },
                {
                  "key": "Access-Control-Max-Age",
                  "value": "1728000"
                },
                {
                  "key": "X-Server-Flame",
                  "value": "normal"
                },
                {
                  "key": "X-XSS-Protection",
                  "value": "1"
                },
                {
                  "key": "Strict-Transport-Security",
                  "value": "max-age=31536000; includeSubdomains; preload"
                },
                {
                  "key": "X-Server",
                  "value": "Mr. Green"
                },
                {
                  "key": "Content-Encoding",
                  "value": "br"
                }
              ],
              "cookie": [],
              "body": {
                "username": "39569d4b-6540-4b64-a086-6",
                "email": "michaelscott@zenduty.com",
                "first_name": "Micheal",
                "last_name": "Scott",
                "role": 1,
                "contacts": [
                  {
                    "name": "Primary Email",
                    "creation_date": "2024-05-07",
                    "contact_type": 1,
                    "value": "michaelscott@zenduty.com",
                    "unique_id": "7b14a01a-8f35-42f3-a631-f8797875b670"
                  },
                  {
                    "name": "Android/iOS",
                    "creation_date": "2024-05-09",
                    "contact_type": 6,
                    "value": "Group of mobile devices",
                    "unique_id": "b0f3161a-d00c-4af0-b75f-2af8b08513c3"
                  },
                  {
                    "name": "Slack - Zenduty POC(zendutypoc)",
                    "creation_date": "2024-05-24",
                    "contact_type": 4,
                    "value": "U0728T09N03",
                    "unique_id": "0778b322-2edd-4b37-9822-e42f23492c1a"
                  },
                  {
                    "name": "Microsoft Teams",
                    "creation_date": "2024-05-29",
                    "contact_type": 5,
                    "value": "",
                    "unique_id": "10bf31a5-bfa8-4bf9-8833-5d74103fd3cf"
                  },
                  {
                    "name": "Me",
                    "creation_date": "2024-07-02",
                    "contact_type": 3,
                    "value": "+XXX XXXXX XXXXX",
                    "unique_id": "8729aa99-32a6-4963-8997-2fa0171ab607"
                  }
                ],
                "notification_rules": [
                  {
                    "creation_date": "2024-05-07T04:20:20.530902Z",
                    "start_delay": 0,
                    "type": "notification_rule",
                    "unique_id": "dd72a912-0c1b-4bab-826f-2580867ec9c3",
                    "contact": "7b14a01a-8f35-42f3-a631-f8797875b670",
                    "urgency": 1,
                    "user": "39569d4b-6540-4b64-a086-6"
                  },
                  {
                    "creation_date": "2024-05-07T04:20:20.533959Z",
                    "start_delay": 5,
                    "type": "notification_rule",
                    "unique_id": "c9ca5911-3f94-40c1-b447-1c6a011ce318",
                    "contact": "7b14a01a-8f35-42f3-a631-f8797875b670",
                    "urgency": 0,
                    "user": "39569d4b-6540-4b64-a086-6"
                  },
                  {
                    "creation_date": "2024-05-09T12:12:26.524876Z",
                    "start_delay": 0,
                    "type": "notification_rule",
                    "unique_id": "4e7ad9c1-dc45-4fb7-9cb1-e01b152e4848",
                    "contact": "b0f3161a-d00c-4af0-b75f-2af8b08513c3",
                    "urgency": 1,
                    "user": "39569d4b-6540-4b64-a086-6"
                  },
                  {
                    "creation_date": "2024-05-09T12:12:26.527902Z",
                    "start_delay": 0,
                    "type": "notification_rule",
                    "unique_id": "f633db08-636f-4e8f-8489-774dff8e4772",
                    "contact": "b0f3161a-d00c-4af0-b75f-2af8b08513c3",
                    "urgency": 0,
                    "user": "39569d4b-6540-4b64-a086-6"
                  },
                  {
                    "creation_date": "2024-05-24T09:05:44.743755Z",
                    "start_delay": 0,
                    "type": "notification_rule",
                    "unique_id": "e5684433-7f9f-4f57-8701-5016844a7090",
                    "contact": "0778b322-2edd-4b37-9822-e42f23492c1a",
                    "urgency": 1,
                    "user": "39569d4b-6540-4b64-a086-6"
                  },
                  {
                    "creation_date": "2024-05-24T09:05:44.746804Z",
                    "start_delay": 0,
                    "type": "notification_rule",
                    "unique_id": "c54dec01-9893-4c4f-b0a0-a37a63bf4452",
                    "contact": "0778b322-2edd-4b37-9822-e42f23492c1a",
                    "urgency": 0,
                    "user": "39569d4b-6540-4b64-a086-6"
                  },
                  {
                    "creation_date": "2024-05-29T10:33:54.152782Z",
                    "start_delay": 1,
                    "type": "notification_rule",
                    "unique_id": "028108d3-7c07-4dcb-b856-5abceddbe847",
                    "contact": "10bf31a5-bfa8-4bf9-8833-5d74103fd3cf",
                    "urgency": 1,
                    "user": "39569d4b-6540-4b64-a086-6"
                  },
                  {
                    "creation_date": "2024-05-29T10:33:54.155230Z",
                    "start_delay": 0,
                    "type": "notification_rule",
                    "unique_id": "9efac4cb-ad03-4307-aa07-b2a56ec8af5d",
                    "contact": "10bf31a5-bfa8-4bf9-8833-5d74103fd3cf",
                    "urgency": 0,
                    "user": "39569d4b-6540-4b64-a086-6"
                  },
                  {
                    "creation_date": "2024-07-02T08:15:40.972297Z",
                    "start_delay": 0,
                    "type": "notification_rule",
                    "unique_id": "3c4e66ed-d659-484c-b033-a79191a7edbe",
                    "contact": "8729aa99-32a6-4963-8997-2fa0171ab607",
                    "urgency": 1,
                    "user": "39569d4b-6540-4b64-a086-6"
                  },
                  {
                    "creation_date": "2024-07-02T08:15:40.975618Z",
                    "start_delay": 10,
                    "type": "notification_rule",
                    "unique_id": "4bfc7f56-83f0-4405-93e2-a82359c53c26",
                    "contact": "8729aa99-32a6-4963-8997-2fa0171ab607",
                    "urgency": 0,
                    "user": "39569d4b-6540-4b64-a086-6"
                  }
                ],
                "forwarding_rules": [
                  {
                    "creation_date": "2024-05-17T08:19:56.572413Z",
                    "unique_id": "c56dd98e-27b7-42ca-ab02-0586249cbf04",
                    "time_zone": "UTC",
                    "from_date": "2024-05-17T13:49:00Z",
                    "to_date": "2024-05-31T13:49:00Z",
                    "to_user": "39569d4b-6540-4b64-a086-6",
                    "created_by": "7cf604c5-8b18-4cda-9f46-c",
                    "user": "7cf604c5-8b18-4cda-9f46-c"
                  }
                ],
                "permissions": [],
                "teams": [
                  {
                    "unique_id": "23b5e634-e7c5-43b9-99bd-5baa48f56212",
                    "name": "DevOps Team",
                    "private": false,
                    "members": []
                  },
                  {
                    "unique_id": "9d6679fd-b9aa-4476-84e1-8601a6063134",
                    "name": "Infrastructure Team",
                    "private": false,
                    "members": []
                  },
                  {
                    "unique_id": "f5808e6c-1cca-47d3-afc5-d2b8bfb5b62b",
                    "name": "Network Team",
                    "private": false,
                    "members": []
                  },
                  {
                    "unique_id": "e6dfb7a0-a2f0-4799-b1e7-b9528243d53b",
                    "name": "Azure Team",
                    "private": true,
                    "members": []
                  },
                  {
                    "unique_id": "afcfe4be-6ad8-4abb-876e-6bc7439aca2d",
                    "name": "Integration Team",
                    "private": true,
                    "members": []
                  },
                  {
                    "unique_id": "f862ff1a-b7b6-4334-86c2-89f9c01f3554",
                    "name": "Database Team",
                    "private": false,
                    "members": []
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Account Member",
      "item": [
        {
          "name": "Invite User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"team\": \"{{team_id}}\", //example : \"e6dfb7a0-a2f0-4799-b1e7-b9528243d53b\"\n    \"user_detail\": {\n        \"first_name\": \"Michael\",\n        \"last_name\": \"Scott\",\n        \"email\": \"michealscott@zenduty.com\",\n        \"role\": 3 // List of Roles : [2 = Admin, 3 = User]\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/api_invite/",
            "description": "### API Invite Account\n\nThis endpoint allows you to send an HTTP POST request to invite a user to the account.\n\n#### Request Body\n\n- `team` (string, required): The team to which the user will be invited.\n    \n- `user_detail` (object, required):\n    \n    - `first_name` (string): The first name of the user to be invited.\n        \n    - `last_name` (string): The last name of the user to be invited.\n        \n    - `email` (string): The email address of the user to be invited.\n        \n    - `role` (integer): The role of the user to be invited.\n        \n\n#### Response\n\nUpon successful execution, the API returns a response with status code 201 and content type \"application/json\". The response body includes the following schema:\n\n``` json\n{\n  \"unique_id\": \"\",\n  \"team\": \"\",\n  \"user\": {\n    \"username\": \"\",\n    \"first_name\": \"\",\n    \"last_name\": \"\",\n    \"email\": \"\"\n  },\n  \"joining_date\": \"\",\n  \"role\": 0\n}\n\n ```"
          },
          "response": [
            {
              "name": "Invite User - 200 OK",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"team\": {{team_uuid}},\n    \"user_detail\": {\n        \"first_name\": \"Michael\",\n        \"last_name\": \"Scott\",\n        \"email\": \"michealscott@zenduty.com\",\n        \"role\": 2\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/api_invite/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "e6931b6d-55d7-45e4-9f30-4dbf72bbcf06",
                "team": "db61f7ed-ba78-4536-9b2d-256b135a731d",
                "user": {
                  "username": "39f4dedd-2754-4ee1-9c0c-1",
                  "first_name": "Michael",
                  "last_name": "Scott",
                  "email": "michaelscott@zenduty.com"
                },
                "joining_date": "2022-09-20T14:29:05.997454Z",
                "role": 2
              }
            },
            {
              "name": "Invite User - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"team\": {{team_uuid}},\n    \"user_detail\": {\n        \"first_name\": \"Michael\",\n        \"last_name\": \"Scott\",\n        \"email\": \"michealscott@zenduty.com\",\n        \"role\": -1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/api_invite/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Invite User - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"team\": {{team_uuid}},\n    \"user_detail\": {\n        \"first_name\": \"Michael\",\n        \"last_name\": \"Scott\",\n        \"email\": \"michealscott@zenduty.com\",\n        \"role\": 3\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/api_invite/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Invite User - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"team\": {{team_uuid}},\n    \"user_detail\": {\n        \"first_name\": \"Michael\",\n        \"last_name\": \"Scott\",\n        \"email\": \"michealscott@zenduty.com\",\n        \"role\": 3\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/api_invite/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List Account Members",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/members/",
            "description": "### Get Account Members\n\nThis endpoint is used to retrieve a list of account members associated with the account.\n\n#### Request\n\nThis is a GET request and does not require a request body.\n\n#### Response\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n\nExample response body:\n\n``` json\n[\n    {\n        \"unique_id\": \"\",\n        \"time_zone\": \"\",\n        \"user\": {\n            \"username\": \"\",\n            \"first_name\": \"\",\n            \"last_name\": \"\",\n            \"email\": \"\"\n        },\n        \"joining_date\": \"\",\n        \"role\": 0,\n        \"is_verified\": true,\n        \"custom_role_id\": null\n    }\n]\n\n ```\n\n#### Response Schema\n\n``` json\n[\n    {\n        \"unique_id\": \"\",\n        \"time_zone\": \"\",\n        \"user\": {\n            \"username\": \"\",\n            \"first_name\": \"\",\n            \"last_name\": \"\",\n            \"email\": \"\"\n        },\n        \"joining_date\": \"\",\n        \"role\": 0,\n        \"is_verified\": true,\n        \"custom_role_id\": null\n    }\n]\n\n ```"
          },
          "response": [
            {
              "name": "List Account Members - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/members/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "unique_id": "96f437aa-ae86-46cc-a01a-b2ede620d25a",
                  "time_zone": "UTC",
                  "user": {
                    "username": "216bba3d-7268-4a8e-89e9-6",
                    "first_name": "Micheal",
                    "last_name": "Scott",
                    "email": "anshulrajput229@gmail.com"
                  },
                  "joining_date": "2022-07-08T10:28:36.804578Z",
                  "role": 1,
                  "is_verified": false
                },
                {
                  "unique_id": "49868e5e-aa68-471b-82e2-10b6238f42f6",
                  "time_zone": "UTC",
                  "user": {
                    "username": "507dfda0-a1fd-40e5-943a-e",
                    "first_name": "Mary",
                    "last_name": "Jane",
                    "email": "maryjane@sharklasers.com"
                  },
                  "joining_date": "2022-07-08T10:31:56.830785Z",
                  "role": 3,
                  "is_verified": false
                },
                {
                  "unique_id": "ab188a19-7f5c-4f6f-b7cd-d1bfa0725dcd",
                  "time_zone": "UTC",
                  "user": {
                    "username": "85b563c8-18d0-4668-9462-9",
                    "first_name": "Vishwa",
                    "last_name": "Krishnakumar",
                    "email": "vishwa@yellowant.com"
                  },
                  "joining_date": "2022-07-08T10:32:42.191552Z",
                  "role": 2,
                  "is_verified": false
                }
              ]
            },
            {
              "name": "List Account Members - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/members/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List Account Members - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/members/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List Account Members",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/members/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve Account Member",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/members/{{username}}/",
            "description": "### Retrieve Account Member Details\n\nThis endpoint retrieves the details of a specific account member.\n\n#### Request\n\n- Method: GET\n    \n- URL: `{{host}}/api/account/members/{{username}}/`\n    \n\n#### Request Body\n\nThis request does not require a request body.\n\n#### Response\n\nThe response will be a JSON object with the following schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"unique_id\": {\n            \"type\": \"string\"\n        },\n        \"time_zone\": {\n            \"type\": \"string\"\n        },\n        \"user\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"username\": {\n                    \"type\": \"string\"\n                },\n                \"first_name\": {\n                    \"type\": \"string\"\n                },\n                \"last_name\": {\n                    \"type\": \"string\"\n                },\n                \"email\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"joining_date\": {\n            \"type\": \"string\"\n        },\n        \"role\": {\n            \"type\": \"integer\"\n        },\n        \"is_verified\": {\n            \"type\": \"boolean\"\n        },\n        \"custom_role_id\": {\n            \"type\": [\"string\", \"null\"]\n        }\n    }\n}\n\n ```"
          },
          "response": [
            {
              "name": "Retrieve Account Member - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/members/{{username}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "ab188a19-7f5c-4f6f-b7cd-d1bfa0725dcd",
                "time_zone": "UTC",
                "user": {
                  "username": "85b563c8-18d0-4668-9462-9",
                  "first_name": "Vishwa",
                  "last_name": "Krishnakumar",
                  "email": "vishwa@yellowant.com"
                },
                "joining_date": "2022-07-08T10:32:42.191552Z",
                "role": 2,
                "is_verified": false
              }
            },
            {
              "name": "Retrieve Account Member - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/members/{{username}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve Account Member - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/members/{{username}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve Account Member - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/members/{{username}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Update Account Member",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"time_zone\": \"UTC\",\n    \"user\": {\n        \"username\": {{username}},\n        \"first_name\": \"Micheal\",\n        \"last_name\": \"Scott\"\n    },\n    \"role\": 2 // List of Roles : [2 = Admin, 3 = User]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/members/{{username}}/",
            "description": "### Update Account Member Details\n\nThis endpoint allows you to update the details of a specific account member.\n\n#### Request Body\n\n- `time_zone` (string): The time zone for the account member.\n    \n- `user` (object): The details of the user.\n    \n    - `username` (string): The username of the account member.\n        \n    - `first_name` (string): The first name of the account member.\n        \n    - `last_name` (string): The last name of the account member.\n        \n- `role` (integer): The role of the account member.\n    \n\nExample:\n\n``` json\n{\n  \"time_zone\": \"UTC\",\n  \"user\": {\n      \"username\": \"example_username\",\n      \"first_name\": \"Micheal\",\n      \"last_name\": \"Scott\"\n  },\n  \"role\": 2\n}\n\n ```\n\n#### Response\n\n- `unique_id` (string): The unique identifier of the account member.\n    \n- `time_zone` (string): The time zone of the account member.\n    \n- `user` (object): The details of the user.\n    \n    - `username` (string): The username of the account member.\n        \n    - `first_name` (string): The first name of the account member.\n        \n    - `last_name` (string): The last name of the account member.\n        \n    - `email` (string): The email address of the account member.\n        \n- `joining_date` (string): The date when the account member joined.\n    \n- `role` (integer): The role of the account member.\n    \n- `is_verified` (boolean): Indicates if the account member is verified.\n    \n\nExample Response:\n\n``` json\n{\n  \"unique_id\": \"\",\n  \"time_zone\": \"\",\n  \"user\": {\n      \"username\": \"\",\n      \"first_name\": \"\",\n      \"last_name\": \"\",\n      \"email\": \"\"\n  },\n  \"joining_date\": \"\",\n  \"role\": 0,\n  \"is_verified\": true\n}\n\n ```"
          },
          "response": [
            {
              "name": "Update Account Member - 200 OK",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"time_zone\": \"UTC\",\n    \"user\": {\n        \"username\": {{username}},\n        \"first_name\": \"Micheal\",\n        \"last_name\": \"Scott\"\n    },\n    \"role\": 2\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/members/{{username}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "49868e5e-aa68-471b-82e2-10b6238f42f6",
                "time_zone": "UTC",
                "user": {
                  "username": "507dfda0-a1fd-40e5-943a-e",
                  "first_name": "Mary",
                  "last_name": "Jane",
                  "email": "maryjane@sharklasers.com"
                },
                "joining_date": "2022-07-08T10:31:56.830785Z",
                "role": 2,
                "is_verified": false
              }
            },
            {
              "name": "Update Account Member - 400 Bad Request",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"time_zone\": \"UTC\",\n    \"user\": {\n        \"username\": {{username}},\n        \"first_name\": \"Micheal\",\n        \"last_name\": \"Scott\"\n    },\n    \"role\": 2\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/members/{{username}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Update Account Member - 403 Forbidden",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"time_zone\": \"UTC\",\n    \"user\": {\n        \"username\": {{username}},\n        \"first_name\": \"Micheal\",\n        \"last_name\": \"Scott\"\n    },\n    \"role\": 2\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/members/{{username}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Update Account Member - 404 Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"time_zone\": \"UTC\",\n    \"user\": {\n        \"username\": {{username}},\n        \"first_name\": \"Micheal\",\n        \"last_name\": \"Scott\"\n    },\n    \"role\": 2\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/members/{{username}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete User",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"{{username}}\" //example : \"39569d4b-6540-4b64-a086-6\" \n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/deleteuser/",
            "description": "### Delete User Account\n\nThis endpoint is used to delete a user account.\n\n**Request Body**\n\n- `username` (string, required): The username of the user whose account is to be deleted.\n    \n\n**Response**  \nThe response will indicate the success or failure of the account deletion operation."
          },
          "response": [
            {
              "name": "Delete User - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "username": "{{username}}"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/deleteuser/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete User - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "username": "{{username}}"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/deleteuser/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete User - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "username": "{{username}}"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/deleteuser/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "The Account Member API provides a set of endpoints for managing user accounts within your application. This API allows you to perform various operations such as adding new users, listing all users, retrieving details of a specific user, updating user details, and deleting a user"
    },
    {
      "name": "Account Custom Roles",
      "item": [
        {
          "name": "Create Custom Role",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Role 1\",\n    \"description\": \"Role 1 Description\",\n    \"permissions\": [\n        \"sla_read\"\n    ] \n}\n// List of all the permissions - [\"analytics_read\",\"escalation_policy_read\",\"escalation_policy_write\",\"incident_read\",\"incident_role_read\",\"incident_role_write\",\"incident_write\",\"integration_read\",\"integration_write\",\"maintenance_read\",\"maintenance_write\",\"member_read\",\"member_write\",\"postmortem_read\",\"postmortem_write\",\"post_incident_task_read\",\"post_incident_task_write\",\"priority_read\",\"priority_write\",\"regenerate_integration_key\",\"schedule_read\",\"schedule_write\",\"service_read\",\"service_write\",\"sla_read\",\"sla_write\",\"stakeholder_template_read\",\"stakeholder_template_write\",\"tag_read\",\"tag_write\",\"task_template_read\",\"task_template_write\",\"team_read\"]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/customroles/",
            "description": "\n### Create Custom Role\n\nThis endpoint is used to create a custom role within the account.\n\n#### Request Body\n- `name`: (string) The name of the custom role.\n- `description`: (string) The description of the custom role.\n- `permissions`: (array) An array of permissions associated with the custom role.\n\nExample:\n```json\n{\n  \"name\": \"example_name\",\n  \"description\": \"example_description\",\n  \"permissions\": [\"permission1\", \"permission2\"]\n}\n```\n\n#### Response\n- `unique_id`: (string) The unique identifier of the created custom role.\n- `name`: (string) The name of the custom role.\n- `description`: (string) The description of the custom role.\n\nExample:\n```json\n{\n  \"unique_id\": \"example_unique_id\",\n  \"name\": \"example_name\",\n  \"description\": \"example_description\"\n}\n"
          },
          "response": [
            {
              "name": "Create Custom Role - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Role 1",
                    "description": "Role 1 Description",
                    "permissions": [
                      "sla_read"
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/customroles/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "97208d3e-e45d-409a-b951-4eae928a59b9",
                "name": "Role 1",
                "description": "Role 1 Description"
              }
            },
            {
              "name": "Create Custom Role - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Role 1",
                    "description": "Role 1 Description",
                    "permissions": [
                      "sla_read"
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/customroles/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create Custom Role - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Role 1",
                    "description": "Role 1 Description",
                    "permissions": [
                      "sla_read"
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/customroles/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create Custom Role - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Role 1",
                    "description": "Role 1 Description",
                    "permissions": [
                      "sla_read"
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/customroles/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List Custom Roles",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/customroles/",
            "description": "\n### Get Custom Roles\n\nThis endpoint retrieves all custom roles related to the account.\n\n#### Request Body\nThis is a GET request and does not require a request body.\n\n#### Response\n- `unique_id` (string): The unique identifier for the custom role.\n- `name` (string): The name of the custom role.\n- `description` (string): The description of the custom role.\n- `permissions` (array of strings): The permissions associated with the custom role.\n\nExample response:\n```json\n[\n    {\n        \"unique_id\": \"\",\n        \"name\": \"\",\n        \"description\": \"\",\n        \"permissions\": [\"\"]\n    }\n]\n```\n"
          },
          "response": [
            {
              "name": "List Custom Roles - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/customroles/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "unique_id": "ddf61a4d-6489-4665-bee6-7e21205f9d6f",
                  "name": "Role 1 Updated",
                  "description": "Role 1 Description",
                  "permissions": [
                    "member_read",
                    "schedule_read",
                    "team_read"
                  ]
                },
                {
                  "unique_id": "97208d3e-e45d-409a-b951-4eae928a59b9",
                  "name": "Role 2",
                  "description": "Role 1 Description",
                  "permissions": [
                    "member_read",
                    "sla_read",
                    "team_read"
                  ]
                },
                {
                  "unique_id": "0d087386-cebf-47ee-8dd3-c52f05c43128",
                  "name": "w4e5rty",
                  "description": "ew4rtyg",
                  "permissions": [
                    "escalation_policy_read",
                    "incident_read",
                    "incident_role_read",
                    "member_read",
                    "priority_read",
                    "schedule_read",
                    "service_read",
                    "sla_read",
                    "tag_read",
                    "task_template_read",
                    "team_read"
                  ]
                }
              ]
            },
            {
              "name": "List Custom Roles - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/customroles/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List Custom Roles - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/customroles/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List Custom Roles - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/customroles/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve Custom Role",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/customroles/{{custom_role_id}}/",
            "description": "\n### Get Custom Role Details\n\nThis endpoint retrieves the details of a custom role based on the provided `custom_role_id`.\n\n#### Request\n\n- Method: `GET`\n- URL: `{{host}}/api/account/customroles/{{custom_role_id}}/`\n\n#### Response\n\nThe response for this request can be documented as a JSON schema:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"unique_id\": {\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"description\": {\n      \"type\": \"string\"\n    },\n    \"permissions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  }\n}\n```\n"
          },
          "response": [
            {
              "name": "Retrieve Custom Role - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/customroles/{{custom_role_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "ddf61a4d-6489-4665-bee6-7e21205f9d6f",
                "name": "Role 1 Updated",
                "description": "Role 1 Description",
                "permissions": [
                  "member_read",
                  "schedule_read",
                  "team_read"
                ]
              }
            },
            {
              "name": "Retrieve Custom Role - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/customroles/{{custom_role_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve Custom Role - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/customroles/{{custom_role_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve Custom Role - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/customroles/{{custom_role_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Update Custom Role",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Role 1 Updated\",\n    \"permissions\": [\n        \"schedule_read\"\n    ] \n}\n// List of all the permissions - [\"analytics_read\",\"escalation_policy_read\",\"escalation_policy_write\",\"incident_read\",\"incident_role_read\",\"incident_role_write\",\"incident_write\",\"integration_read\",\"integration_write\",\"maintenance_read\",\"maintenance_write\",\"member_read\",\"member_write\",\"postmortem_read\",\"postmortem_write\",\"post_incident_task_read\",\"post_incident_task_write\",\"priority_read\",\"priority_write\",\"regenerate_integration_key\",\"schedule_read\",\"schedule_write\",\"service_read\",\"service_write\",\"sla_read\",\"sla_write\",\"stakeholder_template_read\",\"stakeholder_template_write\",\"tag_read\",\"tag_write\",\"task_template_read\",\"task_template_write\",\"team_read\"]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/customroles/{{custom_role_id}}/",
            "description": "### Update Custom Role\n\nThis endpoint allows the user to update a specific custom role by sending an HTTP PUT request to the specified URL.\n\n#### Request Body\n\n- `name` (string): The updated name of the custom role.\n    \n- `permissions` (array of strings): The updated permissions for the custom role.\n    \n\n#### Response\n\nUpon a successful request, the endpoint returns the updated custom role with the following attributes:\n\n- `unique_id` (string): The unique identifier of the custom role.\n    \n- `name` (string): The name of the custom role after the update.\n    \n- `description` (string): The description of the custom role after the update."
          },
          "response": [
            {
              "name": "Update Custom Role - 200 OK",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Role 1 Updated",
                    "permissions": [
                      "schedule_read"
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/customroles/{{custom_role_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "ddf61a4d-6489-4665-bee6-7e21205f9d6f",
                "name": "Role Updated",
                "description": "Role 1 Description"
              }
            },
            {
              "name": "Update Custom Role - 400 Bad Request",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Role 1 Updated",
                    "permissions": [
                      "schedule_read"
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/customroles/{{custom_role_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Update Custom Role - 403 Forbidden",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Role 1 Updated",
                    "permissions": [
                      "schedule_read"
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/customroles/{{custom_role_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Update Custom Role - 404 Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Role 1 Updated",
                    "permissions": [
                      "schedule_read"
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/customroles/{{custom_role_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete Custom Role",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{host}}/api/account/customroles/{{custom_role_id}}/",
            "description": "\n### Delete Custom Role\n\nThis endpoint is used to delete the specified custom role.\n\n#### Request\n\n- Method: `DELETE`\n- URL: `{{host}}/api/account/customroles/{{custom_role_id}}/`\n\n#### Response\n\nThe response for this request is a JSON object following the schema below:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n```\n"
          },
          "response": [
            {
              "name": "Delete Custom Role - 400 Bad Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/customroles/{{custom_role_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete Custom Role - 403 Forbidden",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/customroles/{{custom_role_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete Custom Role - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/customroles/{{custom_role_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ]
    },
    {
      "name": "User Custom Role",
      "item": [
        {
          "name": "Create User Custom Role",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"custom_role\": \"{{custom_role_id}}\" //example : \"f25a439b-31df-427c-a00b-da373f08a7d1\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/users/{{username}}/customroles/",
            "description": "### API Request Description\n\nThis endpoint allows you to assign custom roles to a specific member within the account. The HTTP POST request should be made to `{{host}}/api/account/members/{{username}}/customroles/`.\n\n#### Request Body\n\n- `custom_role`: The ID of the custom role to be assigned to the member.\n    \n\n### API Response\n\n``` json\n{\n  \"user\": \"\",\n  \"custom_role\": \"\",\n  \"custom_role_details\": {\n    \"name\": \"\"\n  }\n}\n\n ```\n\nThe response for this request is in JSON format and includes the following fields:\n\n- `user`: The user associated with the custom role assignment.\n    \n- `custom_role`: The custom role assigned to the user.\n    \n- `custom_role_details.name`: The name of the custom role assigned to the user."
          },
          "response": [
            {
              "name": "Create User Custom Role - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"custom_role\": {{custom_role_id}}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/members/{{username}}/customroles/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "user": "6278fd1d-7e7c-486a-80e3-5",
                "custom_role": "ddf61a4d-6489-4665-bee6-7e21205f9d6f",
                "custom_role_details": {
                  "name": "Role Updated"
                }
              }
            },
            {
              "name": "Create User Custom Role - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"custom_role\": {{custom_role_id}}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/members/{{username}}/customroles/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create User Custom Role - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"custom_role\": {{custom_role_id}}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/members/{{username}}/customroles/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create User Custom Role - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"custom_role\": {{custom_role_id}}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/members/{{username}}/customroles/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve User Custom Role",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/users/{{username}}/customroles/",
            "description": "This endpoint makes an HTTP GET request to retrieve the custom roles associated with a specific user account. The request should be made to /api/account/members/{{username}}/customroles/, where {{username}} is the username of the account for which custom roles are being retrieved.\n\n### Request Body\n\nThis request does not require a request body.\n\n### Response Body\n\nThe response will include the custom roles associated with the specified user account. The structure of the response will include:\n\n- \"user\": The username of the account for which custom roles are being retrieved.\n    \n- \"custom_role\": The custom role associated with the user account.\n    \n- \"custom_role_details\": Additional details about the custom role, including its name.\n    \n\nPlease note that the actual values for \"user\" and \"custom_role\" will be populated based on the specific user account and its associated custom roles."
          },
          "response": [
            {
              "name": "Retrieve User Custom Role - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/members/{{username}}/customroles/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "user": "6278fd1d-7e7c-486a-80e3-5",
                "custom_role": "ddf61a4d-6489-4665-bee6-7e21205f9d6f",
                "custom_role_details": {
                  "name": "Role Updated"
                }
              }
            },
            {
              "name": "Retrieve User Custom Role - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/members/{{username}}/customroles/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve User Custom Role - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/members/{{username}}/customroles/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Unauthorized"
              }
            },
            {
              "name": "Retrieve User Custom Role - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/members/{{username}}/customroles/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "All the API endpoints related to User Custom Role."
    },
    {
      "name": "Notification Rule",
      "item": [
        {
          "name": "Create the User Notification Rule object",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"start_delay\": \"{{notification_rule_delay}}\", // example: 0 [Delay field in minutes]\n    \"contact\": \"{{user_contact_unique_id}}\", // example: \"caabda03-5e15-4cf1-b293-fab41b688ac7\"\n    \"urgency\": \"{{notification_rule_incident_urgency}}\" // example: 1 [High Urgency - 1, Low Urgency - 2]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/users/{{username}}/notification_rules/",
            "description": "\n### Create User Notification Rule\n\nThis endpoint is used to create a User Notification Rule object.\n\n#### Request Body\n- `start_delay` (number, required): The delay before the notification rule starts.\n- `contact` (string, required): The unique ID of the user contact.\n- `urgency` (number, required): The incident urgency.\n\nExample:\n```json\n{\n  \"start_delay\": 0,\n  \"contact\": \"caabda03-5e15-4cf1-b293-fab41b688ac7\",\n  \"urgency\": 1\n}\n```\n\n#### Response\nThe response will be a JSON object with the following schema:\n```json\n{\n  \"creation_date\": \"\",\n  \"start_delay\": 0,\n  \"type\": \"\",\n  \"unique_id\": \"\",\n  \"contact\": \"\",\n  \"urgency\": 0\n}\n```\n"
          },
          "response": [
            {
              "name": "Create the User Notification Rule - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"start_delay\": {{notification_rule_delay}}, // example: 0\n    \"contact\": {{user_contact_unique_id}}, // example: \"caabda03-5e15-4cf1-b293-fab41b688ac7\"\n    \"urgency\": {{notification_rule_incident_urgency}} // example: 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/users/{{username}}/notification_rules/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "creation_date": "2023-03-01T15:28:35.582391Z",
                "start_delay": 0,
                "type": "",
                "unique_id": "3433edb5-f589-4227-baa5-a6646d93e76b",
                "contact": "caabda03-5e15-4cf1-b293-fab41b688ac7",
                "urgency": 1
              }
            },
            {
              "name": "Create the User Notification Rule object - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\"start_delay\": {{notification_rule_delay}}, // example: 0\n\"contact\": {{user_contact_unique_id}}, // example: \"caabda03-5e15-4cf1-b293-fab41b688ac7\"\n\"urgency\": {{notification_rule_incident_urgency}} // example: 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/users/{{username}}/notification_rules/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create the User Notification Rule object - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\"start_delay\": {{notification_rule_delay}}, // example: 0\n\"contact\": {{user_contact_unique_id}}, // example: \"caabda03-5e15-4cf1-b293-fab41b688ac7\"\n\"urgency\": {{notification_rule_incident_urgency}} // example: 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/users/{{username}}/notification_rules/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create the User Notification Rule object - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\"start_delay\": {{notification_rule_delay}}, // example: 0\n\"contact\": {{user_contact_unique_id}}, // example: \"caabda03-5e15-4cf1-b293-fab41b688ac7\"\n\"urgency\": {{notification_rule_incident_urgency}} // example: 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/users/{{username}}/notification_rules/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List all User Notification Rule objects",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/users/{{username}}/notification_rules/",
            "description": "### Get User Notification Rules\n\nThis endpoint makes an HTTP GET request to fetch the list of notification rules for a specific user.\n\n#### Request\n\n- Method: `GET`\n    \n- URL: `{{host}}/api/account/users/{{username}}/notification_rules/`\n    \n\n#### Response\n\nThe response will be a JSON array containing objects representing the notification rules. Each object includes the following properties:\n\n- `creation_date` (string): The date of creation for the notification rule.\n    \n- `start_delay` (number): The start delay for the notification rule.\n    \n- `type` (string): The type of notification rule.\n    \n- `unique_id` (string): The unique identifier for the notification rule.\n    \n- `contact` (string): The contact information associated with the notification rule.\n    \n- `urgency` (number): The urgency level for the notification rule.\n    \n\nExample response:\n\n``` json\n[{\"creation_date\":\"\",\"start_delay\":0,\"type\":\"\",\"unique_id\":\"\",\"contact\":\"\",\"urgency\":0}]\n\n ```"
          },
          "response": [
            {
              "name": "List all User Notification Rule objects - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/notification_rules/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "creation_date": "2023-03-01T15:20:45.565595Z",
                  "start_delay": 0,
                  "type": "",
                  "unique_id": "1d757ec0-39d3-4cd0-9536-7e0bb3e2665c",
                  "contact": "374d3e48-b4bd-438d-8e18-d69ddeadd183",
                  "urgency": 1
                },
                {
                  "creation_date": "2023-03-01T15:20:45.922128Z",
                  "start_delay": 0,
                  "type": "",
                  "unique_id": "68ed337e-8481-4cca-81da-b35342660377",
                  "contact": "caabda03-5e15-4cf1-b293-fab41b688ac7",
                  "urgency": 1
                },
                {
                  "creation_date": "2023-03-01T15:28:35.582391Z",
                  "start_delay": 5,
                  "type": "",
                  "unique_id": "3433edb5-f589-4227-baa5-a6646d93e76b",
                  "contact": "caabda03-5e15-4cf1-b293-fab41b688ac7",
                  "urgency": 1
                }
              ]
            },
            {
              "name": "List all User Notification Rule objects - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/notification_rules/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List all User Notification Rule objects - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/notification_rules/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List all User Notification Rule objects - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/notification_rules/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve the User Notification Rule object",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/users/{{username}}/notification_rules/{{notification_rule_unique_id}}/",
            "description": "\n# Retrieve User Notification Rule\n\nThis endpoint makes an HTTP GET request to retrieve the specified User Notification Rule object for a particular user and notification rule unique ID.\n\n### Request\n\n- Method: `GET`\n- URL: `{{host}}/api/account/users/{{username}}/notification_rules/{{notification_rule_unique_id}}/`\n\n### Response\n\nThe response will include the following fields:\n\n- `creation_date` (string): The date of creation for the notification rule.\n- `start_delay` (number): The delay before the notification starts.\n- `type` (string): The type of notification rule.\n- `unique_id` (string): The unique identifier for the notification rule.\n- `contact` (string): The contact information associated with the notification rule.\n- `urgency` (number): The urgency level of the notification rule.\n\n"
          },
          "response": [
            {
              "name": "Retrieve the User Notification Rule object - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/notification_rules/{{notification_rule_unique_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "creation_date": "2023-03-01T15:20:45.565595Z",
                "start_delay": 5,
                "type": "",
                "unique_id": "1d757ec0-39d3-4cd0-9536-7e0bb3e2665c",
                "contact": "374d3e48-b4bd-438d-8e18-d69ddeadd183",
                "urgency": 1
              }
            },
            {
              "name": "Retrieve the User Notification Rule object - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/notification_rules/{{notification_rule_unique_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve the User Notification Rule object - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/notification_rules/{{notification_rule_unique_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve the User Notification Rule object - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/notification_rules/{{notification_rule_unique_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete the User Notification Rule object",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{host}}/api/account/users/{{username}}/notification_rules/{{notification_rule_unique_id}}/",
            "description": "\n### Delete User Notification Rule\n\nDeletes the specified User Notification Rule object permanently.\n\n#### Request URL\n- `DELETE` {{host}}/api/account/users/{{username}}/notification_rules/{{notification_rule_unique_id}}/\n\n#### Response\nThe response of this request is documented as a JSON schema.\n"
          },
          "response": [
            {
              "name": "Delete the User Notification Rule object - 400 Bad Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/notification_rules/{{notification_rule_unique_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete the User Notification Rule object - 403 Forbidden",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/notification_rules/{{notification_rule_unique_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete the User Notification Rule object - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/notification_rules/{{notification_rule_unique_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "All the API endpoints related to User Notification Rule."
    },
    {
      "name": "Forwarding Rule",
      "item": [
        {
          "name": "Create the User Forwarding Rule object",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"from_date\": \"{{from_date}}\", // example: \"2023-03-01T16:37:58.654Z\"\n  \"to_date\": \"{{to_date}}\", // example: \"2023-03-01T16:37:58.654Z\"\n  \"to_user\": \"{{user_username}}\", // example: \"7e26fed1-f11c-4e78-afc6-a\"\n  \"time_zone\": \"{{timezone}}\" // example: \"UTC\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/users/{{username}}/forwarding_rules/",
            "description": "\n### Create User Forwarding Rule\nThis endpoint is used to create a user forwarding rule object for a specific user.\n\n#### Request Body\n- `from_date` (string, required): The date and time from which the forwarding rule is applicable. Example: \"2023-03-01T16:37:58.654Z\"\n- `to_date` (string, required): The date and time until which the forwarding rule is applicable. Example: \"2023-03-01T16:37:58.654Z\"\n- `to_user` (string, required): The username of the user to whom the emails will be forwarded. Example: \"7e26fed1-f11c-4e78-afc6-a\"\n- `time_zone` (string): The time zone for the forwarding rule. Default value is \"UTC\".\n\n#### Response (JSON Schema)\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"creation_date\": {\"type\": \"string\"},\n    \"unique_id\": {\"type\": \"string\"},\n    \"time_zone\": {\"type\": \"string\"},\n    \"from_date\": {\"type\": \"string\"},\n    \"to_date\": {\"type\": \"string\"},\n    \"to_user\": {\"type\": \"string\"},\n    \"created_by\": {\"type\": \"string\"},\n    \"user\": {\"type\": \"string\"}\n  }\n}\n"
          },
          "response": [
            {
              "name": "Create the User Forwarding Rule object - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"from_date\": {{from_date}}, // example: \"2023-03-01T16:37:58.654Z\"\n  \"to_date\": {{to_date}}, // example: \"2023-03-01T16:37:58.654Z\"\n  \"to_user\": {{user_username}}, // example: \"7e26fed1-f11c-4e78-afc6-a\"\n  \"time_zone\": \"UTC\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/users/{{username}}/forwarding_rules/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "creation_date": "2023-03-01T16:43:00.031310Z",
                "unique_id": "8bd02ac2-07fe-4d32-a37f-e1def9673746",
                "time_zone": "UTC",
                "from_date": "2023-03-01T16:37:58.654000Z",
                "to_date": "2023-03-01T16:37:58.654000Z",
                "to_user": "7e26fed1-f11c-4e78-afc6-a",
                "created_by": "7e26fed1-f11c-4e78-afc6-a",
                "user": "4f9f41eb-4252-462e-9e33-6"
              }
            },
            {
              "name": "Create the User Forwarding Rule object - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"from_date\": {{from_date}}, // example: \"2023-03-01T16:37:58.654Z\"\n  \"to_date\": {{to_date}}, // example: \"2023-03-01T16:37:58.654Z\"\n  \"to_user\": {{user_username}}, // example: \"7e26fed1-f11c-4e78-afc6-a\"\n  \"time_zone\": \"UTC\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/users/{{username}}/forwarding_rules/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create the User Forwarding Rule object - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"from_date\": {{from_date}}, // example: \"2023-03-01T16:37:58.654Z\"\n  \"to_date\": {{to_date}}, // example: \"2023-03-01T16:37:58.654Z\"\n  \"to_user\": {{user_username}}, // example: \"7e26fed1-f11c-4e78-afc6-a\"\n  \"time_zone\": \"UTC\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/users/{{username}}/forwarding_rules/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create the User Forwarding Rule object - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"from_date\": {{from_date}}, // example: \"2023-03-01T16:37:58.654Z\"\n  \"to_date\": {{to_date}}, // example: \"2023-03-01T16:37:58.654Z\"\n  \"to_user\": {{user_username}}, // example: \"7e26fed1-f11c-4e78-afc6-a\"\n  \"time_zone\": \"UTC\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/users/{{username}}/forwarding_rules/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List all User Forwarding Rule objects",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/users/{{username}}/forwarding_rules/",
            "description": "\n### Retrieve User Forwarding Rules\n\nThis endpoint retrieves a list of User Forwarding Rule objects for the specified `username`.\n\n#### Request Body\nThis is a GET request and does not require a request body.\n\n#### Response Body\nThe response will include an array of User Forwarding Rule objects, with each object containing the following properties:\n- `creation_date` (string): The date of creation for the forwarding rule.\n- `unique_id` (string): The unique identifier for the forwarding rule.\n- `time_zone` (string): The time zone for the forwarding rule.\n- `from_date` (string): The date from which the forwarding rule is active.\n- `to_date` (string): The date until which the forwarding rule is active.\n- `to_user` (string): The user to whom the emails are forwarded.\n- `created_by` (string): The user who created the forwarding rule.\n- `user` (string): The username for which the forwarding rule is set.\n\n"
          },
          "response": [
            {
              "name": "List all User Forwarding Rule objects - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/forwarding_rules/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "creation_date": "2023-03-01T16:38:22.540374Z",
                  "unique_id": "a6011d7c-3a44-4cab-8580-a410881f4ff9",
                  "time_zone": "UTC",
                  "from_date": "2023-03-01T16:37:58.654000Z",
                  "to_date": "2023-03-01T16:37:58.654000Z",
                  "to_user": "7e26fed1-f11c-4e78-afc6-a",
                  "created_by": "7e26fed1-f11c-4e78-afc6-a",
                  "user": "4f9f41eb-4252-462e-9e33-6"
                },
                {
                  "creation_date": "2023-03-01T16:44:31.446633Z",
                  "unique_id": "e2c523b9-af2b-4e66-a3fd-338bd7ffc641",
                  "time_zone": "UTC",
                  "from_date": "2023-03-01T16:44:22.757000Z",
                  "to_date": "2023-03-01T16:44:22.757000Z",
                  "to_user": "25692874-e54d-4101-bbfc-7",
                  "created_by": "7e26fed1-f11c-4e78-afc6-a",
                  "user": "4f9f41eb-4252-462e-9e33-6"
                }
              ]
            },
            {
              "name": "List all User Forwarding Rule objects - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/forwarding_rules/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List all User Forwarding Rule objects - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/forwarding_rules/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List all User Forwarding Rule objects - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/forwarding_rules/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve the User Forwarding Rule object",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/users/{{username}}/forwarding_rules/{{forwarding_rule_unique_id}}/",
            "description": "\n### Retrieve User Forwarding Rule\n\nThis endpoint makes an HTTP GET request to retrieve the specified User Forwarding Rule object.\n\n#### Request Body\nThis request does not require a request body.\n\n#### Response Body\nThe response will contain the following fields:\n- `creation_date` (string): The date of creation for the forwarding rule.\n- `unique_id` (string): The unique identifier for the forwarding rule.\n- `time_zone` (string): The time zone for the forwarding rule.\n- `from_date` (string): The starting date for the forwarding rule.\n- `to_date` (string): The ending date for the forwarding rule.\n- `to_user` (string): The user to whom the emails are forwarded.\n- `created_by` (string): The user who created the forwarding rule.\n- `user` (string): The user associated with the forwarding rule.\n\n"
          },
          "response": [
            {
              "name": "Retrieve the User Forwarding Rule object - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/forwarding_rules/{{forwarding_rule_unique_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "creation_date": "2023-03-01T16:38:22.540374Z",
                "unique_id": "a6011d7c-3a44-4cab-8580-a410881f4ff9",
                "time_zone": "UTC",
                "from_date": "2023-03-01T16:37:58.654000Z",
                "to_date": "2023-03-01T16:37:58.654000Z",
                "to_user": "7e26fed1-f11c-4e78-afc6-a",
                "created_by": "7e26fed1-f11c-4e78-afc6-a",
                "user": "4f9f41eb-4252-462e-9e33-6"
              }
            },
            {
              "name": "Retrieve the User Forwarding Rule object - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/forwarding_rules/{{forwarding_rule_unique_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve the User Forwarding Rule object - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/forwarding_rules/{{forwarding_rule_unique_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve the User Forwarding Rule object - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/forwarding_rules/{{forwarding_rule_unique_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete the User Forwarding Rule object",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{host}}/api/account/users/{{username}}/forwarding_rules/{{forwarding_rule_unique_id}}/",
            "description": "\n### Delete User Forwarding Rule\n\nThis endpoint is used to delete the specified User Forwarding Rule object permanently.\n\n#### Request Body\nThis request does not require a request body.\n\n#### Response Body\nThis request does not have a response body.\n"
          },
          "response": [
            {
              "name": "Delete the User Forwarding Rule object - 400 Bad Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/forwarding_rules/{{forwarding_rule_unique_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete the User Forwarding Rule object - 403 Forbidden",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/forwarding_rules/{{forwarding_rule_unique_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete the User Forwarding Rule object - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/forwarding_rules/{{forwarding_rule_unique_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "All the API endpoints related to User Forwarding Rule."
    },
    {
      "name": "Contact Method",
      "item": [
        {
          "name": "Create the User Contact Method object",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"{{user_contact_name}}\", // example: \"Secondary Email\"\n  \"value\": \"{{user_contact_value}}\", // example:  \"michealscott@zenduty.com\"\n  \"contact_type\": \"{{user_contact_type}}\" // example: 1 [1 - Email]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/users/{{username}}/contacts/",
            "description": "\n### Create User Contact Method\nThis API endpoint is used to create a user contact method for a specific user.\n\n#### Request Body\n- `name` (string): The name of the contact method, e.g., \"Secondary Email\".\n- `value` (string): The value of the contact method, e.g., \"anshulrajput229@gmail.com\".\n- `contact_type` (number): The type of contact method, e.g., 1.\n\n#### Response\nThe response will include the following fields:\n- `name` (string): The name of the contact method.\n- `creation_date` (string): The date of creation of the contact method.\n- `contact_type` (number): The type of contact method.\n- `value` (string): The value of the contact method.\n- `unique_id` (string): The unique identifier of the contact method.\n\nExample response:\n```json\n{\n  \"name\": \"\",\n  \"creation_date\": \"\",\n  \"contact_type\": 0,\n  \"value\": \"\",\n  \"unique_id\": \"\"\n}\n```\n"
          },
          "response": [
            {
              "name": "Create the User Contact Method object - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": {{user_contact_name}}, // example: \"Secondary Email\"\n  \"value\": {{user_contact_value}}, // example:  \"anshulrajput229@gmail.com\"\n  \"contact_type\": {{user_contact_type}} // example: 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/users/{{username}}/contacts/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "name": "Secondary Email",
                "creation_date": "2023-03-02",
                "contact_type": 1,
                "value": "anshulrajput229@gmail.com",
                "unique_id": "8a862f18-9332-4d08-90ad-06c070803c05"
              }
            },
            {
              "name": "Create the User Contact Method object - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": {{user_contact_name}}, // example: \"Secondary Email\"\n  \"value\": {{user_contact_value}}, // example:  \"anshulrajput229@gmail.com\"\n  \"contact_type\": {{user_contact_type}} // example: 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/users/{{username}}/contacts/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create the User Contact Method object - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": {{user_contact_name}}, // example: \"Secondary Email\"\n  \"value\": {{user_contact_value}}, // example:  \"anshulrajput229@gmail.com\"\n  \"contact_type\": {{user_contact_type}} // example: 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/users/{{username}}/contacts/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create the User Contact Method object - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": {{user_contact_name}}, // example: \"Secondary Email\"\n  \"value\": {{user_contact_value}}, // example:  \"anshulrajput229@gmail.com\"\n  \"contact_type\": {{user_contact_type}} // example: 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/users/{{username}}/contacts/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List all User Contact Method objects",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/users/{{username}}/contacts/",
            "description": "\n### API Request\n\nGET {{host}}/api/account/users/{{username}}/contacts/\n\n### Response\n\nThe response for this request can be documented as a JSON schema:\n\n```json\n{\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"name\": {\n        \"type\": \"string\"\n      },\n      \"creation_date\": {\n        \"type\": \"string\"\n      },\n      \"contact_type\": {\n        \"type\": \"integer\"\n      },\n      \"value\": {\n        \"type\": \"string\"\n      },\n      \"unique_id\": {\n        \"type\": \"string\"\n      }\n    }\n  }\n}\n```\n"
          },
          "response": [
            {
              "name": "List all User Contact Method objects - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/contacts/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "name": "Primary Email",
                  "creation_date": "2023-02-14",
                  "contact_type": 1,
                  "value": "user@three.com",
                  "unique_id": "374d3e48-b4bd-438d-8e18-d69ddeadd183"
                },
                {
                  "name": "Primary",
                  "creation_date": "2023-03-01",
                  "contact_type": 2,
                  "value": "+91 86993 62839",
                  "unique_id": "caabda03-5e15-4cf1-b293-fab41b688ac7"
                },
                {
                  "name": "Secondary Email",
                  "creation_date": "2023-03-02",
                  "contact_type": 1,
                  "value": "anshulrajput229@gmail.com",
                  "unique_id": "8a862f18-9332-4d08-90ad-06c070803c05"
                }
              ]
            },
            {
              "name": "List all User Contact Method objects - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/contacts/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List all User Contact Method objects - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/contacts/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List all User Contact Method objects - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/contacts/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve the User Contact Method object",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/users/{{username}}/contacts/{{contact_unique_id}}/",
            "description": "\n### Retrieve User Contact Method\n\n#### Description\nThis endpoint retrieves the specified User Contact Method object.\n\n#### Request\n- Method: GET\n- URL: `{{host}}/api/account/users/{{username}}/contacts/{{contact_unique_id}}/`\n\n#### Response\nThe response for this request is a JSON object with the following schema:\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\"type\": \"string\"},\n    \"creation_date\": {\"type\": \"string\"},\n    \"contact_type\": {\"type\": \"number\"},\n    \"value\": {\"type\": \"string\"},\n    \"unique_id\": {\"type\": \"string\"}\n  }\n}\n```\n"
          },
          "response": [
            {
              "name": "Retrieve the User Contact Method object - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/contacts/{{contact_unique_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "name": "Primary Email",
                "creation_date": "2023-02-14",
                "contact_type": 1,
                "value": "user@three.com",
                "unique_id": "374d3e48-b4bd-438d-8e18-d69ddeadd183"
              }
            },
            {
              "name": "Retrieve the User Contact Method object - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/contacts/{{contact_unique_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve the User Contact Method object - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/contacts/{{contact_unique_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve the User Contact Method object - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/contacts/{{contact_unique_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete the User Contact Method object",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{host}}/api/account/users/{{username}}/contacts/{{contact_unique_id}}/",
            "description": "\n### Delete User Contact\n\nThis endpoint is used to delete a specific User Contact Method object permanently.\n\n#### Request Body\nThis request does not require a request body.\n\n#### Response\nThis request returns a success status if the User Contact Method object is deleted successfully.\n\n"
          },
          "response": [
            {
              "name": "Delete the User Contact Method object - 400 Bad Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/contacts/{{contact_unique_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete the User Contact Method object - 403 Forbidden",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/contacts/{{contact_unique_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete the User Contact Method object - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/users/{{username}}/contacts/{{contact_unique_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "All the API endpoints related to User Contact methods."
    },
    {
      "name": "Teams",
      "item": [
        {
          "name": "Create Team",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": {
                "name": "Production Team"
              },
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/",
            "description": "\n### Create a New Team\n\nThis endpoint allows you to create a new team within the account.\n\n#### Request Body\n- `name`: The name of the team (string)\n\n#### Response\n- `unique_id`: The unique identifier of the team (string)\n- `name`: The name of the team (string)\n- `account`: The account to which the team belongs (string)\n- `creation_date`: The date of team creation (string)\n- `members`: An array of team members, each containing:\n  - `unique_id`: The unique identifier of the member (string)\n  - `team`: The team to which the member belongs (string)\n  - `user`: Information about the user, including:\n    - `username`: The username of the user (string)\n    - `first_name`: The first name of the user (string)\n    - `last_name`: The last name of the user (string)\n    - `email`: The email address of the user (string)\n  - `joining_date`: The date when the member joined the team (string)\n  - `role`: The role of the member within the team (integer)\n- `owner`: The owner of the team (string)\n- `roles`: An array of team roles, each containing:\n  - `unique_id`: The unique identifier of the role (string)\n  - `team`: The team to which the role belongs (string)\n  - `title`: The title of the role (string)\n  - `description`: The description of the role (string)\n  - `creation_date`: The date of role creation (string)\n  - `rank`: The rank of the role (integer)\n\n"
          },
          "response": [
            {
              "name": "Create Team - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Production Team"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "61010821-08aa-4098-94f8-f88f1990b54a",
                "name": "Production Team",
                "account": "0713dc12-40b0-46ff-b0f9-c6b126399277",
                "creation_date": "2022-07-08",
                "members": [
                  {
                    "unique_id": "d916157c-ff8b-43be-8e99-4b63699fdf72",
                    "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                    "user": {
                      "username": "216bba3d-7268-4a8e-89e9-6",
                      "first_name": "Anshul",
                      "last_name": "Rajput",
                      "email": "anshulrajput229@gmail.com"
                    },
                    "joining_date": "2022-07-08T10:41:36.600148Z",
                    "role": 1
                  }
                ],
                "owner": "216bba3d-7268-4a8e-89e9-6",
                "roles": [
                  {
                    "unique_id": "89752b4a-43df-401d-9dc0-a446690a7a0e",
                    "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                    "title": "Incident Commander",
                    "description": "The incident commander is the person responsible for all aspects of the incident response, including quickly developing incident objectives, managing all incident operations, application of resources as well as responsibility for all persons involved. The incident commander sets priorities and defines the organization of the incident response teams and the overall incident action plan.",
                    "creation_date": "2022-07-08T10:41:36.623257Z",
                    "rank": 1
                  }
                ]
              }
            },
            {
              "name": "Create Team - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Production Team"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create Team - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Production Team"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create Team - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Production Team"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List Teams",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/",
            "description": "\n### Get Account Teams\n\nThis endpoint retrieves all the operations related to the team.\n\n#### Request\n\n- Method: `GET`\n- URL: `{{host}}/api/account/teams/`\n\n#### Response\n\nThe response will include an array of team objects, each containing the following properties:\n- `unique_id` (string): The unique identifier for the team.\n- `name` (string): The name of the team.\n- `account` (string): The account associated with the team.\n- `creation_date` (string): The date of team creation.\n- `members` (array): An array of member objects, each containing:\n  - `unique_id` (string): The unique identifier for the member.\n  - `team` (string): The team associated with the member.\n  - `user` (object): An object containing user details:\n    - `username` (string): The username of the user.\n    - `first_name` (string): The first name of the user.\n    - `last_name` (string): The last name of the user.\n    - `email` (string): The email address of the user.\n  - `joining_date` (string): The date the member joined the team.\n  - `role` (integer): The role of the member in the team.\n- `owner` (string): The owner of the team.\n- `roles` (array): An array of role objects, each containing:\n  - `unique_id` (string): The unique identifier for the role.\n  - `team` (string): The team associated with the role.\n  - `title` (string): The title of the role.\n  - `description` (string): The description of the role.\n  - `creation_date` (string): The date of role creation.\n  - `rank` (integer): The rank of the role.\n\n"
          },
          "response": [
            {
              "name": "List Teams - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "unique_id": "1f1b4d79-ed32-44fc-926d-f794b975200c",
                  "name": "Operation Team",
                  "account": "0713dc12-40b0-46ff-b0f9-c6b126399277",
                  "creation_date": "2022-07-08",
                  "members": [
                    {
                      "unique_id": "90a97f10-d290-4bd0-9f83-525f130c6399",
                      "team": "1f1b4d79-ed32-44fc-926d-f794b975200c",
                      "user": {
                        "username": "216bba3d-7268-4a8e-89e9-6",
                        "first_name": "Anshul",
                        "last_name": "Rajput",
                        "email": "anshulrajput229@gmail.com"
                      },
                      "joining_date": "2022-07-08T10:29:36.408864Z",
                      "role": 1
                    },
                    {
                      "unique_id": "4af52265-b69e-4cd0-948a-fba33933588d",
                      "team": "1f1b4d79-ed32-44fc-926d-f794b975200c",
                      "user": {
                        "username": "507dfda0-a1fd-40e5-943a-e",
                        "first_name": "Mary",
                        "last_name": "Jane",
                        "email": "maryjane@sharklasers.com"
                      },
                      "joining_date": "2022-07-08T10:31:56.849950Z",
                      "role": 2
                    },
                    {
                      "unique_id": "76e76d20-2c82-49be-b987-244c8c6af57b",
                      "team": "1f1b4d79-ed32-44fc-926d-f794b975200c",
                      "user": {
                        "username": "85b563c8-18d0-4668-9462-9",
                        "first_name": "Vishwa",
                        "last_name": "Krishnakumar",
                        "email": "vishwa@yellowant.com"
                      },
                      "joining_date": "2022-07-08T10:32:42.213487Z",
                      "role": 2
                    }
                  ],
                  "owner": "216bba3d-7268-4a8e-89e9-6",
                  "roles": [
                    {
                      "unique_id": "ce2e4fec-7fb9-440c-b400-9a33639d8ba3",
                      "team": "1f1b4d79-ed32-44fc-926d-f794b975200c",
                      "title": "Incident Commander",
                      "description": "The incident commander is the person responsible for all aspects of the incident response, including quickly developing incident objectives, managing all incident operations, application of resources as well as responsibility for all persons involved. The incident commander sets priorities and defines the organization of the incident response teams and the overall incident action plan.",
                      "creation_date": "2022-07-08T10:29:36.431801Z",
                      "rank": 1
                    }
                  ]
                },
                {
                  "unique_id": "61010821-08aa-4098-94f8-f88f1990b54a",
                  "name": "Production Team",
                  "account": "0713dc12-40b0-46ff-b0f9-c6b126399277",
                  "creation_date": "2022-07-08",
                  "members": [
                    {
                      "unique_id": "d916157c-ff8b-43be-8e99-4b63699fdf72",
                      "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                      "user": {
                        "username": "216bba3d-7268-4a8e-89e9-6",
                        "first_name": "Anshul",
                        "last_name": "Rajput",
                        "email": "anshulrajput229@gmail.com"
                      },
                      "joining_date": "2022-07-08T10:41:36.600148Z",
                      "role": 1
                    }
                  ],
                  "owner": "216bba3d-7268-4a8e-89e9-6",
                  "roles": [
                    {
                      "unique_id": "89752b4a-43df-401d-9dc0-a446690a7a0e",
                      "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                      "title": "Incident Commander",
                      "description": "The incident commander is the person responsible for all aspects of the incident response, including quickly developing incident objectives, managing all incident operations, application of resources as well as responsibility for all persons involved. The incident commander sets priorities and defines the organization of the incident response teams and the overall incident action plan.",
                      "creation_date": "2022-07-08T10:41:36.623257Z",
                      "rank": 1
                    }
                  ]
                }
              ]
            },
            {
              "name": "List Teams - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List Teams - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List Teams - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve Team",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/",
            "description": "\n### Get Team Details\n\nThis endpoint retrieves the details of a specific team.\n\n#### Request\n\n- Method: GET\n- URL: `{{host}}/api/account/teams/{{team_id}}/`\n\n#### Response\n\nThe response will include the following fields:\n- `unique_id` (string): The unique identifier of the team.\n- `name` (string): The name of the team.\n- `account` (string): The account associated with the team.\n- `creation_date` (string): The date of team creation.\n- `members` (array): An array of team members, each containing:\n  - `unique_id` (string): The unique identifier of the member.\n  - `team` (string): The team associated with the member.\n  - `user` (object): The user details, including:\n    - `username` (string): The username of the user.\n    - `first_name` (string): The first name of the user.\n    - `last_name` (string): The last name of the user.\n    - `email` (string): The email address of the user.\n  - `joining_date` (string): The date the member joined the team.\n  - `role` (integer): The role of the member within the team.\n- `owner` (string): The owner of the team.\n- `roles` (array): An array of roles within the team, each containing:\n  - `unique_id` (string): The unique identifier of the role.\n  - `team` (string): The team associated with the role.\n  - `title` (string): The title of the role.\n  - `description` (string): The description of the role.\n  - `creation_date` (string): The date of role creation.\n  - `rank` (integer): The rank of the role.\n\n"
          },
          "response": [
            {
              "name": "Retrieve Team - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "1f1b4d79-ed32-44fc-926d-f794b975200c",
                "name": "Operation Team",
                "account": "0713dc12-40b0-46ff-b0f9-c6b126399277",
                "creation_date": "2022-07-08",
                "members": [
                  {
                    "unique_id": "90a97f10-d290-4bd0-9f83-525f130c6399",
                    "team": "1f1b4d79-ed32-44fc-926d-f794b975200c",
                    "user": {
                      "username": "216bba3d-7268-4a8e-89e9-6",
                      "first_name": "Anshul",
                      "last_name": "Rajput",
                      "email": "anshulrajput229@gmail.com"
                    },
                    "joining_date": "2022-07-08T10:29:36.408864Z",
                    "role": 1
                  },
                  {
                    "unique_id": "4af52265-b69e-4cd0-948a-fba33933588d",
                    "team": "1f1b4d79-ed32-44fc-926d-f794b975200c",
                    "user": {
                      "username": "507dfda0-a1fd-40e5-943a-e",
                      "first_name": "Mary",
                      "last_name": "Jane",
                      "email": "maryjane@sharklasers.com"
                    },
                    "joining_date": "2022-07-08T10:31:56.849950Z",
                    "role": 2
                  },
                  {
                    "unique_id": "76e76d20-2c82-49be-b987-244c8c6af57b",
                    "team": "1f1b4d79-ed32-44fc-926d-f794b975200c",
                    "user": {
                      "username": "85b563c8-18d0-4668-9462-9",
                      "first_name": "Vishwa",
                      "last_name": "Krishnakumar",
                      "email": "vishwa@yellowant.com"
                    },
                    "joining_date": "2022-07-08T10:32:42.213487Z",
                    "role": 2
                  }
                ],
                "owner": "216bba3d-7268-4a8e-89e9-6",
                "roles": [
                  {
                    "unique_id": "ce2e4fec-7fb9-440c-b400-9a33639d8ba3",
                    "team": "1f1b4d79-ed32-44fc-926d-f794b975200c",
                    "title": "Incident Commander",
                    "description": "The incident commander is the person responsible for all aspects of the incident response, including quickly developing incident objectives, managing all incident operations, application of resources as well as responsibility for all persons involved. The incident commander sets priorities and defines the organization of the incident response teams and the overall incident action plan.",
                    "creation_date": "2022-07-08T10:29:36.431801Z",
                    "rank": 1
                  }
                ]
              }
            },
            {
              "name": "Retrieve Team - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve Team - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve Team - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Update Team",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": {
                "name": "Modified Team"
              },
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/",
            "description": "### Update Team Details\n\nThis endpoint allows the user to update the details of a specific team within their account.\n\n#### Request Body\n\n- `name` (string, required): The updated name of the team.\n    \n\n#### Response\n\nThe response will include the updated details of the team, including:\n\n- `unique_id` (string): The unique identifier of the team.\n    \n- `name` (string): The name of the team.\n    \n- `account` (string): The account to which the team belongs.\n    \n- `creation_date` (string): The date of team creation.\n    \n- `members` (array): An array of team members, each containing:\n    - `unique_id` (string): The unique identifier of the member.\n        \n    - `team` (string): The team to which the member belongs.\n        \n    - `user` (object): Details of the user, including:\n        - `username` (string): The username of the user.\n            \n        - `first_name` (string): The first name of the user.\n            \n        - `last_name` (string): The last name of the user.\n            \n        - `email` (string): The email address of the user.\n            \n    - `joining_date` (string): The date the member joined the team.\n        \n    - `role` (integer): The role of the member within the team.\n        \n- `owner` (string): The owner of the team.\n    \n- `roles` (array): An array of team roles, each containing:\n    - `unique_id` (string): The unique identifier of the role.\n        \n    - `team` (string): The team to which the role belongs.\n        \n    - `title` (string): The title of the role.\n        \n    - `description` (string): The description of the role.\n        \n    - `creation_date` (string): The date of role creation.\n        \n    - `rank` (integer): The rank of the role."
          },
          "response": [
            {
              "name": "Update Team - 200 OK",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Modified Team"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "61010821-08aa-4098-94f8-f88f1990b54a",
                "name": "Modified Production Team",
                "account": "0713dc12-40b0-46ff-b0f9-c6b126399277",
                "creation_date": "2022-07-08",
                "members": [
                  {
                    "unique_id": "d916157c-ff8b-43be-8e99-4b63699fdf72",
                    "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                    "user": {
                      "username": "216bba3d-7268-4a8e-89e9-6",
                      "first_name": "Anshul",
                      "last_name": "Rajput",
                      "email": "anshulrajput229@gmail.com"
                    },
                    "joining_date": "2022-07-08T10:41:36.600148Z",
                    "role": 1
                  }
                ],
                "owner": "216bba3d-7268-4a8e-89e9-6",
                "roles": [
                  {
                    "unique_id": "89752b4a-43df-401d-9dc0-a446690a7a0e",
                    "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                    "title": "Incident Commander",
                    "description": "The incident commander is the person responsible for all aspects of the incident response, including quickly developing incident objectives, managing all incident operations, application of resources as well as responsibility for all persons involved. The incident commander sets priorities and defines the organization of the incident response teams and the overall incident action plan.",
                    "creation_date": "2022-07-08T10:41:36.623257Z",
                    "rank": 1
                  }
                ]
              }
            },
            {
              "name": "Update Team - 400 Bad Request",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Modified Team"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Update Team - 403 Forbidden",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Modified Team"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Update Team - 404 Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Modified Team"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete Team",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/",
            "description": "\n### DELETE /api/account/teams/{{team_id}}/\n\nThis endpoint is used to delete the specified team.\n\n#### Request Body\nThis request does not require a request body.\n\n#### Response\nThe response will not contain a response body. The status code will indicate the success or failure of the deletion operation.\n"
          },
          "response": [
            {
              "name": "Delete Team - 400 Bad Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete Team - 403 Forbidden",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete Team - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "All the API endpoints related to Teams."
    },
    {
      "name": "Team Members",
      "item": [
        {
          "name": "Add member",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"user\": \"{{user_uuid}}\", // example: e6dfb7a0-a2f0-4799-b1e7-b9528243d53b\n    \"role\": 2 // Default role is 2 [1 - Manager Role, 2 - User Role] \n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/members/",
            "description": "\n### Add Team Member\nThis endpoint allows you to add a new member to a specific team.\n\n#### Request Body\n- user (string, required): The ID of the user to be added to the team.\n\n#### Response\n- unique_id (string): The unique ID of the team member.\n- team (string): The ID of the team.\n- user (string): The ID of the user.\n- joining_date (string): The date when the user joined the team.\n- role (integer): The role of the user in the team (0 - member, 1 - admin).\n\n"
          },
          "response": [
            {
              "name": "Add member - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"user\": {{user_id}}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/members/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "828e4a7b-bb12-4ffc-baa5-7681634d4f7f",
                "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                "user": "507dfda0-a1fd-40e5-943a-e",
                "joining_date": "2022-07-08T11:09:38.230395Z",
                "role": 2
              }
            },
            {
              "name": "Add member - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"user\": {{user_id}}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/members/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Add member - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"user\": {{user_id}}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/members/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Add member - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"user\": {{user_id}}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/members/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List members",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/members/",
            "description": "\n### Get Team Members\n\nThis endpoint retrieves all the members of a specific team.\n\n#### Request\n\n- Method: `GET`\n- URL: `{{host}}/api/account/teams/{{team_id}}/members/`\n\n#### Response\n\nThe response for this request can be documented as a JSON schema:\n\n```json\n{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"unique_id\": {\n                \"type\": \"string\"\n            },\n            \"team\": {\n                \"type\": \"string\"\n            },\n            \"user\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"username\": {\n                        \"type\": \"string\"\n                    },\n                    \"first_name\": {\n                        \"type\": \"string\"\n                    },\n                    \"last_name\": {\n                        \"type\": \"string\"\n                    },\n                    \"email\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"joining_date\": {\n                \"type\": \"string\"\n            },\n            \"role\": {\n                \"type\": \"integer\"\n            }\n        }\n    }\n}\n```\n"
          },
          "response": [
            {
              "name": "List members - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/members/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "unique_id": "d916157c-ff8b-43be-8e99-4b63699fdf72",
                  "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                  "user": {
                    "username": "216bba3d-7268-4a8e-89e9-6",
                    "first_name": "Anshul",
                    "last_name": "Rajput",
                    "email": "anshulrajput229@gmail.com"
                  },
                  "joining_date": "2022-07-08T10:41:36.600148Z",
                  "role": 1
                },
                {
                  "unique_id": "828e4a7b-bb12-4ffc-baa5-7681634d4f7f",
                  "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                  "user": {
                    "username": "507dfda0-a1fd-40e5-943a-e",
                    "first_name": "Mary",
                    "last_name": "Jane",
                    "email": "maryjane@sharklasers.com"
                  },
                  "joining_date": "2022-07-08T11:09:38.230395Z",
                  "role": 2
                }
              ]
            },
            {
              "name": "List members - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/members/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List members - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/members/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List members - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/members/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve member",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/members/{{member_id}}/",
            "description": "# Account Team Member Details\n\nThis endpoint retrieves the details of a specific member within a team.\n\n## Request\n\n### Path Parameters\n\n- `team_id` (string, required): The unique identifier of the team.\n    \n- `member_id` (string, required): The unique identifier of the member.\n    \n\n### Response\n\nThe response will be a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"unique_id\": {\n      \"type\": \"string\"\n    },\n    \"team\": {\n      \"type\": \"string\"\n    },\n    \"user\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"username\": {\n          \"type\": \"string\"\n        },\n        \"first_name\": {\n          \"type\": \"string\"\n        },\n        \"last_name\": {\n          \"type\": \"string\"\n        },\n        \"email\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"joining_date\": {\n      \"type\": \"string\"\n    },\n    \"role\": {\n      \"type\": \"integer\"\n    }\n  }\n}\n\n ```"
          },
          "response": [
            {
              "name": "Retrieve member - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/members/{{member_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "828e4a7b-bb12-4ffc-baa5-7681634d4f7f",
                "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                "user": {
                  "username": "507dfda0-a1fd-40e5-943a-e",
                  "first_name": "Mary",
                  "last_name": "Jane",
                  "email": "maryjane@sharklasers.com"
                },
                "joining_date": "2022-07-08T11:09:38.230395Z",
                "role": 2
              }
            },
            {
              "name": "Retrieve member - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/members/{{member_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve member - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/members/{{member_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve member - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/members/{{member_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Update member",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"user\": \"{{user_uuid}}\", // example: e6dfb7a0-a2f0-4799-b1e7-b9528243d53b\n    \"role\": 2 // Default role is 2 [1 - Manager Role, 2 - User Role] \n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/members/{{member_id}}/",
            "description": "### Update Team Member Role\n\nThis endpoint allows updating the role of a specific member within a team.\n\n#### Request\n\n- Method: PUT\n    \n- URL: `{{host}}/api/account/teams/{{team_id}}/members/{{member_id}}/`\n    \n- Body:\n    - `role` (number): The new role for the member.\n        \n    - `user` (string): The ID of the user whose role is being updated.\n        \n\n#### Response\n\nThe response for this request can be described using the following JSON schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"unique_id\": {\"type\": \"string\"},\n    \"team\": {\"type\": \"string\"},\n    \"user\": {\"type\": \"string\"},\n    \"joining_date\": {\"type\": \"string\"},\n    \"role\": {\"type\": \"number\"}\n  }\n}\n\n ```"
          },
          "response": [
            {
              "name": "Update member - 200 OK",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"role\": 1,\n    \"user\": {{user_id}}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/members/{{member_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "828e4a7b-bb12-4ffc-baa5-7681634d4f7f",
                "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                "user": "507dfda0-a1fd-40e5-943a-e",
                "joining_date": "2022-07-08T11:09:38.230395Z",
                "role": 1
              }
            },
            {
              "name": "Update member - 400 Bad Request",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"role\": 1,\n    \"user\": {{user_id}}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/members/{{member_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Update member - 403 Forbidden",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"role\": 1,\n    \"user\": {{user_id}}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/members/{{member_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Update member - 404 Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"role\": 1,\n    \"user\": {{user_id}}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/members/{{member_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete member",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/members/{{member_id}}/",
            "description": "### Delete Team Member\n\nThis endpoint is used to remove a specific member from a team.\n\n#### Request Body\n\nThis request does not require a request body.\n\n#### Response\n\nThe response will not contain a response body. The status code will indicate the success or failure of the operation."
          },
          "response": [
            {
              "name": "Delete member - 400 Bad Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/members/{{member_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete member - 403 Forbidden",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/members/{{member_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete member - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/members/{{member_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "All the operations related to the members of a specific team."
    },
    {
      "name": "Team Permissions",
      "item": [
        {
          "name": "List Team Permissions",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/permissions/",
            "description": "### Get Team Permissions\n\nThis endpoint retrieves the permissions for a specific team within the account.\n\n#### Request\n\n- Method: GET\n    \n- URL: `{{host}}/api/account/teams/{{team_id}}/permissions/`\n    \n\n#### Response\n\nThe response for this request can be represented as a JSON schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"unique_id\": {\n            \"type\": \"string\"\n        },\n        \"account_permissions\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        }\n    }\n}\n\n ```\n\nThe response body contains the following properties:\n\n- `unique_id` (string): Represents the unique identifier for the team.\n    \n- `account_permissions` (array of strings): Contains the permissions assigned to the team."
          },
          "response": [
            {
              "name": "List Team Permissions - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/permissions/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "5f9a92c2-ddf2-4e71-862c-b4bbe959df24",
                "account_permissions": [
                  "schedule_read",
                  "member_read",
                  "team_read",
                  "sla_read",
                  "incident_read",
                  "incident_role_read",
                  "escalation_policy_read",
                  "tag_read",
                  "service_read",
                  "task_template_read",
                  "priority_read"
                ]
              }
            },
            {
              "name": "List Team Permissions - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/permissions/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List Team Permissions - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/permissions/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List Team Permissions - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/permissions/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Update Team Permissions",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"account_permissions\": [\n        \"member_read\",\n        \"schedule_read\",\n        \"team_read\",\n        \"sla_read\"\n    ]\n}\n// List of all the permissions - [\"analytics_read\",\"escalation_policy_attach\", \"escalation_policy_read\", \"incident_read\", \"incident_role_read\", \"incident_write\", \"integration_read\", \"maintenance_read\", \"member_read\", \"postmortem_read\", \"post_incident_task_read\", \"priority_read\", \"schedule_attach\", \"schedule_read\", \"service_read\", \"sla_read\", \"stakeholder_template_read\", \"tag_read\", \"task_template_read\", \"team_read\"]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/permissions/",
            "description": "### Update Team Permissions\n\nThis endpoint allows the user to update the permissions for a specific team within their account.\n\n#### Request Body\n\n- `account_permissions` (array of strings) - Specifies the permissions to be assigned to the team.\n    \n\n#### Response\n\nThe response will be a JSON object with the following schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"unique_id\": {\n            \"type\": \"string\"\n        },\n        \"account_permissions\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        }\n    }\n}\n\n ```\n\nThe response will include the unique ID of the team and the updated account permissions.\n\n#### Example\n\nRequest:\n\n``` json\n{\n    \"account_permissions\": [\"\"]\n}\n\n ```\n\nResponse:\n\n``` json\n{\n    \"unique_id\": \"\",\n    \"account_permissions\": [\"\"]\n}\n\n ```"
          },
          "response": [
            {
              "name": "Update Team Permissions - 200 OK",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "account_permissions": [
                      "member_read",
                      "schedule_read",
                      "team_read",
                      "sla_read"
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/permissions/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "5f9a92c2-ddf2-4e71-862c-b4bbe959df24",
                "account_permissions": [
                  "schedule_read",
                  "member_read",
                  "team_read",
                  "sla_read",
                  "incident_read",
                  "incident_role_read",
                  "escalation_policy_read",
                  "tag_read",
                  "service_read",
                  "task_template_read",
                  "priority_read"
                ]
              }
            },
            {
              "name": "Update Team Permissions - 400 Bad Request",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "account_permissions": [
                      "member_read",
                      "schedule_read",
                      "team_read",
                      "sla_read"
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/permissions/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Update Team Permissions - 403 Forbidden",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "account_permissions": [
                      "member_read",
                      "schedule_read",
                      "team_read",
                      "sla_read"
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/permissions/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Update Team Permissions - 404 Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "account_permissions": [
                      "member_read",
                      "schedule_read",
                      "team_read",
                      "sla_read"
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/permissions/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "This API endpoint will handle all the operations related to Team Permission."
    },
    {
      "name": "Schedules",
      "item": [
        {
          "name": "Create Schedule",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"New Schedule\",\n    \"summary\": \"Summary for the new Schedule\",\n    \"descripition\": \"This is the description for the new Schedule\",\n    \"time_zone\": \"Asia/Kolkata\",\n    \"layers\": [\n        {\n            \"shift_length\": 32400, //Shift length in seconds \n            \"restrictions\": [\n                {\n                    \"duration\": 32400, ////Duration in seconds\n                    \"start_day_of_week\": 1, // [1 - Monday, 2 - Tuesday, 3 - Wednesday, 4 - Thrusday, 5 - Friday, 6 - Saturday, 7 - Sunday]\n                    \"start_time_of_day\": \"08:00:00\" //Format of time in hh:mm:ss\n                },\n                {\n                    \"duration\": 32400,\n                    \"start_day_of_week\": 2,\n                    \"start_time_of_day\": \"08:00:00\"\n                },\n                {\n                    \"duration\": 32400,\n                    \"start_day_of_week\": 3,\n                    \"start_time_of_day\": \"08:00:00\"\n                },\n                {\n                    \"duration\": 32400,\n                    \"start_day_of_week\": 4,\n                    \"start_time_of_day\": \"08:00:00\"\n                },\n                {\n                    \"duration\": 32400,\n                    \"start_day_of_week\": 5,\n                    \"start_time_of_day\": \"08:00:00\"\n                }\n            ],\n            \"name\": \"Weekday-1 (8 to 5)\",\n            \"users\": [\n                {\n                    \"user\": \"39569d4b-6540-4b64-a086-6\",\n                    \"position\": 1,\n                    \"unique_id\": \"875602c1-93e5-4b3c-8481-6c0d8440ea6e\"\n                }\n            ],\n            \"rotation_start_time\": \"2024-07-22T02:30:00Z\",\n            \"rotation_end_time\": null,\n            \"restriction_type\": 2, //Restriction type: [1 - Day, 2 - Week]\n            \"is_active\": true\n        }\n        ],\n    \"overrides\": \"\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/schedule/",
            "description": "\n### Create New Schedule\n\nThis POST request is used to create a new schedule for a specific team.\n\n#### Request Body\n- `name` (string): The name of the schedule.\n- `summary` (string): Summary of the schedule.\n- `description` (string): Description of the schedule.\n- `time_zone` (string): Time zone for the schedule.\n- `layers` (array): Array of layers for the schedule.\n- `overrides` (array): Array of overrides for the schedule.\n\nExample:\n```json\n{\n  \"name\": \"\",\n  \"summary\": \"\",\n  \"description\": \"\",\n  \"time_zone\": \"\",\n  \"layers\": [ ],\n  \"overrides\": [ ]\n}\n```\n\n#### Response\nThe response of this request is represented as a JSON schema:\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": { \"type\": \"string\" },\n    \"summary\": { \"type\": \"string\" },\n    \"description\": { \"type\": \"string\" },\n    \"time_zone\": { \"type\": \"string\" },\n    \"team\": { \"type\": \"string\" },\n    \"layers\": { \"type\": \"array\" },\n    \"overrides\": { \"type\": \"array\" },\n    \"unique_id\": { \"type\": \"string\" }\n  }\n}\n```\n"
          },
          "response": [
            {
              "name": "Create Schedule - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "New Schedule",
                    "summary": "Summary for the new Schedule",
                    "descripition": "This is the description for the new Schedule",
                    "time_zone": "Asia/Kolkata",
                    "layers": "",
                    "overrides": ""
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/schedule/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "name": "Daily Schedule",
                "summary": "Daily on call schedule for modified production team",
                "description": "",
                "time_zone": "Asia/Kolkata",
                "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                "layers": [],
                "overrides": [],
                "unique_id": "dadcec8e-e4d7-4e76-8a24-d8d6c1278d1f"
              }
            },
            {
              "name": "Create Schedule - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "New Schedule",
                    "summary": "Summary for the new Schedule",
                    "descripition": "This is the description for the new Schedule",
                    "time_zone": "Asia/Kolkata",
                    "layers": "",
                    "overrides": ""
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/schedule/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create Schedule - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "New Schedule",
                    "summary": "Summary for the new Schedule",
                    "descripition": "This is the description for the new Schedule",
                    "time_zone": "Asia/Kolkata",
                    "layers": "",
                    "overrides": ""
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/schedule/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create Schedule - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "New Schedule",
                    "summary": "Summary for the new Schedule",
                    "descripition": "This is the description for the new Schedule",
                    "time_zone": "Asia/Kolkata",
                    "layers": "",
                    "overrides": ""
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/schedule/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List Schedules",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/schedule/",
            "description": "\n### Get Team Schedule\n\n#### Description\nThis endpoint retrieves all the schedules for a specific team.\n\n#### Request\n- Method: GET\n- URL: `{{host}}/api/account/teams/{{team_id}}/schedule/`\n\n#### Response\nThe response will include an array of schedules, each containing the following fields:\n- `name` (string): The name of the schedule.\n- `summary` (string): Summary of the schedule.\n- `description` (string): Description of the schedule.\n- `time_zone` (string): Time zone of the schedule.\n- `team` (string): The team associated with the schedule.\n- `layers` (array): An array of schedule layers, each containing:\n  - `shift_length` (number): The length of the shift.\n  - `restrictions` (array): An array of restrictions for the layer, each containing:\n    - `duration` (number): The duration of the restriction.\n    - `start_day_of_week` (number): The start day of the week for the restriction.\n    - `start_time_of_day` (string): The start time of day for the restriction.\n    - `unique_id` (string): The unique ID of the restriction.\n  - `name` (string): The name of the layer.\n  - `users` (array): An array of users for the layer, each containing:\n    - `user` (string): The user associated with the layer.\n    - `position` (number): The position of the user.\n    - `unique_id` (string): The unique ID of the user.\n  - `rotation_start_time` (string): The rotation start time.\n  - `rotation_end_time` (string): The rotation end time.\n  - `unique_id` (string): The unique ID of the layer.\n  - `last_edited` (string): The last edited timestamp.\n  - `restriction_type` (number): The type of restriction.\n  - `is_active` (boolean): Indicates if the layer is active.\n- `overrides` (array): An array of overrides for the schedule, each containing:\n  - `name` (string): The name of the override.\n  - `user` (string): The user associated with the override.\n  - `start_time` (string): The start time of the override.\n  - `end_time` (string): The end time of the override.\n  - `unique_id` (string): The unique ID of the override.\n- `unique_id` (string): The unique ID of the schedule.\n\n"
          },
          "response": [
            {
              "name": "List Schedules - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/schedule/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "name": "Weekly Schedule",
                  "summary": "Weekly on call schedule for modified production team.",
                  "description": "",
                  "time_zone": "Asia/Calcutta",
                  "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                  "layers": [
                    {
                      "shift_length": 604800,
                      "restrictions": [
                        {
                          "duration": 14400,
                          "start_day_of_week": 7,
                          "start_time_of_day": "00:00:00",
                          "unique_id": "35199b5e-a4ce-4456-8b97-2f3ee2083a85"
                        }
                      ],
                      "name": "Schedule Layer 1",
                      "users": [
                        {
                          "user": "216bba3d-7268-4a8e-89e9-6",
                          "position": 1,
                          "unique_id": "d8772886-1812-4a03-9a48-051d34547cf4"
                        },
                        {
                          "user": "507dfda0-a1fd-40e5-943a-e",
                          "position": 2,
                          "unique_id": "8c3c8573-3e3c-442d-accd-4a62fee485e9"
                        }
                      ],
                      "rotation_start_time": "2022-07-08T11:26:33Z",
                      "rotation_end_time": "2023-07-15T11:26:33Z",
                      "unique_id": "a5ec8d44-572b-4ecd-9935-078aef6a2837",
                      "last_edited": "2022-07-08T11:28:47.218341Z",
                      "restriction_type": 1,
                      "is_active": true
                    }
                  ],
                  "overrides": [
                    {
                      "name": "Override for Anshul",
                      "user": "507dfda0-a1fd-40e5-943a-e",
                      "start_time": "2022-07-09T05:57:14Z",
                      "end_time": "2022-07-10T05:57:14Z",
                      "unique_id": "b4492ce7-7d6e-4ed1-8f41-e7c8bf4f4dfe"
                    }
                  ],
                  "unique_id": "4a3025f3-836f-4d18-8923-7adfe5690d17"
                },
                {
                  "name": "Daily Schedule",
                  "summary": "Daily on call schedule for modified production team",
                  "description": "",
                  "time_zone": "Asia/Kolkata",
                  "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                  "layers": [],
                  "overrides": [],
                  "unique_id": "dadcec8e-e4d7-4e76-8a24-d8d6c1278d1f"
                }
              ]
            },
            {
              "name": "List Schedules - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/schedule/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List Schedules - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/schedule/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List Schedules - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/schedule/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve Schedule",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/schedules/{{schedule_id}}/",
            "description": "\nThis request will get the Schedule by the specific ID. \n\n### Response\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\"type\": \"string\"},\n    \"summary\": {\"type\": \"string\"},\n    \"description\": {\"type\": \"string\"},\n    \"time_zone\": {\"type\": \"string\"},\n    \"team\": {\"type\": \"string\"},\n    \"layers\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"shift_length\": {\"type\": \"integer\"},\n          \"restrictions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"duration\": {\"type\": \"integer\"},\n                \"start_day_of_week\": {\"type\": \"integer\"},\n                \"start_time_of_day\": {\"type\": \"string\"},\n                \"unique_id\": {\"type\": \"string\"}\n              }\n            }\n          },\n          \"name\": {\"type\": \"string\"},\n          \"users\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"user\": {\"type\": \"string\"},\n                \"position\": {\"type\": \"integer\"},\n                \"unique_id\": {\"type\": \"string\"}\n              }\n            }\n          },\n          \"rotation_start_time\": {\"type\": \"string\"},\n          \"rotation_end_time\": {\"type\": \"string\"},\n          \"unique_id\": {\"type\": \"string\"},\n          \"last_edited\": {\"type\": \"string\"},\n          \"restriction_type\": {\"type\": \"integer\"},\n          \"is_active\": {\"type\": \"boolean\"}\n        }\n      }\n    },\n    \"overrides\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\"type\": \"string\"},\n          \"user\": {\"type\": \"string\"},\n          \"start_time\": {\"type\": \"string\"},\n          \"end_time\": {\"type\": \"string\"},\n          \"unique_id\": {\"type\": \"string\"}\n        }\n      }\n    },\n    \"unique_id\": {\"type\": \"string\"}\n  }\n}\n```\n"
          },
          "response": [
            {
              "name": "Retrieve Schedule - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/schedules/{{schedule_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "name": "Weekly Schedule",
                "summary": "Weekly on call schedule for modified production team.",
                "description": "",
                "time_zone": "Asia/Calcutta",
                "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                "layers": [
                  {
                    "shift_length": 604800,
                    "restrictions": [
                      {
                        "duration": 14400,
                        "start_day_of_week": 7,
                        "start_time_of_day": "00:00:00",
                        "unique_id": "35199b5e-a4ce-4456-8b97-2f3ee2083a85"
                      }
                    ],
                    "name": "Schedule Layer 1",
                    "users": [
                      {
                        "user": "216bba3d-7268-4a8e-89e9-6",
                        "position": 1,
                        "unique_id": "d8772886-1812-4a03-9a48-051d34547cf4"
                      },
                      {
                        "user": "507dfda0-a1fd-40e5-943a-e",
                        "position": 2,
                        "unique_id": "8c3c8573-3e3c-442d-accd-4a62fee485e9"
                      }
                    ],
                    "rotation_start_time": "2022-07-08T11:26:33Z",
                    "rotation_end_time": "2023-07-15T11:26:33Z",
                    "unique_id": "a5ec8d44-572b-4ecd-9935-078aef6a2837",
                    "last_edited": "2022-07-08T11:28:47.218341Z",
                    "restriction_type": 1,
                    "is_active": true
                  }
                ],
                "overrides": [
                  {
                    "name": "Override for Anshul",
                    "user": "507dfda0-a1fd-40e5-943a-e",
                    "start_time": "2022-07-09T05:57:14Z",
                    "end_time": "2022-07-10T05:57:14Z",
                    "unique_id": "b4492ce7-7d6e-4ed1-8f41-e7c8bf4f4dfe"
                  }
                ],
                "unique_id": "4a3025f3-836f-4d18-8923-7adfe5690d17"
              }
            },
            {
              "name": "Retrieve Schedule - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/schedules/{{schedule_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve Schedule - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/schedules/{{schedule_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve Schedule - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/schedules/{{schedule_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Update Schedule",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"New Schedule\",\n    \"summary\": \"Summary for the new Schedule\",\n    \"descripition\": \"This is the description for the new Schedule\",\n    \"time_zone\": \"Asia/Kolkata\",\n    \"layers\": [\n        {\n            \"shift_length\": 32400, //Shift length in seconds \n            \"restrictions\": [\n                {\n                    \"duration\": 32400, ////Duration in seconds\n                    \"start_day_of_week\": 1, // [1 - Monday, 2 - Tuesday, 3 - Wednesday, 4 - Thrusday, 5 - Friday, 6 - Saturday, 7 - Sunday]\n                    \"start_time_of_day\": \"08:00:00\" //Format of time in hh:mm:ss\n                },\n                {\n                    \"duration\": 32400,\n                    \"start_day_of_week\": 2,\n                    \"start_time_of_day\": \"08:00:00\"\n                },\n                {\n                    \"duration\": 32400,\n                    \"start_day_of_week\": 3,\n                    \"start_time_of_day\": \"08:00:00\"\n                },\n                {\n                    \"duration\": 32400,\n                    \"start_day_of_week\": 4,\n                    \"start_time_of_day\": \"08:00:00\"\n                },\n                {\n                    \"duration\": 32400,\n                    \"start_day_of_week\": 5,\n                    \"start_time_of_day\": \"08:00:00\"\n                }\n            ],\n            \"name\": \"Weekday-1 (8 to 5)\",\n            \"users\": [\n                {\n                    \"user\": \"39569d4b-6540-4b64-a086-6\",\n                    \"position\": 1,\n                    \"unique_id\": \"875602c1-93e5-4b3c-8481-6c0d8440ea6e\"\n                }\n            ],\n            \"rotation_start_time\": \"2024-07-22T02:30:00Z\",\n            \"rotation_end_time\": null,\n            \"restriction_type\": 2, //Restriction type: [1 - Day, 2 - Week]\n            \"is_active\": true\n        }\n        ],\n    \"overrides\": \"\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/schedules/{{schedule_id}}/",
            "description": "\n### Update Schedule\n\nThis endpoint allows you to update the details of a specific schedule within a team.\n\n#### Request Body\n- **name** (string, required): The new name for the schedule.\n\n#### Response\n- **name** (string): The updated name of the schedule.\n- **summary** (string): The summary of the schedule.\n- **description** (string): The description of the schedule.\n- **time_zone** (string): The time zone of the schedule.\n- **team** (string): The team associated with the schedule.\n- **layers** (array): An array of layers associated with the schedule.\n- **overrides** (array): An array of overrides for the schedule.\n- **unique_id** (string): The unique ID of the schedule.\n\n"
          },
          "response": [
            {
              "name": "Update Schedule - 200 OK",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Modified weekly Schedule"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/schedules/{{schedule_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "name": "Modified daily Schedule",
                "summary": "Daily on call schedule for modified production team",
                "description": "",
                "time_zone": "Asia/Kolkata",
                "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                "layers": [],
                "overrides": [],
                "unique_id": "dadcec8e-e4d7-4e76-8a24-d8d6c1278d1f"
              }
            },
            {
              "name": "Update Schedule - 400 Bad Request",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Modified weekly Schedule"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/schedules/{{schedule_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Update Schedule - 403 Forbidden",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Modified weekly Schedule"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/schedules/{{schedule_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Update Schedule - 404 Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Modified weekly Schedule"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/schedules/{{schedule_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete Schedule",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/schedules/{{schedule_id}}/",
            "description": "\n### HTTP DELETE /api/account/teams/{{team_id}}/schedules/{{schedule_id}}/\n\nThis endpoint is used to delete a specific schedule for a team.\n\n#### Request Body\nThis request does not require a request body.\n\n#### Response\nThe response will not contain a response body.\n"
          },
          "response": [
            {
              "name": "Delete Schedule - 400 Bad Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/schedules/{{schedule_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete Schedule - 403 Forbidden",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/schedules/{{schedule_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete Schedule - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/schedules/{{schedule_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "This endpoint will handle all the operations related to Schedules."
    },
    {
      "name": "Escalation Policies",
      "item": [
        {
          "name": "Create Escalation Policy",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"Production Escalation Policy\",\r\n    \"summary\": \"Summary goes here\",\r\n    \"description\": \"Description goes here\",\r\n    \"rules\": [\r\n        {\r\n            \"delay\": 0, // An integer that represents the amount of time before the escalation of the Escalation Policy after the incident is created\r\n            \"targets\": [\r\n                {\r\n                    \"target_type\": 1, //Type 1 - Schedule , Type 2 - User\r\n                    \"target_id\": \"82d02226-2009-4f9b-8acd-5eec24e5f064\", //Schedule Unique ID or User Unique ID\r\n                    \"position\": 0 //An integer that represents the Schedule/User position\r\n                },\r\n                {\r\n                    \"target_type\": 2,\r\n                    \"target_id\": \"095305da-4a6f-4dc4-aa7a-f\",\r\n                    \"position\": 1 \r\n                }\r\n            ],\r\n            \"position\": 1 //An integer that represents the Escalation Policy Rule position\r\n        }\r\n    ]\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/",
            "description": "\n### Create New Escalation Policy\n\nThis endpoint allows you to create a new escalation policy for a specific team.\n\n#### Request Body\n- `name` (string, required): The name of the escalation policy.\n- `summary` (string, required): A summary of the escalation policy.\n- `description` (string, required): A detailed description of the escalation policy.\n- `rules` (array, required): An array of rules for the escalation policy, each containing:\n  - `delay` (number, required): The delay in minutes for the rule.\n  - `targets` (array, required): An array of targets for the rule, each containing:\n    - `target_type` (number, required): The type of target.\n    - `target_id` (string, required): The ID of the target.\n  - `position` (number, required): The position of the rule.\n\n#### Response Body\n- `name` (string): The name of the created escalation policy.\n- `summary` (string): A summary of the created escalation policy.\n- `description` (string): A detailed description of the created escalation policy.\n- `rules` (array): An array of rules for the created escalation policy, each containing:\n  - `delay` (number): The delay in minutes for the rule.\n  - `targets` (array): An array of targets for the rule, each containing:\n    - `target_type` (number): The type of target.\n    - `target_id` (string): The ID of the target.\n  - `position` (number): The position of the rule.\n  - `unique_id` (string): The unique ID of the rule.\n- `unique_id` (string): The unique ID of the created escalation policy.\n- `team` (string): The team associated with the created escalation policy.\n- `repeat_policy` (number): The repeat policy for the created escalation policy.\n- `move_to_next` (boolean): Indicates whether to move to the next escalation policy.\n- `global_ep` (boolean): Indicates whether the created escalation policy is global.\n\n"
          },
          "response": [
            {
              "name": "Create Escalation Policy - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Production Escalation Policy",
                    "summary": "Summary goes here",
                    "description": "Description goes here",
                    "rules": [
                      {
                        "delay": 2,
                        "targets": [
                          {
                            "target_type": 2,
                            "target_id": "85b563c8-18d0-4668-9462-9"
                          }
                        ],
                        "position": 1
                      }
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "name": "Production Escalation Policy",
                "summary": "",
                "description": "",
                "rules": [
                  {
                    "delay": 2,
                    "targets": [
                      {
                        "target_type": 2,
                        "target_id": "85b563c8-18d0-4668-9462-9"
                      }
                    ],
                    "position": 1,
                    "unique_id": "32b594ec-72f6-4eeb-8024-ef25a8b9f97e"
                  }
                ],
                "unique_id": "904cfcad-9fe1-4dc7-b578-ad0f5a2950fd",
                "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                "repeat_policy": 0,
                "move_to_next": true,
                "global_ep": false
              }
            },
            {
              "name": "Create Escalation Policy - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Production Escalation Policy",
                    "summary": "Summary goes here",
                    "description": "Description goes here",
                    "rules": [
                      {
                        "delay": 2,
                        "targets": [
                          {
                            "target_type": 2,
                            "target_id": "85b563c8-18d0-4668-9462-9"
                          }
                        ],
                        "position": 1
                      }
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create Escalation Policy - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Production Escalation Policy",
                    "summary": "Summary goes here",
                    "description": "Description goes here",
                    "rules": [
                      {
                        "delay": 2,
                        "targets": [
                          {
                            "target_type": 2,
                            "target_id": "85b563c8-18d0-4668-9462-9"
                          }
                        ],
                        "position": 1
                      }
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create Escalation Policy - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Production Escalation Policy",
                    "summary": "Summary goes here",
                    "description": "Description goes here",
                    "rules": [
                      {
                        "delay": 2,
                        "targets": [
                          {
                            "target_type": 2,
                            "target_id": "85b563c8-18d0-4668-9462-9"
                          }
                        ],
                        "position": 1
                      }
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List Escalation Policies",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/",
            "description": "\n### Get Team Escalation Policies\n\nThis endpoint retrieves the escalation policies for the specified team.\n\n#### Response\nThe response for this request can be documented as a JSON schema:\n\n```json\n{\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"name\": {\"type\": \"string\"},\n      \"summary\": {\"type\": \"string\"},\n      \"description\": {\"type\": \"string\"},\n      \"rules\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"delay\": {\"type\": \"integer\"},\n            \"targets\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"target_type\": {\"type\": \"integer\"},\n                  \"target_id\": {\"type\": \"string\"}\n                }\n              }\n            },\n            \"position\": {\"type\": \"integer\"},\n            \"unique_id\": {\"type\": \"string\"}\n          }\n        }\n      },\n      \"unique_id\": {\"type\": \"string\"},\n      \"team\": {\"type\": \"string\"},\n      \"repeat_policy\": {\"type\": \"integer\"},\n      \"move_to_next\": {\"type\": \"boolean\"},\n      \"global_ep\": {\"type\": \"boolean\"}\n    }\n  }\n}\n```\n"
          },
          "response": [
            {
              "name": "List Escalation Policies - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "name": "Default Escalation Policy",
                  "summary": "This is the default escalation policy for this team",
                  "description": "",
                  "rules": [
                    {
                      "delay": 0,
                      "targets": [
                        {
                          "target_type": 2,
                          "target_id": "216bba3d-7268-4a8e-89e9-6"
                        }
                      ],
                      "position": 1,
                      "unique_id": "a857eb8b-28bf-4503-a1d5-a1d737c48fdc"
                    }
                  ],
                  "unique_id": "19fdd4c3-0d4a-4a6e-9885-8c8d33ef1488",
                  "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                  "repeat_policy": 0,
                  "move_to_next": true,
                  "global_ep": false
                },
                {
                  "name": "Infra Escalation Policy",
                  "summary": "",
                  "description": "",
                  "rules": [
                    {
                      "delay": 0,
                      "targets": [
                        {
                          "target_type": 1,
                          "target_id": "4a3025f3-836f-4d18-8923-7adfe5690d17"
                        },
                        {
                          "target_type": 2,
                          "target_id": "507dfda0-a1fd-40e5-943a-e"
                        },
                        {
                          "target_type": 2,
                          "target_id": "85b563c8-18d0-4668-9462-9"
                        }
                      ],
                      "position": 1,
                      "unique_id": "23077ffc-8529-4848-89d0-1a37bdf63d4e"
                    },
                    {
                      "delay": 4,
                      "targets": [
                        {
                          "target_type": 2,
                          "target_id": "216bba3d-7268-4a8e-89e9-6"
                        }
                      ],
                      "position": 2,
                      "unique_id": "5298ba34-f23d-49a6-a4a2-814a7beb4b54"
                    }
                  ],
                  "unique_id": "9ea1f98d-b5a3-4d72-8057-2f5f3d743a44",
                  "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                  "repeat_policy": 2,
                  "move_to_next": true,
                  "global_ep": false
                },
                {
                  "name": "Production Escalation Policy",
                  "summary": "",
                  "description": "",
                  "rules": [
                    {
                      "delay": 2,
                      "targets": [
                        {
                          "target_type": 2,
                          "target_id": "85b563c8-18d0-4668-9462-9"
                        }
                      ],
                      "position": 1,
                      "unique_id": "32b594ec-72f6-4eeb-8024-ef25a8b9f97e"
                    }
                  ],
                  "unique_id": "904cfcad-9fe1-4dc7-b578-ad0f5a2950fd",
                  "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                  "repeat_policy": 0,
                  "move_to_next": true,
                  "global_ep": false
                }
              ]
            },
            {
              "name": "List Escalation Policies - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List Escalation Policies - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List Escalation Policies - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve Escalation Policy",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/{{ep_id}}/",
            "description": "\n### Get Escalation Policy\nThis request retrieves the escalation policy by the specified ID of the Escalation Policy.\n\n#### Request\n- Method: `GET`\n- URL: `{{host}}/api/account/teams/{{team_id}}/escalation_policies/{{ep_id}}/`\n\n#### Response\nThe response for this request can be represented as a JSON schema:\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\"type\": \"string\"},\n    \"summary\": {\"type\": \"string\"},\n    \"description\": {\"type\": \"string\"},\n    \"rules\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"delay\": {\"type\": \"integer\"},\n          \"targets\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"target_type\": {\"type\": \"integer\"},\n                \"target_id\": {\"type\": \"string\"}\n              }\n            }\n          },\n          \"position\": {\"type\": \"integer\"},\n          \"unique_id\": {\"type\": \"string\"}\n        }\n      }\n    },\n    \"unique_id\": {\"type\": \"string\"},\n    \"team\": {\"type\": \"string\"},\n    \"repeat_policy\": {\"type\": \"integer\"},\n    \"move_to_next\": {\"type\": \"boolean\"},\n    \"global_ep\": {\"type\": \"boolean\"}\n  }\n}\n"
          },
          "response": [
            {
              "name": "Retrieve Escalation Policy - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/{{ep_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "name": "Production Escalation Policy",
                "summary": "",
                "description": "",
                "rules": [
                  {
                    "delay": 2,
                    "targets": [
                      {
                        "target_type": 2,
                        "target_id": "85b563c8-18d0-4668-9462-9"
                      }
                    ],
                    "position": 1,
                    "unique_id": "32b594ec-72f6-4eeb-8024-ef25a8b9f97e"
                  }
                ],
                "unique_id": "904cfcad-9fe1-4dc7-b578-ad0f5a2950fd",
                "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                "repeat_policy": 0,
                "move_to_next": true,
                "global_ep": false
              }
            },
            {
              "name": "Retrieve Escalation Policy - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/{{ep_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve Escalation Policy - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/{{ep_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve Escalation Policy - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/{{ep_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Update Escalation Policy",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"Production Escalation Policy\",\r\n    \"summary\": \"Summary goes here\",\r\n    \"description\": \"Description goes here\",\r\n    \"rules\": [\r\n        {\r\n            \"delay\": 0, // An integer that represents the amount of time before the escalation of the Escalation Policy after the incident is created\r\n            \"targets\": [\r\n                {\r\n                    \"target_type\": 1, //Type 1 - Schedule , Type 2 - User\r\n                    \"target_id\": \"82d02226-2009-4f9b-8acd-5eec24e5f064\", //Schedule Unique ID or User Unique ID\r\n                    \"position\": 0 //An integer that represents the Schedule/User position\r\n                },\r\n                {\r\n                    \"target_type\": 2,\r\n                    \"target_id\": \"095305da-4a6f-4dc4-aa7a-f\",\r\n                    \"position\": 1 \r\n                }\r\n            ],\r\n            \"position\": 1 //An integer that represents the Escalation Policy Rule position\r\n        }\r\n    ]\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/{{ep_id}}/",
            "description": "\nThis HTTP PUT request is used to update an escalation policy for a specific team. The request should be made to {{host}}/api/account/teams/{{team_id}}/escalation_policies/{{ep_id}}/.\n\n### Request Body\nThe request body should be in raw format and include the following parameters:\n- `name`: A string representing the name of the escalation policy.\n- `summary`: A string providing a summary of the escalation policy.\n- `description`: A string containing the description of the escalation policy.\n- `rules`: An array of objects representing the rules for the escalation policy, with each object containing:\n  - `delay`: A number representing the delay for the rule.\n  - `targets`: An array of objects representing the targets for the rule, with each object containing:\n    - `target_type`: A number representing the type of target.\n    - `target_id`: A string representing the ID of the target.\n  - `position`: A number representing the position of the rule.\n\n### Response Body\nThe response will include the updated escalation policy with the following parameters:\n- `name`: A string representing the name of the escalation policy.\n- `summary`: A string providing a summary of the escalation policy.\n- `description`: A string containing the description of the escalation policy.\n- `rules`: An array of objects representing the rules for the escalation policy, with each object containing:\n  - `delay`: A number representing the delay for the rule.\n  - `targets`: An array of objects representing the targets for the rule, with each object containing:\n    - `target_type`: A number representing the type of target.\n    - `target_id`: A string representing the ID of the target.\n  - `position`: A number representing the position of the rule.\n  - `unique_id`: A string representing the unique ID of the rule.\n- `unique_id`: A string representing the unique ID of the escalation policy.\n- `team`: A string representing the team associated with the escalation policy.\n- `repeat_policy`: A number representing the repeat policy.\n- `move_to_next`: A boolean indicating whether to move to the next escalation policy.\n- `global_ep`: A boolean indicating whether the escalation policy is global.\n\n"
          },
          "response": [
            {
              "name": "Update Escalation Policy - 200 OK",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Production Escalation Policy",
                    "summary": "Summary goes here",
                    "description": "Description goes here",
                    "rules": [
                      {
                        "delay": 2,
                        "targets": [
                          {
                            "target_type": 2,
                            "target_id": "85b563c8-18d0-4668-9462-9"
                          }
                        ],
                        "position": 1
                      }
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/{{ep_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "name": "Modified Production Escalation Policy",
                "summary": "",
                "description": "",
                "rules": [
                  {
                    "delay": 2,
                    "targets": [
                      {
                        "target_type": 2,
                        "target_id": "85b563c8-18d0-4668-9462-9"
                      }
                    ],
                    "position": 1,
                    "unique_id": "f15f0044-25a1-4c60-888a-c7f1a6b7d4ce"
                  }
                ],
                "unique_id": "904cfcad-9fe1-4dc7-b578-ad0f5a2950fd",
                "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                "repeat_policy": 0,
                "move_to_next": true,
                "global_ep": false
              }
            },
            {
              "name": "Update Escalation Policy - 400 Bad Request",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Production Escalation Policy",
                    "summary": "Summary goes here",
                    "description": "Description goes here",
                    "rules": [
                      {
                        "delay": 2,
                        "targets": [
                          {
                            "target_type": 2,
                            "target_id": "85b563c8-18d0-4668-9462-9"
                          }
                        ],
                        "position": 1
                      }
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/{{ep_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Update Escalation Policy - 403 Forbidden",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Production Escalation Policy",
                    "summary": "Summary goes here",
                    "description": "Description goes here",
                    "rules": [
                      {
                        "delay": 2,
                        "targets": [
                          {
                            "target_type": 2,
                            "target_id": "85b563c8-18d0-4668-9462-9"
                          }
                        ],
                        "position": 1
                      }
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/{{ep_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Update Escalation Policy - 404 Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Production Escalation Policy",
                    "summary": "Summary goes here",
                    "description": "Description goes here",
                    "rules": [
                      {
                        "delay": 2,
                        "targets": [
                          {
                            "target_type": 2,
                            "target_id": "85b563c8-18d0-4668-9462-9"
                          }
                        ],
                        "position": 1
                      }
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/{{ep_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete Escalation Policy",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/{{ep_id}}/",
            "description": "\n### Delete Escalation Policy\n\nThis endpoint is used to delete an Escalation Policy associated with a specific team.\n\n#### Request Body\nThis request does not require a request body.\n\n#### Response Body\nThis request does not return a response body.\n\n"
          },
          "response": [
            {
              "name": "Delete Escalation Policy - 400 Bad Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/{{ep_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete Escalation Policy - 403 Forbidden",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/{{ep_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete Escalation Policy - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/escalation_policies/{{ep_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "This API endpoint will handle all the operations related to Escalation Policies."
    },
    {
      "name": "Services",
      "item": [
        {
          "name": "Create Service",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Modified Production Service\",\n    \"description\": \"This is the description for Production Service\",\n    \"auto_resolve_timeout\": \"0\", //An integer that represents the timeout for automatically resolving an Incident\n    \"team_priority\": \"{{team_priority_id}}\", //example: 6d100d52-998b-41c8-8928-a7e3aa68e329\n    \"task_template\": \"{{team_task_template_id}}\", //example: 8d2640ca-c6ef-45f0-be5f-61dedcf85032\n    \"acknowledgement_timeout_enabled\": \"false\", //An boolean flag that represents whether a service has acknowledgement timeout is enabled. If true, the \"acknowledgement_timeout\" field value needs to be set\n    \"acknowledgement_timeout\": \"600\", //An integer that represents the acknowledgement timeout value in seconds. If an incident is acknowledged and unresolved within this time window, the incident will be retriggered. This value must be above 600 seconds.\n    \"status\": 1, //An integer that represents the Service status [0 - Disabled, 1 - Active, 2 - Warning, 3 - Critical, 4 - Under Maintenance]\n    \"escalation_policy\": \"{{ep_id}}\", //example: 9ea1f98d-b5a3-4d72-8057-2f5f3d743a44\n    \"sla\": \"{{sla_id}}\", //example: b3c6af23-2b9e-414e-9706-bbf3af76828c\n    \"under_maintenance\": \"false\", //A boolean flag that represents whether the service object is under maintenance or not\n    \"collation\": \"0\", //An integer that represents the Service collation type. [0- Off, 1 - Time-Based]\n    \"collation_time\": \"0\" //An integer that represents the Service collation_time [in minutes]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/services/"
          },
          "response": [
            {
              "name": "Create Service - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Modified Production Service\",\n    \"description\": \"This is the description for Production Service\",\n    \"auto_resolve_timeout\": \"0\", //integer\n    \"team_priority\": \"6d100d52-998b-41c8-8928-a7e3aa68e329\",\n    \"task_template\": \"8d2640ca-c6ef-45f0-be5f-61dedcf85032\",\n    \"acknowledgement_timeout_enabled\": \"false\", //boolean\n    \"acknowledgement_timeout\": \"600\", //integer\n    \"status\": 1,\n    \"escalation_policy\": \"9ea1f98d-b5a3-4d72-8057-2f5f3d743a44\",\n    \"sla\": \"b3c6af23-2b9e-414e-9706-bbf3af76828c\",\n    \"under_maintenance\": \"false\", //boolean\n    \"collation\": \"0\", //integer\n    \"collation_time\": \"0\" //integer\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "name": "Production Service",
                "creation_date": "2022-07-08T12:38:50.511179Z",
                "summary": "",
                "description": "This is the description for Production Service",
                "unique_id": "3605fdfb-07fb-4a6c-bd05-9e557dc4ec6e",
                "auto_resolve_timeout": 0,
                "created_by": "216bba3d-7268-4a8e-89e9-6",
                "team_priority": "6d100d52-998b-41c8-8928-a7e3aa68e329",
                "task_template": "8d2640ca-c6ef-45f0-be5f-61dedcf85032",
                "acknowledgement_timeout": 0,
                "acknowledgement_timeout_enabled": false,
                "status": 1,
                "escalation_policy": "9ea1f98d-b5a3-4d72-8057-2f5f3d743a44",
                "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                "sla": "b3c6af23-2b9e-414e-9706-bbf3af76828c",
                "collation_time": 0,
                "collation": 0,
                "under_maintenance": false
              }
            },
            {
              "name": "Create Service - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Modified Production Service\",\n    \"description\": \"This is the description for Production Service\",\n    \"auto_resolve_timeout\": \"0\", //integer\n    \"team_priority\": \"6d100d52-998b-41c8-8928-a7e3aa68e329\",\n    \"task_template\": \"8d2640ca-c6ef-45f0-be5f-61dedcf85032\",\n    \"acknowledgement_timeout_enabled\": \"false\", //boolean\n    \"acknowledgement_timeout\": \"600\", //integer\n    \"status\": 1,\n    \"escalation_policy\": \"9ea1f98d-b5a3-4d72-8057-2f5f3d743a44\",\n    \"sla\": \"b3c6af23-2b9e-414e-9706-bbf3af76828c\",\n    \"under_maintenance\": \"false\", //boolean\n    \"collation\": \"0\", //integer\n    \"collation_time\": \"0\" //integer\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create Service - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Modified Production Service\",\n    \"description\": \"This is the description for Production Service\",\n    \"auto_resolve_timeout\": \"0\", //integer\n    \"team_priority\": \"6d100d52-998b-41c8-8928-a7e3aa68e329\",\n    \"task_template\": \"8d2640ca-c6ef-45f0-be5f-61dedcf85032\",\n    \"acknowledgement_timeout_enabled\": \"false\", //boolean\n    \"acknowledgement_timeout\": \"600\", //integer\n    \"status\": 1,\n    \"escalation_policy\": \"9ea1f98d-b5a3-4d72-8057-2f5f3d743a44\",\n    \"sla\": \"b3c6af23-2b9e-414e-9706-bbf3af76828c\",\n    \"under_maintenance\": \"false\", //boolean\n    \"collation\": \"0\", //integer\n    \"collation_time\": \"0\" //integer\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create Service - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Modified Production Service\",\n    \"description\": \"This is the description for Production Service\",\n    \"auto_resolve_timeout\": \"0\", //integer\n    \"team_priority\": \"6d100d52-998b-41c8-8928-a7e3aa68e329\",\n    \"task_template\": \"8d2640ca-c6ef-45f0-be5f-61dedcf85032\",\n    \"acknowledgement_timeout_enabled\": \"false\", //boolean\n    \"acknowledgement_timeout\": \"600\", //integer\n    \"status\": 1,\n    \"escalation_policy\": \"9ea1f98d-b5a3-4d72-8057-2f5f3d743a44\",\n    \"sla\": \"b3c6af23-2b9e-414e-9706-bbf3af76828c\",\n    \"under_maintenance\": \"false\", //boolean\n    \"collation\": \"0\", //integer\n    \"collation_time\": \"0\" //integer\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List Services",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/services/",
            "description": "To get all the services linked to a team."
          },
          "response": [
            {
              "name": "List Services - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "name": "Infra Service",
                  "creation_date": "2022-07-08T12:31:37.429973Z",
                  "summary": "",
                  "description": "This is the description for Infra Service",
                  "unique_id": "191f5e2c-515e-4ee0-b501-3a292f8dae2f",
                  "auto_resolve_timeout": 0,
                  "created_by": "216bba3d-7268-4a8e-89e9-6",
                  "team_priority": "6d100d52-998b-41c8-8928-a7e3aa68e329",
                  "task_template": "8d2640ca-c6ef-45f0-be5f-61dedcf85032",
                  "acknowledgement_timeout": 0,
                  "acknowledgement_timeout_enabled": false,
                  "status": 1,
                  "escalation_policy": "9ea1f98d-b5a3-4d72-8057-2f5f3d743a44",
                  "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                  "sla": "b3c6af23-2b9e-414e-9706-bbf3af76828c",
                  "under_maintenance": false,
                  "collation": 1,
                  "collation_time": 2
                },
                {
                  "name": "Production Service",
                  "creation_date": "2022-07-08T12:38:50.511179Z",
                  "summary": "",
                  "description": "This is the description for Production Service",
                  "unique_id": "3605fdfb-07fb-4a6c-bd05-9e557dc4ec6e",
                  "auto_resolve_timeout": 0,
                  "created_by": "216bba3d-7268-4a8e-89e9-6",
                  "team_priority": "6d100d52-998b-41c8-8928-a7e3aa68e329",
                  "task_template": "8d2640ca-c6ef-45f0-be5f-61dedcf85032",
                  "acknowledgement_timeout": 0,
                  "acknowledgement_timeout_enabled": false,
                  "status": 1,
                  "escalation_policy": "9ea1f98d-b5a3-4d72-8057-2f5f3d743a44",
                  "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                  "sla": "b3c6af23-2b9e-414e-9706-bbf3af76828c",
                  "under_maintenance": false,
                  "collation": 0,
                  "collation_time": 0
                }
              ]
            },
            {
              "name": "List Services - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List Services - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List Services - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve Service",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/",
            "description": "This request will get you the service by its corresponding Service ID"
          },
          "response": [
            {
              "name": "Retrieve Service - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "name": "Production Service",
                "creation_date": "2022-07-08T12:38:50.511179Z",
                "summary": "",
                "description": "This is the description for Production Service",
                "unique_id": "3605fdfb-07fb-4a6c-bd05-9e557dc4ec6e",
                "auto_resolve_timeout": 0,
                "created_by": "216bba3d-7268-4a8e-89e9-6",
                "team_priority": "6d100d52-998b-41c8-8928-a7e3aa68e329",
                "task_template": "8d2640ca-c6ef-45f0-be5f-61dedcf85032",
                "acknowledgement_timeout": 0,
                "acknowledgement_timeout_enabled": false,
                "status": 1,
                "escalation_policy": "9ea1f98d-b5a3-4d72-8057-2f5f3d743a44",
                "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                "sla": "b3c6af23-2b9e-414e-9706-bbf3af76828c",
                "under_maintenance": false,
                "collation": 0,
                "collation_time": 0
              }
            },
            {
              "name": "Retrieve Service - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve Service - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve Service - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Update Service",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Modified Production Service\",\n    \"description\": \"This is the description for Production Service\",\n    \"auto_resolve_timeout\": \"0\", //An integer that represents the timeout for automatically resolving an Incident\n    \"team_priority\": \"{{team_priority_id}}\", //example: 6d100d52-998b-41c8-8928-a7e3aa68e329\n    \"task_template\": \"{{team_task_template_id}}\", //example: 8d2640ca-c6ef-45f0-be5f-61dedcf85032\n    \"acknowledgement_timeout_enabled\": \"false\", //An boolean flag that represents whether a service has acknowledgement timeout is enabled. If true, the \"acknowledgement_timeout\" field value needs to be set\n    \"acknowledgement_timeout\": \"600\", //An integer that represents the acknowledgement timeout value in seconds. If an incident is acknowledged and unresolved within this time window, the incident will be retriggered. This value must be above 600 seconds.\n    \"status\": 1, //An integer that represents the Service status [0 - Disabled, 1 - Active, 2 - Warning, 3 - Critical, 4 - Under Maintenance]\n    \"escalation_policy\": \"{{ep_id}}\", //example: 9ea1f98d-b5a3-4d72-8057-2f5f3d743a44\n    \"sla\": \"{{sla_id}}\", //example: b3c6af23-2b9e-414e-9706-bbf3af76828c\n    \"under_maintenance\": \"false\", //A boolean flag that represents whether the service object is under maintenance or not\n    \"collation\": \"0\", //An integer that represents the Service collation type. [0- Off, 1 - Time-Based, 2 - Intelligence]\n    \"collation_time\": \"0\" //An integer that represents the Service collation_time [in minutes]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/",
            "description": "This endpoint lets one Update the Service details. In this case, the name of the service will be changed to \"Modified Service Name\"."
          },
          "response": [
            {
              "name": "Update Service - 200 OK",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Modified Production Service\",\n    \"description\": \"This is the description for Production Service\",\n    \"auto_resolve_timeout\": \"0\", //integer\n    \"team_priority\": \"6d100d52-998b-41c8-8928-a7e3aa68e329\",\n    \"task_template\": \"8d2640ca-c6ef-45f0-be5f-61dedcf85032\",\n    \"acknowledgement_timeout_enabled\": \"false\", //boolean\n    \"acknowledgement_timeout\": \"600\", //integer\n    \"status\": 1,\n    \"escalation_policy\": \"9ea1f98d-b5a3-4d72-8057-2f5f3d743a44\",\n    \"sla\": \"b3c6af23-2b9e-414e-9706-bbf3af76828c\",\n    \"under_maintenance\": \"false\", //boolean\n    \"collation\": \"0\", //integer\n    \"collation_time\": \"0\" //integer\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "name": "Modified Production Service",
                "creation_date": "2022-07-08T12:38:50.511179Z",
                "summary": "",
                "description": "This is the description for Production Service",
                "unique_id": "3605fdfb-07fb-4a6c-bd05-9e557dc4ec6e",
                "auto_resolve_timeout": 0,
                "created_by": "216bba3d-7268-4a8e-89e9-6",
                "team_priority": "6d100d52-998b-41c8-8928-a7e3aa68e329",
                "task_template": "8d2640ca-c6ef-45f0-be5f-61dedcf85032",
                "acknowledgement_timeout": 0,
                "status": 1,
                "escalation_policy": "9ea1f98d-b5a3-4d72-8057-2f5f3d743a44",
                "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                "sla": "b3c6af23-2b9e-414e-9706-bbf3af76828c",
                "collation_time": 0,
                "collation": 0,
                "under_maintenance": false
              }
            },
            {
              "name": "Update Service - 400 Bad Request",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Modified Production Service\",\n    \"description\": \"This is the description for Production Service\",\n    \"auto_resolve_timeout\": \"0\", //integer\n    \"team_priority\": \"6d100d52-998b-41c8-8928-a7e3aa68e329\",\n    \"task_template\": \"8d2640ca-c6ef-45f0-be5f-61dedcf85032\",\n    \"acknowledgement_timeout_enabled\": \"false\", //boolean\n    \"acknowledgement_timeout\": \"600\", //integer\n    \"status\": 1,\n    \"escalation_policy\": \"9ea1f98d-b5a3-4d72-8057-2f5f3d743a44\",\n    \"sla\": \"b3c6af23-2b9e-414e-9706-bbf3af76828c\",\n    \"under_maintenance\": \"false\", //boolean\n    \"collation\": \"0\", //integer\n    \"collation_time\": \"0\" //integer\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Update Service - 403 Forbidden",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Modified Production Service\",\n    \"description\": \"This is the description for Production Service\",\n    \"auto_resolve_timeout\": \"0\", //integer\n    \"team_priority\": \"6d100d52-998b-41c8-8928-a7e3aa68e329\",\n    \"task_template\": \"8d2640ca-c6ef-45f0-be5f-61dedcf85032\",\n    \"acknowledgement_timeout_enabled\": \"false\", //boolean\n    \"acknowledgement_timeout\": \"600\", //integer\n    \"status\": 1,\n    \"escalation_policy\": \"9ea1f98d-b5a3-4d72-8057-2f5f3d743a44\",\n    \"sla\": \"b3c6af23-2b9e-414e-9706-bbf3af76828c\",\n    \"under_maintenance\": \"false\", //boolean\n    \"collation\": \"0\", //integer\n    \"collation_time\": \"0\" //integer\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Update Service - 404 Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Modified Production Service\",\n    \"description\": \"This is the description for Production Service\",\n    \"auto_resolve_timeout\": \"0\", //integer\n    \"team_priority\": \"6d100d52-998b-41c8-8928-a7e3aa68e329\",\n    \"task_template\": \"8d2640ca-c6ef-45f0-be5f-61dedcf85032\",\n    \"acknowledgement_timeout_enabled\": \"false\", //boolean\n    \"acknowledgement_timeout\": \"600\", //integer\n    \"status\": 1,\n    \"escalation_policy\": \"9ea1f98d-b5a3-4d72-8057-2f5f3d743a44\",\n    \"sla\": \"b3c6af23-2b9e-414e-9706-bbf3af76828c\",\n    \"under_maintenance\": \"false\", //boolean\n    \"collation\": \"0\", //integer\n    \"collation_time\": \"0\" //integer\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete Service",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/",
            "description": "This request letsone delete a service."
          },
          "response": [
            {
              "name": "Delete Service - 400 Bad Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete Service - 403 Forbidden",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete Service - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "This API endpoint will handle all the operations related to Services."
    },
    {
      "name": "Integrations",
      "item": [
        {
          "name": "Create Integration",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"New Integration\",\n    \"summary\": \"This is the summary for new Integration\",\n    \"application\": \"07c84d47-7e71-49ec-b781-1cc81a78086e\", // Application Unique ID. You can find the complete list here - https://www.zenduty.com/api/account/applications/ \n    \"is_enabled\": \"false\", //A boolean flag that represents whether an Integration is enabled or not\n    \"create_incidents_for\": \"1\", //An integer that represents the type of the Incidents this Integration object will create. [0 - Do not create incident, 1 - Create for Critical alerts, 2 - Create for Critical and Error alerts, 3 - Create for Critical, Error and Warning alerts]\n    \"integration_type\": \"0\", // [0 - Incoming Integration(Alert Source), 1 - Outgoing Integration]\n    \"default_urgency\": \"1\" // [0 - Low Urgency, 1 - High Urgency]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/",
            "description": "This request will let one create a new Integration for the specific Service."
          },
          "response": [
            {
              "name": "Create Integration - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"New Integration\",\n    \"summary\": \"This is the summary for new Integration\",\n    \"application\": \"07c84d47-7e71-49ec-b781-1cc81a78086e\",\n    \"is_enabled\": \"false\", //boolean\n    \"create_incidents_for\": \"1\",\n    \"integration_type\": \"0\",\n    \"default_urgency\": \"1\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "name": "Infra custom Integration",
                "creation_date": "2022-07-08T12:52:22.906327Z",
                "summary": "This is the summary for Infra custom Integration",
                "unique_id": "72da1133-a471-4e70-95f3-ce3a5650e9fd",
                "service": "191f5e2c-515e-4ee0-b501-3a292f8dae2f",
                "application": "07c84d47-7e71-49ec-b781-1cc81a78086e",
                "application_reference": {
                  "name": "Cloudwatch V2",
                  "icon_url": "Cloudwatch V2",
                  "summary": "Cloudwatch V2",
                  "description": "Cloudwatch V2",
                  "unique_id": "07c84d47-7e71-49ec-b781-1cc81a78086e",
                  "availability_plan_id": 1,
                  "setup_instructions": "<IntegrationURL/>",
                  "extension": "cloudwatch_v2",
                  "application_type": 0,
                  "categories": "API,Analytics",
                  "documentation_link": "Cloudwatch V2"
                },
                "integration_key": "5f306dae-b327-4ba9-8f3a-ab4cffd57645",
                "created_by": "216bba3d-7268-4a8e-89e9-6",
                "is_enabled": true,
                "create_incidents_for": 1,
                "integration_type": 0,
                "default_urgency": 1,
                "webhook_url": "https://www.zenduty.com/api/integration/cloudwatch_v2/5f306dae-b327-4ba9-8f3a-ab4cffd57645/"
              }
            },
            {
              "name": "Create Integration - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"New Integration\",\n    \"summary\": \"This is the summary for new Integration\",\n    \"application\": \"07c84d47-7e71-49ec-b781-1cc81a78086e\",\n    \"is_enabled\": \"false\", //boolean\n    \"create_incidents_for\": \"1\",\n    \"integration_type\": \"0\",\n    \"default_urgency\": \"1\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create Integration - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"New Integration\",\n    \"summary\": \"This is the summary for new Integration\",\n    \"application\": \"07c84d47-7e71-49ec-b781-1cc81a78086e\",\n    \"is_enabled\": \"false\", //boolean\n    \"create_incidents_for\": \"1\",\n    \"integration_type\": \"0\",\n    \"default_urgency\": \"1\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create Integration - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"New Integration\",\n    \"summary\": \"This is the summary for new Integration\",\n    \"application\": \"07c84d47-7e71-49ec-b781-1cc81a78086e\",\n    \"is_enabled\": \"false\", //boolean\n    \"create_incidents_for\": \"1\",\n    \"integration_type\": \"0\",\n    \"default_urgency\": \"1\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List Integrations",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/",
            "description": "This will show all the integrations under the service."
          },
          "response": [
            {
              "name": "List Integrations - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "name": "Cloudwatch V2",
                  "creation_date": "2022-07-08T12:31:37.435711Z",
                  "summary": "Edit summary for this integration",
                  "unique_id": "de8830c5-8596-4ab6-937e-8d5df08499d8",
                  "service": "191f5e2c-515e-4ee0-b501-3a292f8dae2f",
                  "application": "07c84d47-7e71-49ec-b781-1cc81a78086e",
                  "application_reference": {
                    "name": "Cloudwatch V2",
                    "icon_url": "Cloudwatch V2",
                    "summary": "Cloudwatch V2",
                    "description": "Cloudwatch V2",
                    "unique_id": "07c84d47-7e71-49ec-b781-1cc81a78086e",
                    "availability_plan_id": 1,
                    "setup_instructions": "<IntegrationURL/>",
                    "extension": "cloudwatch_v2",
                    "application_type": 0,
                    "categories": "API,Analytics",
                    "documentation_link": "Cloudwatch V2"
                  },
                  "integration_key": "bf167d3d-93dc-43b6-9066-a10b0bafcc09",
                  "created_by": "216bba3d-7268-4a8e-89e9-6",
                  "is_enabled": true,
                  "create_incidents_for": 1,
                  "integration_type": 0,
                  "default_urgency": 1,
                  "webhook_url": "https://www.zenduty.com/api/integration/cloudwatch_v2/bf167d3d-93dc-43b6-9066-a10b0bafcc09/"
                },
                {
                  "name": "Conference bridge",
                  "creation_date": "2022-07-08T12:31:37.441939Z",
                  "summary": "Edit summary for this integration",
                  "unique_id": "38d5f0f9-a2d4-44dd-bc8c-4f2fdeea284e",
                  "service": "191f5e2c-515e-4ee0-b501-3a292f8dae2f",
                  "application": "bbfdaa85-a1c1-4d0a-b59a-0e24f081d237",
                  "application_reference": {
                    "name": "Conference bridge",
                    "icon_url": "https://www.softexia.com/wp-content/uploads/2020/03/ZOOM_logo.png",
                    "summary": "Conference bridge",
                    "description": "Conference bridge",
                    "unique_id": "bbfdaa85-a1c1-4d0a-b59a-0e24f081d237",
                    "availability_plan_id": 1,
                    "setup_instructions": "Conference bridge",
                    "extension": "conf",
                    "application_type": 1,
                    "categories": "API,Analytics,Collaboration",
                    "documentation_link": "http://docs.zenduty.com/"
                  },
                  "integration_key": "9efb306f-49b2-4b76-a428-845c7782deed",
                  "created_by": "216bba3d-7268-4a8e-89e9-6",
                  "is_enabled": true,
                  "create_incidents_for": 1,
                  "integration_type": 0,
                  "default_urgency": 1,
                  "webhook_url": "https://www.zenduty.com/api/integration/conf/9efb306f-49b2-4b76-a428-845c7782deed/"
                },
                {
                  "name": "Jira (2-way)",
                  "creation_date": "2022-07-08T12:31:37.448374Z",
                  "summary": "Edit summary for this integration",
                  "unique_id": "c6a8fdf5-51a5-42a2-b3c9-c2d74b870e71",
                  "service": "191f5e2c-515e-4ee0-b501-3a292f8dae2f",
                  "application": "0625ca3a-b064-45d0-9438-ff09953ba7c2",
                  "application_reference": {
                    "name": "Jira (2-way)",
                    "icon_url": "https://images.squarespace-cdn.com/content/v1/5dc1ccd7e0292e070ef93a24/1582586865629-PN8VT9EY3DPJSTYL46AC/jira-small%402x.png?format=300w",
                    "summary": "Sample jira 2way integration",
                    "description": "Sample jira 2way integration",
                    "unique_id": "0625ca3a-b064-45d0-9438-ff09953ba7c2",
                    "availability_plan_id": 1,
                    "setup_instructions": "https://docs.zenduty.com/docs/jira",
                    "extension": "jiracloud",
                    "application_type": 1,
                    "categories": "API,Popular",
                    "documentation_link": "https://docs.zenduty.com/docs/jira"
                  },
                  "integration_key": "5eb0fd9b-da65-4f36-8dff-f32fdd4dfdc9",
                  "created_by": "216bba3d-7268-4a8e-89e9-6",
                  "is_enabled": true,
                  "create_incidents_for": 1,
                  "integration_type": 0,
                  "default_urgency": 1,
                  "webhook_url": "https://www.zenduty.com/api/integration/jiracloud/5eb0fd9b-da65-4f36-8dff-f32fdd4dfdc9/"
                },
                {
                  "name": "Zoom",
                  "creation_date": "2022-07-08T12:31:37.453423Z",
                  "summary": "Edit summary for this integration",
                  "unique_id": "faa5594e-aea5-4c5a-9d2b-846c02bd8cf9",
                  "service": "191f5e2c-515e-4ee0-b501-3a292f8dae2f",
                  "application": "41dc6d06-b33e-406d-a11f-efb11b74243c",
                  "application_reference": {
                    "name": "Zoom",
                    "icon_url": "https://pbs.twimg.com/media/EUjGOkTUEAAeKUL?format=png",
                    "summary": "Zoom Outgoing",
                    "description": "Zoom Outgoing",
                    "unique_id": "41dc6d06-b33e-406d-a11f-efb11b74243c",
                    "availability_plan_id": 1,
                    "setup_instructions": "Some setup instructions",
                    "extension": "zoom",
                    "application_type": 1,
                    "categories": "Popular,APM",
                    "documentation_link": "https://docs.zenduty.com"
                  },
                  "integration_key": "181c2f90-a04a-41e5-a7ca-a16d68296e82",
                  "created_by": "216bba3d-7268-4a8e-89e9-6",
                  "is_enabled": true,
                  "create_incidents_for": 1,
                  "integration_type": 0,
                  "default_urgency": 1,
                  "webhook_url": "https://www.zenduty.com/api/integration/zoom/181c2f90-a04a-41e5-a7ca-a16d68296e82/"
                },
                {
                  "name": "Infra custom Integration",
                  "creation_date": "2022-07-08T12:52:22.906327Z",
                  "summary": "This is the summary for Infra custom Integration",
                  "unique_id": "72da1133-a471-4e70-95f3-ce3a5650e9fd",
                  "service": "191f5e2c-515e-4ee0-b501-3a292f8dae2f",
                  "application": "07c84d47-7e71-49ec-b781-1cc81a78086e",
                  "application_reference": {
                    "name": "Cloudwatch V2",
                    "icon_url": "Cloudwatch V2",
                    "summary": "Cloudwatch V2",
                    "description": "Cloudwatch V2",
                    "unique_id": "07c84d47-7e71-49ec-b781-1cc81a78086e",
                    "availability_plan_id": 1,
                    "setup_instructions": "<IntegrationURL/>",
                    "extension": "cloudwatch_v2",
                    "application_type": 0,
                    "categories": "API,Analytics",
                    "documentation_link": "Cloudwatch V2"
                  },
                  "integration_key": "5f306dae-b327-4ba9-8f3a-ab4cffd57645",
                  "created_by": "216bba3d-7268-4a8e-89e9-6",
                  "is_enabled": true,
                  "create_incidents_for": 1,
                  "integration_type": 0,
                  "default_urgency": 1,
                  "webhook_url": "https://www.zenduty.com/api/integration/cloudwatch_v2/5f306dae-b327-4ba9-8f3a-ab4cffd57645/"
                }
              ]
            },
            {
              "name": "List Integrations - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List Integrations - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List Integrations - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve Integration",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/",
            "description": "This request will get the Integration by integration ID."
          },
          "response": [
            {
              "name": "Retrieve Integration - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "name": "Infra custom Integration",
                "creation_date": "2022-07-08T12:52:22.906327Z",
                "summary": "This is the summary for Infra custom Integration",
                "unique_id": "72da1133-a471-4e70-95f3-ce3a5650e9fd",
                "service": "191f5e2c-515e-4ee0-b501-3a292f8dae2f",
                "application": "07c84d47-7e71-49ec-b781-1cc81a78086e",
                "application_reference": {
                  "name": "Cloudwatch V2",
                  "icon_url": "Cloudwatch V2",
                  "summary": "Cloudwatch V2",
                  "description": "Cloudwatch V2",
                  "unique_id": "07c84d47-7e71-49ec-b781-1cc81a78086e",
                  "availability_plan_id": 1,
                  "setup_instructions": "<IntegrationURL/>",
                  "extension": "cloudwatch_v2",
                  "application_type": 0,
                  "categories": "API,Analytics",
                  "documentation_link": "Cloudwatch V2"
                },
                "integration_key": "5f306dae-b327-4ba9-8f3a-ab4cffd57645",
                "created_by": "216bba3d-7268-4a8e-89e9-6",
                "is_enabled": true,
                "create_incidents_for": 1,
                "integration_type": 0,
                "default_urgency": 1,
                "webhook_url": "https://www.zenduty.com/api/integration/cloudwatch_v2/5f306dae-b327-4ba9-8f3a-ab4cffd57645/"
              }
            },
            {
              "name": "Retrieve Integration - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve Integration - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve Integration - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Update Integration",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"New Integration\",\n    \"summary\": \"This is the summary for new Integration\",\n    \"application\": \"07c84d47-7e71-49ec-b781-1cc81a78086e\", // Application Unique ID. You can find the complete list here - https://www.zenduty.com/api/account/applications/ \n    \"is_enabled\": \"false\", //A boolean flag that represents whether an Integration is enabled or not\n    \"create_incidents_for\": \"1\", //An integer that represents the type of the Incidents this Integration object will create. [0 - Do not create incident, 1 - Create for Critical alerts, 2 - Create for Critical and Error alerts, 3 - Create for Critical, Error and Warning alerts]\n    \"integration_type\": \"0\", // [0 - Incoming Integration(Alert Source), 1 - Outgoing Integration]\n    \"default_urgency\": \"1\" // [0 - Low Urgency, 1 - High Urgency]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/"
          },
          "response": [
            {
              "name": "Update Integration - 200 OK",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"New Integration\",\n    \"summary\": \"This is the summary for new Integration\",\n    \"application\": \"07c84d47-7e71-49ec-b781-1cc81a78086e\",\n    \"is_enabled\": \"false\", //boolean\n    \"create_incidents_for\": \"1\",\n    \"integration_type\": \"0\",\n    \"default_urgency\": \"1\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "name": "Modified Infra custom Integration",
                "creation_date": "2022-07-08T12:52:22.906327Z",
                "summary": "This is the summary for Infra custom Integration",
                "unique_id": "72da1133-a471-4e70-95f3-ce3a5650e9fd",
                "service": "191f5e2c-515e-4ee0-b501-3a292f8dae2f",
                "application": "07c84d47-7e71-49ec-b781-1cc81a78086e",
                "application_reference": {
                  "name": "Cloudwatch V2",
                  "icon_url": "Cloudwatch V2",
                  "summary": "Cloudwatch V2",
                  "description": "Cloudwatch V2",
                  "unique_id": "07c84d47-7e71-49ec-b781-1cc81a78086e",
                  "availability_plan_id": 1,
                  "setup_instructions": "<IntegrationURL/>",
                  "extension": "cloudwatch_v2",
                  "application_type": 0,
                  "categories": "API,Analytics",
                  "documentation_link": "Cloudwatch V2"
                },
                "integration_key": "5f306dae-b327-4ba9-8f3a-ab4cffd57645",
                "created_by": "216bba3d-7268-4a8e-89e9-6",
                "is_enabled": true,
                "create_incidents_for": 1,
                "integration_type": 0,
                "default_urgency": 1,
                "webhook_url": "https://www.zenduty.com/api/integration/cloudwatch_v2/5f306dae-b327-4ba9-8f3a-ab4cffd57645/"
              }
            },
            {
              "name": "Update Integration - 400 Bad Request",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"New Integration\",\n    \"summary\": \"This is the summary for new Integration\",\n    \"application\": \"07c84d47-7e71-49ec-b781-1cc81a78086e\",\n    \"is_enabled\": \"false\", //boolean\n    \"create_incidents_for\": \"1\",\n    \"integration_type\": \"0\",\n    \"default_urgency\": \"1\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Update Integration - 403 Forbidden",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"New Integration\",\n    \"summary\": \"This is the summary for new Integration\",\n    \"application\": \"07c84d47-7e71-49ec-b781-1cc81a78086e\",\n    \"is_enabled\": \"false\", //boolean\n    \"create_incidents_for\": \"1\",\n    \"integration_type\": \"0\",\n    \"default_urgency\": \"1\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Update Integration - 404 Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"New Integration\",\n    \"summary\": \"This is the summary for new Integration\",\n    \"application\": \"07c84d47-7e71-49ec-b781-1cc81a78086e\",\n    \"is_enabled\": \"false\", //boolean\n    \"create_incidents_for\": \"1\",\n    \"integration_type\": \"0\",\n    \"default_urgency\": \"1\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete Integration",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/"
          },
          "response": [
            {
              "name": "Delete Integration - 400 Bad Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete Integration - 403 Forbidden",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete Integration - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Regenerate the Integration key",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"integration_unique_id\": \"{{integration_id}}\" //example: 84753076-129d-4706-a957-a7c751ca7ab1\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/regenerate_integration_key/"
          },
          "response": [
            {
              "name": "Regenerate the Integration key - 200 OK",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "integration_unique_id": "84753076-129d-4706-a957-a7c751ca7ab1"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/regenerate_integration_key/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "name": "AWS GuardDuty",
                "creation_date": "2024-07-01T10:16:32.036085Z",
                "summary": "AWS GuardDuty Integration",
                "unique_id": "84753076-129d-4706-a957-a7c751ca7ab1",
                "service": "34da0237-9825-454a-9297-3a23a4b78795",
                "application": "bb399bc6-9098-4afd-91d7-3cec4d8282eb",
                "application_reference": {
                  "name": "AWS GuardDuty",
                  "icon_url": "https://media-assets-cdn.zenduty.com/assets/integrations/new_logos/guardduty.png",
                  "summary": "AWS GuardDuty Integration",
                  "description": "AWS GuardDuty Integration",
                  "unique_id": "bb399bc6-9098-4afd-91d7-3cec4d8282eb",
                  "availability_plan_id": 4,
                  "setup_instructions": "To integrate Zenduty with AWS GuardDuty, follow the steps below...",
                  "extension": "guardduty",
                  "application_type": 0,
                  "categories": "Cloud Monitoring,Server/Network Monitoring",
                  "documentation_link": "https://docs.zenduty.com/docs/guardduty",
                  "is_active": 1
                },
                "integration_key": "c89e320f-a975-47e4-8437-1169e91eeed7",
                "created_by": "39569d4b-6540-4b64-a086-6",
                "is_enabled": true,
                "create_incidents_for": 1,
                "integration_type": 0,
                "default_urgency": 1,
                "webhook_url": "https://www.zenduty.com/api/integration/guardduty/c89e320f-a975-47e4-8437-1169e91eeed7/"
              }
            },
            {
              "name": "Regenerate the Integration key - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "integration_unique_id": "84753076-129d-4706-a957-a7c751ca7ab1"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/regenerate_integration_key/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Regenerate the Integration key - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "integration_unique_id": "84753076-129d-4706-a957-a7c751ca7ab1"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/regenerate_integration_key/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "error": "User does not have permission to regenerate integration key"
              }
            },
            {
              "name": "Regenerate the Integration key - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "integration_unique_id": "84753076-129d-4706-a957-a7c751ca7ab1"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/regenerate_integration_key/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "This API will address all the Integrations related endpoints."
    },
    {
      "name": "Integration Alerts",
      "item": [
        {
          "name": "List Integration Alerts",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/alerts/"
          },
          "response": [
            {
              "name": "List Integration Alerts - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/alerts/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "integration_object": {
                    "name": "Modified Infra custom Integration",
                    "creation_date": "2022-07-08T12:52:22.906327Z",
                    "summary": "This is the summary for Infra custom Integration",
                    "unique_id": "72da1133-a471-4e70-95f3-ce3a5650e9fd",
                    "service": "191f5e2c-515e-4ee0-b501-3a292f8dae2f",
                    "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                    "integration_key": "5f306dae-b327-4ba9-8f3a-ab4cffd57645",
                    "is_enabled": true,
                    "integration_type": 0
                  },
                  "summary": "",
                  "incident": null,
                  "creation_date": "2022-07-08T13:14:45.556654Z",
                  "message": "Infra Integration Alert 1",
                  "integration": "72da1133-a471-4e70-95f3-ce3a5650e9fd",
                  "suppressed": false,
                  "entity_id": "bbd1951b-2a99-4c5e-8f6b-4cce4ef3",
                  "alert_type": "0",
                  "unique_id": "hCGwjDmKZvQz2MzNsyKmu2",
                  "images": [],
                  "urls": [],
                  "notes": []
                },
                {
                  "integration_object": {
                    "name": "Modified Infra custom Integration",
                    "creation_date": "2022-07-08T12:52:22.906327Z",
                    "summary": "This is the summary for Infra custom Integration",
                    "unique_id": "72da1133-a471-4e70-95f3-ce3a5650e9fd",
                    "service": "191f5e2c-515e-4ee0-b501-3a292f8dae2f",
                    "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                    "integration_key": "5f306dae-b327-4ba9-8f3a-ab4cffd57645",
                    "is_enabled": true,
                    "integration_type": 0
                  },
                  "summary": "",
                  "incident": 2,
                  "creation_date": "2022-07-08T13:14:31.300448Z",
                  "message": "Infra Integration Alert",
                  "integration": "72da1133-a471-4e70-95f3-ce3a5650e9fd",
                  "suppressed": false,
                  "entity_id": "de8cf7fc-08ee-4966-b8d3-b6b631da",
                  "alert_type": "3",
                  "unique_id": "xc6qbUftpzkQ28f2MxpRxh",
                  "images": [],
                  "urls": [],
                  "notes": []
                }
              ]
            },
            {
              "name": "List Integration Alerts - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/alerts/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List Integration Alerts - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/alerts/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List Integration Alerts - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/alerts/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "All the API endpoints related to Integration Alerts."
    },
    {
      "name": "Incidents",
      "item": [
        {
          "name": "List all Incident objects(filtered)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": 0, //Status of the Incident [Open incident(triggered and acknowledged) - '-1', All incidents(triggered, acknowledged and resolved) - 0, Trigerred Incident - 1, Acknowledged Incident - 2, Resolved Incident - 3]\n    \"team_ids\": [],\n    \"all_teams\": 1, //To filter all teams incident - 0, To filter incidents based on the teams the requesting user belongs to - 1\n    \"service_ids\": [],\n    \"user_ids\": [],\n    \"priority_name\": \"\",\n    \"priority_ids\": [],\n    \"tag_ids\": [],\n    \"sla_ids\": [],\n    \"from_date\": [], //Represents from_date and filters incidents whose creation_date is greater than the specified from_date. example - from_date=\"2023-02-01\"\n    \"to_date\": [], //Represents to_date and filters incidents whose creation_date is lesser than the specified to_date. example - to_date=\"2023-02-01\"\n    \"postmortem_filter\": -1, //An integer that represents whether the postmortem is attached to the incident or not. Default is '-1'\n    \"escalation_policy_ids\": []\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/incidents/filter/",
            "description": "This endpoint will give all the incidents for the account."
          },
          "response": [
            {
              "name": "List all Incident objects(filtered) - 200 OK",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "status": 1,
                    "team_ids": [
                      "4cce18ea-57c5-4beb-bca8-60dc7a68ae3a",
                      "91fd3cc0-ebd6-43b8-aab3-67a05762ba0c"
                    ],
                    "all_teams": 1,
                    "service_ids": [
                      "32a7c77f-aa0a-49de-ab52-e52f0aa77888"
                    ],
                    "user_ids": [
                      "7e26fed1-f11c-4e78-afc6-a"
                    ],
                    "priority_name": "",
                    "priority_ids": [
                      "7064efff-55f2-448b-92e5-a3a53179aa76"
                    ],
                    "tag_ids": [
                      "bc56a5d1-3ec3-4802-9f6a-3f93519ec2a4"
                    ],
                    "sla_ids": [
                      "f14a16aa-15d1-49a1-be27-0c266b15c7fa"
                    ],
                    "from_date": [],
                    "to_date": [],
                    "postmortem_filter": -1,
                    "escalation_policy_ids": [
                      "52fe68d3-cead-40b3-b0ac-d616d38d8e32"
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/filter/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "next": "https://www.zenduty.com/api/incidents/filter/?page=4&page_size=10",
                "previous": "https://www.zenduty.com/api/incidents/filter/?page=2&page_size=10",
                "results": [
                  {
                    "incident_number": 255,
                    "creation_date": "2023-10-26T14:22:56.338690Z",
                    "status": 1,
                    "unique_id": "aYfQPqqEUGvoMPftRAMSaB",
                    "sla": "f14a16aa-15d1-49a1-be27-0c266b15c7fa",
                    "service_object": {
                      "name": "Main",
                      "unique_id": "32a7c77f-aa0a-49de-ab52-e52f0aa77888",
                      "team": "91fd3cc0-ebd6-43b8-aab3-67a05762ba0c",
                      "team_name": "Backend"
                    },
                    "title": "[P-21041]Browser monitor global outage",
                    "assigned_to_name": "Michael Scott",
                    "tags": [
                      {
                        "unique_id": "4b2634c6-2c7c-40ea-9a30-020dfddee187",
                        "incident": 255,
                        "creation_date": "2023-10-26T14:22:56.475799Z",
                        "name": "TAG",
                        "color": "magenta",
                        "tag_id": "bc56a5d1-3ec3-4802-9f6a-3f93519ec2a4",
                        "team_tag": "bc56a5d1-3ec3-4802-9f6a-3f93519ec2a4"
                      }
                    ],
                    "sla_object": {
                      "unique_id": "f14a16aa-15d1-49a1-be27-0c266b15c7fa",
                      "name": "SLA",
                      "is_active": true,
                      "acknowledge_time": 5,
                      "resolve_time": 30,
                      "creation_date": "2022-10-11T11:42:46.438776Z"
                    },
                    "team_priority_object": {
                      "unique_id": "7064efff-55f2-448b-92e5-a3a53179aa76",
                      "name": "P1",
                      "description": "P1 - high priority incidents",
                      "color": "magenta"
                    },
                    "is_child_incident": false,
                    "postmortems": [],
                    "is_parent_incident": false,
                    "assigned_to": "7e26fed1-f11c-4e78-afc6-a",
                    "acknowledged_date": null,
                    "resolved_date": null,
                    "snooze_time": null,
                    "snoozed_till": null
                  },
                  {
                    "incident_number": 254,
                    "creation_date": "2023-10-26T14:21:28.828936Z",
                    "status": 1,
                    "unique_id": "7ze6Q9YAgvVTUAkQntrViC",
                    "sla": "f14a16aa-15d1-49a1-be27-0c266b15c7fa",
                    "service_object": {
                      "name": "Main",
                      "unique_id": "32a7c77f-aa0a-49de-ab52-e52f0aa77888",
                      "team": "91fd3cc0-ebd6-43b8-aab3-67a05762ba0c",
                      "team_name": "Backend"
                    },
                    "title": "[P-21041]Browser monitor global outage",
                    "assigned_to_name": "Michael Scott",
                    "tags": [
                      {
                        "unique_id": "93f008cf-f55d-4348-9091-f1e70e3a92a6",
                        "incident": 254,
                        "creation_date": "2023-10-26T14:21:29.017156Z",
                        "name": "TAG",
                        "color": "magenta",
                        "tag_id": "bc56a5d1-3ec3-4802-9f6a-3f93519ec2a4",
                        "team_tag": "bc56a5d1-3ec3-4802-9f6a-3f93519ec2a4"
                      }
                    ],
                    "sla_object": {
                      "unique_id": "f14a16aa-15d1-49a1-be27-0c266b15c7fa",
                      "name": "SLA",
                      "is_active": true,
                      "acknowledge_time": 5,
                      "resolve_time": 30,
                      "creation_date": "2022-10-11T11:42:46.438776Z"
                    },
                    "team_priority_object": {
                      "unique_id": "7064efff-55f2-448b-92e5-a3a53179aa76",
                      "name": "P1",
                      "description": "P1 - high priority incidents",
                      "color": "magenta"
                    },
                    "is_child_incident": false,
                    "postmortems": [],
                    "is_parent_incident": false,
                    "assigned_to": "7e26fed1-f11c-4e78-afc6-a",
                    "acknowledged_date": null,
                    "resolved_date": null,
                    "snooze_time": null,
                    "snoozed_till": null
                  },
                  {
                    "incident_number": 253,
                    "creation_date": "2023-10-26T14:20:18.980264Z",
                    "status": 1,
                    "unique_id": "fAe5HrVSR8JfigxvB5p9eF",
                    "sla": "f14a16aa-15d1-49a1-be27-0c266b15c7fa",
                    "service_object": {
                      "name": "Main",
                      "unique_id": "32a7c77f-aa0a-49de-ab52-e52f0aa77888",
                      "team": "91fd3cc0-ebd6-43b8-aab3-67a05762ba0c",
                      "team_name": "Backend"
                    },
                    "title": "[P-21041]Browser monitor global outage",
                    "assigned_to_name": "Michael Scott",
                    "tags": [
                      {
                        "unique_id": "6d2dadec-69a7-45f7-a2fb-99cc32a38419",
                        "incident": 253,
                        "creation_date": "2023-10-26T14:20:19.168974Z",
                        "name": "TAG",
                        "color": "magenta",
                        "tag_id": "bc56a5d1-3ec3-4802-9f6a-3f93519ec2a4",
                        "team_tag": "bc56a5d1-3ec3-4802-9f6a-3f93519ec2a4"
                      }
                    ],
                    "sla_object": {
                      "unique_id": "f14a16aa-15d1-49a1-be27-0c266b15c7fa",
                      "name": "SLA",
                      "is_active": true,
                      "acknowledge_time": 5,
                      "resolve_time": 30,
                      "creation_date": "2022-10-11T11:42:46.438776Z"
                    },
                    "team_priority_object": {
                      "unique_id": "7064efff-55f2-448b-92e5-a3a53179aa76",
                      "name": "P1",
                      "description": "P1 - high priority incidents",
                      "color": "magenta"
                    },
                    "is_child_incident": false,
                    "postmortems": [],
                    "is_parent_incident": false,
                    "assigned_to": "7e26fed1-f11c-4e78-afc6-a",
                    "acknowledged_date": null,
                    "resolved_date": null,
                    "snooze_time": null,
                    "snoozed_till": null
                  }
                ]
              }
            },
            {
              "name": "List all Incident objects(filtered) - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "status": 1,
                    "team_ids": [
                      "4cce18ea-57c5-4beb-bca8-60dc7a68ae3a",
                      "91fd3cc0-ebd6-43b8-aab3-67a05762ba0c"
                    ],
                    "all_teams": 1,
                    "service_ids": [
                      "32a7c77f-aa0a-49de-ab52-e52f0aa77888"
                    ],
                    "user_ids": [
                      "7e26fed1-f11c-4e78-afc6-a"
                    ],
                    "priority_name": "",
                    "priority_ids": [
                      "7064efff-55f2-448b-92e5-a3a53179aa76"
                    ],
                    "tag_ids": [
                      "bc56a5d1-3ec3-4802-9f6a-3f93519ec2a4"
                    ],
                    "sla_ids": [
                      "f14a16aa-15d1-49a1-be27-0c266b15c7fa"
                    ],
                    "from_date": [],
                    "to_date": [],
                    "postmortem_filter": -1,
                    "escalation_policy_ids": [
                      "52fe68d3-cead-40b3-b0ac-d616d38d8e32"
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/filter/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List all Incident objects(filtered) - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "status": 1,
                    "team_ids": [
                      "4cce18ea-57c5-4beb-bca8-60dc7a68ae3a",
                      "91fd3cc0-ebd6-43b8-aab3-67a05762ba0c"
                    ],
                    "all_teams": 1,
                    "service_ids": [
                      "32a7c77f-aa0a-49de-ab52-e52f0aa77888"
                    ],
                    "user_ids": [
                      "7e26fed1-f11c-4e78-afc6-a"
                    ],
                    "priority_name": "",
                    "priority_ids": [
                      "7064efff-55f2-448b-92e5-a3a53179aa76"
                    ],
                    "tag_ids": [
                      "bc56a5d1-3ec3-4802-9f6a-3f93519ec2a4"
                    ],
                    "sla_ids": [
                      "f14a16aa-15d1-49a1-be27-0c266b15c7fa"
                    ],
                    "from_date": [],
                    "to_date": [],
                    "postmortem_filter": -1,
                    "escalation_policy_ids": [
                      "52fe68d3-cead-40b3-b0ac-d616d38d8e32"
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/filter/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List all Incident objects(filtered) - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "status": 1,
                    "team_ids": [
                      "4cce18ea-57c5-4beb-bca8-60dc7a68ae3a",
                      "91fd3cc0-ebd6-43b8-aab3-67a05762ba0c"
                    ],
                    "all_teams": 1,
                    "service_ids": [
                      "32a7c77f-aa0a-49de-ab52-e52f0aa77888"
                    ],
                    "user_ids": [
                      "7e26fed1-f11c-4e78-afc6-a"
                    ],
                    "priority_name": "",
                    "priority_ids": [
                      "7064efff-55f2-448b-92e5-a3a53179aa76"
                    ],
                    "tag_ids": [
                      "bc56a5d1-3ec3-4802-9f6a-3f93519ec2a4"
                    ],
                    "sla_ids": [
                      "f14a16aa-15d1-49a1-be27-0c266b15c7fa"
                    ],
                    "from_date": [],
                    "to_date": [],
                    "postmortem_filter": -1,
                    "escalation_policy_ids": [
                      "52fe68d3-cead-40b3-b0ac-d616d38d8e32"
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/filter/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Create Incidents",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Production Incident\",\n    \"service\": \"191f5e2c-515e-4ee0-b501-3a292f8dae2f\",\n    \"summary\": \"This is where the summary goes\",\n    \"status\": \"1\", // Trigerred - 1, Acknowledged - 2, Resolved - 3\n    \"assigned_to\": \"{{username}}\",\n    \"escalation_policy\": \"{{ep_id}}\",\n    \"sla\": \"{{sla_id}}\",\n    \"team_priority\": \"{{team_priority}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/incidents/",
            "description": "This request will let one create a new incident."
          },
          "response": [
            {
              "name": "Create Incidents - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Production Incident\",\n    \"service\": \"191f5e2c-515e-4ee0-b501-3a292f8dae2f\",\n    \"summary\": \"This is where the summary goes\",\n    \"status\": \"1\", //integer\n    \"assigned_to\": \"{{username}}\",\n    \"escalation_policy\": \"{{ep_id}}\",\n    \"sla\": \"{{sla_id}}\",\n    \"team_priority\": \"{{team_priority}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "summary": "",
                "incident_number": 3,
                "creation_date": "2022-07-08T13:21:25.846623Z",
                "status": 1,
                "unique_id": "uJVWfdAeoPDm3pk2gG2URn",
                "service_object": {
                  "name": "Infra Service",
                  "creation_date": "2022-07-08T12:31:37.429973Z",
                  "summary": "",
                  "description": "This is the description for Infra Service",
                  "unique_id": "191f5e2c-515e-4ee0-b501-3a292f8dae2f",
                  "auto_resolve_timeout": 0,
                  "created_by": "216bba3d-7268-4a8e-89e9-6",
                  "team_priority": "6d100d52-998b-41c8-8928-a7e3aa68e329",
                  "task_template": "8d2640ca-c6ef-45f0-be5f-61dedcf85032",
                  "acknowledgement_timeout": 0,
                  "status": 1,
                  "escalation_policy": "9ea1f98d-b5a3-4d72-8057-2f5f3d743a44",
                  "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                  "sla": "b3c6af23-2b9e-414e-9706-bbf3af76828c",
                  "collation_time": 2,
                  "collation": 1,
                  "under_maintenance": false
                },
                "title": "Production Incident",
                "incident_key": "Q5NmEbsgc4ZjLknsw97VZJ",
                "service": "191f5e2c-515e-4ee0-b501-3a292f8dae2f",
                "urgency": 1,
                "merged_with": null,
                "assigned_to": null,
                "escalation_policy": "9ea1f98d-b5a3-4d72-8057-2f5f3d743a44",
                "escalation_policy_object": {
                  "unique_id": "9ea1f98d-b5a3-4d72-8057-2f5f3d743a44",
                  "name": "Infra Escalation Policy"
                },
                "assigned_to_name": "",
                "resolved_date": null,
                "acknowledged_date": null,
                "context_window_start": null,
                "context_window_end": null,
                "tags": [],
                "sla": "b3c6af23-2b9e-414e-9706-bbf3af76828c",
                "sla_object": {
                  "unique_id": "b3c6af23-2b9e-414e-9706-bbf3af76828c",
                  "name": "Infra SLA",
                  "is_active": true,
                  "acknowledge_time": 30,
                  "resolve_time": 60,
                  "creation_date": "2022-07-08T12:29:08.545605Z"
                },
                "team_priority": "6d100d52-998b-41c8-8928-a7e3aa68e329",
                "team_priority_object": {
                  "unique_id": "6d100d52-998b-41c8-8928-a7e3aa68e329",
                  "name": "Infra Priority",
                  "description": "This is the description for Infra Priority",
                  "color": "orange"
                }
              }
            },
            {
              "name": "Create Incidents - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Production Incident\",\n    \"service\": \"191f5e2c-515e-4ee0-b501-3a292f8dae2f\",\n    \"summary\": \"This is where the summary goes\",\n    \"status\": \"1\", //integer\n    \"assigned_to\": \"{{username}}\",\n    \"escalation_policy\": \"{{ep_id}}\",\n    \"sla\": \"{{sla_id}}\",\n    \"team_priority\": \"{{team_priority}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create Incidents - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Production Incident\",\n    \"service\": \"191f5e2c-515e-4ee0-b501-3a292f8dae2f\",\n    \"summary\": \"This is where the summary goes\",\n    \"status\": \"1\", //integer\n    \"assigned_to\": \"{{username}}\",\n    \"escalation_policy\": \"{{ep_id}}\",\n    \"sla\": \"{{sla_id}}\",\n    \"team_priority\": \"{{team_priority}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create Incidents - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Production Incident\",\n    \"service\": \"191f5e2c-515e-4ee0-b501-3a292f8dae2f\",\n    \"summary\": \"This is where the summary goes\",\n    \"status\": \"1\", //integer\n    \"assigned_to\": \"{{username}}\",\n    \"escalation_policy\": \"{{ep_id}}\",\n    \"sla\": \"{{sla_id}}\",\n    \"team_priority\": \"{{team_priority}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Update the Incident object",
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Production Incident\",\n    \"service\": \"191f5e2c-515e-4ee0-b501-3a292f8dae2f\",\n    \"summary\": \"This is where the summary goes\",\n    \"status\": \"1\", // [Trigerred - 1, Acknowledged - 2, Resolved - 3]\n    \"assigned_to\": \"{{username}}\",\n    \"escalation_policy\": \"{{ep_id}}\",\n    \"sla\": \"{{sla_id}}\",\n    \"team_priority\": \"{{team_priority}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/incidents/{{unique_id}}/"
          },
          "response": [
            {
              "name": "Update the Incident object - 200 OK",
              "originalRequest": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Production Incident\",\n    \"service\": \"191f5e2c-515e-4ee0-b501-3a292f8dae2f\",\n    \"summary\": \"This is where the summary goes\",\n    \"status\": \"1\", //integer\n    \"assigned_to\": \"{{username}}\",\n    \"escalation_policy\": \"{{ep_id}}\",\n    \"sla\": \"{{sla_id}}\",\n    \"team_priority\": \"{{team_priority}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/{{unique_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "summary": "",
                "incident_number": 3,
                "creation_date": "2022-07-08T13:21:25.846623Z",
                "status": 2,
                "unique_id": "uJVWfdAeoPDm3pk2gG2URn",
                "service_object": {
                  "name": "Infra Service",
                  "creation_date": "2022-07-08T12:31:37.429973Z",
                  "summary": "",
                  "description": "This is the description for Infra Service",
                  "unique_id": "191f5e2c-515e-4ee0-b501-3a292f8dae2f",
                  "auto_resolve_timeout": 0,
                  "created_by": "216bba3d-7268-4a8e-89e9-6",
                  "team_priority": "6d100d52-998b-41c8-8928-a7e3aa68e329",
                  "task_template": "8d2640ca-c6ef-45f0-be5f-61dedcf85032",
                  "acknowledgement_timeout": 0,
                  "status": 1,
                  "escalation_policy": "9ea1f98d-b5a3-4d72-8057-2f5f3d743a44",
                  "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                  "sla": "b3c6af23-2b9e-414e-9706-bbf3af76828c",
                  "collation_time": 2,
                  "collation": 1,
                  "under_maintenance": false
                },
                "title": "Modified Production Incident",
                "incident_key": "Q5NmEbsgc4ZjLknsw97VZJ",
                "service": "191f5e2c-515e-4ee0-b501-3a292f8dae2f",
                "urgency": 1,
                "merged_with": null,
                "assigned_to": "507dfda0-a1fd-40e5-943a-e",
                "escalation_policy": "9ea1f98d-b5a3-4d72-8057-2f5f3d743a44",
                "escalation_policy_object": {
                  "unique_id": "9ea1f98d-b5a3-4d72-8057-2f5f3d743a44",
                  "name": "Infra Escalation Policy"
                },
                "assigned_to_name": "Mary Jane",
                "resolved_date": null,
                "acknowledged_date": null,
                "context_window_start": null,
                "context_window_end": null,
                "tags": [],
                "sla": "b3c6af23-2b9e-414e-9706-bbf3af76828c",
                "sla_object": {
                  "unique_id": "b3c6af23-2b9e-414e-9706-bbf3af76828c",
                  "name": "Infra SLA",
                  "is_active": true,
                  "acknowledge_time": 30,
                  "resolve_time": 60,
                  "creation_date": "2022-07-08T12:29:08.545605Z"
                },
                "team_priority": "6d100d52-998b-41c8-8928-a7e3aa68e329",
                "team_priority_object": {
                  "unique_id": "6d100d52-998b-41c8-8928-a7e3aa68e329",
                  "name": "Infra Priority",
                  "description": "This is the description for Infra Priority",
                  "color": "orange"
                }
              }
            },
            {
              "name": "Update the Incident object - 400 Bad Request",
              "originalRequest": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Production Incident\",\n    \"service\": \"191f5e2c-515e-4ee0-b501-3a292f8dae2f\",\n    \"summary\": \"This is where the summary goes\",\n    \"status\": \"1\", //integer\n    \"assigned_to\": \"{{username}}\",\n    \"escalation_policy\": \"{{ep_id}}\",\n    \"sla\": \"{{sla_id}}\",\n    \"team_priority\": \"{{team_priority}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/{{unique_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Update the Incident object - 403 Forbidden",
              "originalRequest": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Production Incident\",\n    \"service\": \"191f5e2c-515e-4ee0-b501-3a292f8dae2f\",\n    \"summary\": \"This is where the summary goes\",\n    \"status\": \"1\", //integer\n    \"assigned_to\": \"{{username}}\",\n    \"escalation_policy\": \"{{ep_id}}\",\n    \"sla\": \"{{sla_id}}\",\n    \"team_priority\": \"{{team_priority}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/{{unique_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Update the Incident object - 404 Not Found",
              "originalRequest": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Production Incident\",\n    \"service\": \"191f5e2c-515e-4ee0-b501-3a292f8dae2f\",\n    \"summary\": \"This is where the summary goes\",\n    \"status\": \"1\", //integer\n    \"assigned_to\": \"{{username}}\",\n    \"escalation_policy\": \"{{ep_id}}\",\n    \"sla\": \"{{sla_id}}\",\n    \"team_priority\": \"{{team_priority}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/{{unique_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "All the API endpoints related to Incidetns."
    },
    {
      "name": "Incident Roles",
      "item": [
        {
          "name": "Create Incident Role",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"New Role\",\n    \"description\": \"This is the description for the new Role\",\n    \"rank\": 5 //An integer that represents the Incident Role. Value range from 0 to 10\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/roles/",
            "description": "This endpoint lets one create a new Role for a specific Team."
          },
          "response": [
            {
              "name": "Create Incident Role - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "title": "New Role",
                    "description": "This is the description for the new Role",
                    "rank": 5
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/roles/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "33994f75-c917-46c4-a367-e05ad7f893a9",
                "title": "Infra Incident Role",
                "description": "",
                "creation_date": "2022-07-08T13:37:07.405199Z",
                "rank": 1
              }
            },
            {
              "name": "Create Incident Role - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "title": "New Role",
                    "description": "This is the description for the new Role",
                    "rank": 5
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/roles/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create Incident Role - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "title": "New Role",
                    "description": "This is the description for the new Role",
                    "rank": 5
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/roles/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create Incident Role - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "title": "New Role",
                    "description": "This is the description for the new Role",
                    "rank": 5
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/roles/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List Incident Roles",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/roles/",
            "description": "This request will get all the Roles in a specific team."
          },
          "response": [
            {
              "name": "List Incident Roles - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/roles/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "unique_id": "89752b4a-43df-401d-9dc0-a446690a7a0e",
                  "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                  "title": "Incident Commander",
                  "description": "The incident commander is the person responsible for all aspects of the incident response, including quickly developing incident objectives, managing all incident operations, application of resources as well as responsibility for all persons involved. The incident commander sets priorities and defines the organization of the incident response teams and the overall incident action plan.",
                  "creation_date": "2022-07-08T10:41:36.623257Z",
                  "rank": 1
                },
                {
                  "unique_id": "33994f75-c917-46c4-a367-e05ad7f893a9",
                  "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                  "title": "Infra Incident Role",
                  "description": "",
                  "creation_date": "2022-07-08T13:37:07.405199Z",
                  "rank": 1
                }
              ]
            },
            {
              "name": "List Incident Roles - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/roles/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List Incident Roles - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/roles/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List Incident Roles - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/roles/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve Incident Role",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/roles/{{role_id}}/"
          },
          "response": [
            {
              "name": "Retrieve Incident Role - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/roles/{{role_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "33994f75-c917-46c4-a367-e05ad7f893a9",
                "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                "title": "Infra Incident Role",
                "description": "",
                "creation_date": "2022-07-08T13:37:07.405199Z",
                "rank": 1
              }
            },
            {
              "name": "Retrieve Incident Role - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/roles/{{role_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve Incident Role - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/roles/{{role_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve Incident Role - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/roles/{{role_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Update Incident Role",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"New Role\",\n    \"description\": \"This is the description for the new Role\",\n    \"rank\": 5 //An integer that represents the Incident Role. Value range from 0 to 10\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/roles/{{role_id}}/",
            "description": "This endpoint will let you update the information of a Role for a specific team. Lets modify the title of the Role to \"Modified Role\" and the Description to \"Modified description\"."
          },
          "response": [
            {
              "name": "Update Incident Role - 200 OK",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "title": "New Role",
                    "description": "This is the description for the new Role",
                    "rank": 5
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/roles/{{role_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "33994f75-c917-46c4-a367-e05ad7f893a9",
                "title": "Modified Infra Incident Role",
                "description": "",
                "creation_date": "2022-07-08T13:37:07.405199Z",
                "rank": 1
              }
            },
            {
              "name": "Update Incident Role - 400 Bad Request",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "title": "New Role",
                    "description": "This is the description for the new Role",
                    "rank": 5
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/roles/{{role_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Update Incident Role - 403 Forbidden",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "title": "New Role",
                    "description": "This is the description for the new Role",
                    "rank": 5
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/roles/{{role_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Update Incident Role - 404 Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "title": "New Role",
                    "description": "This is the description for the new Role",
                    "rank": 5
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/roles/{{role_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete Incident Role",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/roles/{{role_id}}/",
            "description": "This request lets one delete a Role a specific Team."
          },
          "response": [
            {
              "name": "Delete Incident Role - 400 Bad Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/roles/{{role_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete Incident Role - 403 Forbidden",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/roles/{{role_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete Incident Role - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/roles/{{role_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "This endpoint will handle all the operations related to Roles."
    },
    {
      "name": "Incident Notes",
      "item": [
        {
          "name": "Create Incident Note",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": {
                "note": "This is new Infra Incident Note data"
              },
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/incidents/{{unique_id}}/note/"
          },
          "response": [
            {
              "name": "Create Incident Note - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "note": "This is new Infra Incident Note data"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/{{unique_id}}/note/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "KCfA6tgiQTQrQVYuLVx2AK",
                "incident": 1,
                "user": "216bba3d-7268-4a8e-89e9-6",
                "note": "This is new Infra Incident Note data",
                "user_name": "Anshul Rajput",
                "creation_date": "2022-07-08T13:50:37.581269Z"
              }
            },
            {
              "name": "Create Incident Note - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "note": "This is new Infra Incident Note data"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/{{unique_id}}/note/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create Incident Note - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "note": "This is new Infra Incident Note data"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/{{unique_id}}/note/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create Incident Note - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "note": "This is new Infra Incident Note data"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/{{unique_id}}/note/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List incident Notes",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/incidents/{{unique_id}}/note/",
            "description": "This request will get all the notes for the specific incident."
          },
          "response": [
            {
              "name": "List incident Notes - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/note/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "unique_id": "sEeKz4WibyGzvLfoRUoMCk",
                  "incident": 1,
                  "user": "216bba3d-7268-4a8e-89e9-6",
                  "note": "This is Infra Incident Note data",
                  "user_name": "Anshul Rajput",
                  "creation_date": "2022-07-08T12:33:02.593351Z"
                },
                {
                  "unique_id": "KCfA6tgiQTQrQVYuLVx2AK",
                  "incident": 1,
                  "user": "216bba3d-7268-4a8e-89e9-6",
                  "note": "This is new Infra Incident Note data",
                  "user_name": "Anshul Rajput",
                  "creation_date": "2022-07-08T13:50:37.581269Z"
                }
              ]
            },
            {
              "name": "List incident Notes - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/note/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List incident Notes - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/note/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List incident Notes - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/note/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve Incident Note",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/incidents/{{unique_id}}/note/{{incident_note_unique_id}}/"
          },
          "response": [
            {
              "name": "Retrieve Incident Note - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/note/{{incident_note_unique_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "KCfA6tgiQTQrQVYuLVx2AK",
                "incident": 1,
                "user": "216bba3d-7268-4a8e-89e9-6",
                "note": "This is new Infra Incident Note data",
                "user_name": "Anshul Rajput",
                "creation_date": "2022-07-08T13:50:37.581269Z"
              }
            },
            {
              "name": "Retrieve Incident Note - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/note/{{incident_note_unique_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve Incident Note - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/note/{{incident_note_unique_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve Incident Note - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/note/{{incident_note_unique_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Update Incident Note",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": {
                "note": "This is modified Infra Incident Note data"
              },
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/incidents/{{unique_id}}/note/{{incident_note_unique_id}}/"
          },
          "response": [
            {
              "name": "Update Incident Note - 200 OK",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "note": "This is modified Infra Incident Note data"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/{{unique_id}}/note/{{incident_note_unique_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "KCfA6tgiQTQrQVYuLVx2AK",
                "incident": 1,
                "user": "216bba3d-7268-4a8e-89e9-6",
                "note": "This is modified Infra Incident Note data",
                "user_name": "Anshul Rajput",
                "creation_date": "2022-07-08T13:50:37.581269Z"
              }
            },
            {
              "name": "Update Incident Note - 400 Bad Request",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "note": "This is modified Infra Incident Note data"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/{{unique_id}}/note/{{incident_note_unique_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Update Incident Note - 403 Forbidden",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "note": "This is modified Infra Incident Note data"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/{{unique_id}}/note/{{incident_note_unique_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Update Incident Note - 404 Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "note": "This is modified Infra Incident Note data"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/{{unique_id}}/note/{{incident_note_unique_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete Incident Note",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{host}}/api/incidents/{{unique_id}}/note/{{incident_note_unique_id}}/"
          },
          "response": [
            {
              "name": "Delete Incident Note - 400 Bad Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/note/{{incident_note_unique_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete Incident Note - 403 Forbidden",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/note/{{incident_note_unique_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete Incident Note - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/note/{{incident_note_unique_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "All the API endpoints related to Incident Notes."
    },
    {
      "name": "Incident Tags",
      "item": [
        {
          "name": "Create the Incident Tag object",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"team_tag\": \"{{team_tag_unique_id}}\" // example: \"bc56a5d1-3ec3-4802-9f6a-3f93519ec2a4\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/incidents/{{unique_id}}}/tags/",
            "description": "Create the Incident Tag object by setting the values of all the required parameters passed in the request body."
          },
          "response": [
            {
              "name": "Create the Incident Tag object - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"team_tag\": {{team_tag_unique_id}} // example: \"bc56a5d1-3ec3-4802-9f6a-3f93519ec2a4\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/{{unique_id}}}/tags/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "6dba6488-d330-4cbc-bd1b-5a6d912464f8",
                "incident": 27,
                "team_tag": "bc56a5d1-3ec3-4802-9f6a-3f93519ec2a4",
                "name": "Team 1 Tag 1",
                "color": "magenta",
                "tag_id": "bc56a5d1-3ec3-4802-9f6a-3f93519ec2a4",
                "creation_date": "2022-12-22T08:33:22.130596Z"
              }
            },
            {
              "name": "Create the Incident Tag object - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"team_tag\": {{team_tag_unique_id}} // example: \"bc56a5d1-3ec3-4802-9f6a-3f93519ec2a4\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/{{unique_id}}}/tags/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create the Incident Tag object - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"team_tag\": {{team_tag_unique_id}} // example: \"bc56a5d1-3ec3-4802-9f6a-3f93519ec2a4\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/{{unique_id}}}/tags/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create the Incident Tag object - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"team_tag\": {{team_tag_unique_id}} // example: \"bc56a5d1-3ec3-4802-9f6a-3f93519ec2a4\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/{{unique_id}}}/tags/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List all Incident Tag objects",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/incidents/{{unique_id}}/tags/",
            "description": "Returns a list of Incident Tag objects. The Incident Tag objects are sorted by creation_date, with the most recent Incident Note object appearing last."
          },
          "response": [
            {
              "name": "List all Incident Tag objects - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/tags/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "unique_id": "749d39aa-59c5-4719-b300-0c04ad677af5",
                  "incident": 27,
                  "creation_date": "2022-12-22T08:23:10.905923Z",
                  "name": "Team 1 Tag 4",
                  "color": "cyan",
                  "tag_id": "2778cd89-fa68-42bd-8bac-2cdcc569b8bb",
                  "team_tag": "2778cd89-fa68-42bd-8bac-2cdcc569b8bb"
                },
                {
                  "unique_id": "6dba6488-d330-4cbc-bd1b-5a6d912464f8",
                  "incident": 27,
                  "creation_date": "2022-12-22T08:33:22.130596Z",
                  "name": "Team 1 Tag 1",
                  "color": "magenta",
                  "tag_id": "bc56a5d1-3ec3-4802-9f6a-3f93519ec2a4",
                  "team_tag": "bc56a5d1-3ec3-4802-9f6a-3f93519ec2a4"
                }
              ]
            },
            {
              "name": "List all Incident Tag objects - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/tags/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List all Incident Tag objects - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/tags/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List all Incident Tag objects - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/tags/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve the Incident Tag object",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/incidents/{{unique_id}}/tags/{{incident_tag_unique_id}}/",
            "description": "Retrieve the specified Incident Tag object."
          },
          "response": [
            {
              "name": "Retrieve the Incident Tag object - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/tags/{{incident_tag_unique_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "6dba6488-d330-4cbc-bd1b-5a6d912464f8",
                "incident": 27,
                "creation_date": "2022-12-22T08:33:22.130596Z",
                "name": "Team 1 Tag 1",
                "color": "magenta",
                "tag_id": "bc56a5d1-3ec3-4802-9f6a-3f93519ec2a4",
                "team_tag": "bc56a5d1-3ec3-4802-9f6a-3f93519ec2a4"
              }
            },
            {
              "name": "Retrieve the Incident Tag object - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/tags/{{incident_tag_unique_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve the Incident Tag object - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/tags/{{incident_tag_unique_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve the Incident Tag object - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/tags/{{incident_tag_unique_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete the Incident Tag object",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{host}}/api/incidents/{{unique_id}}/tags/{{incident_tag_unique_id}}/",
            "description": "Delete the specified Incident Tag object permanently."
          },
          "response": [
            {
              "name": "Delete the Incident Tag object - 400 Bad Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/tags/{{incident_tag_unique_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete the Incident Tag object - 403 Forbidden",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/tags/{{incident_tag_unique_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete the Incident Tag object - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/tags/{{incident_tag_unique_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "All the API endpoints related to Incident Tag."
    },
    {
      "name": "Incident Responders",
      "item": [
        {
          "name": "List all Incident Responders objects",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/incidents/{{unique_id}}/responders/"
          },
          "response": [
            {
              "name": "List all Incident Responders objects - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/responders/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "count": 0,
                  "next": "string",
                  "previous": "string",
                  "results": [
                    {
                      "unique_id": "string",
                      "incident": 0,
                      "user": "string",
                      "subject": "string",
                      "message": "string",
                      "user_name": "string",
                      "creation_date": "2019-08-24T14:15:22Z"
                    }
                  ]
                }
              ]
            },
            {
              "name": "List all Incident Responders objects - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/responders/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List all Incident Responders objects - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/responders/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List all Incident Responders objects - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/responders/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Add an Incident Responder",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"user\": \"{{user_uuid}}\" //example: 85b563c8-18d0-4668-9462-9\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/incidents/{{unique_id}}/responders/"
          },
          "response": [
            {
              "name": "Add an Incident Responder - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "user": "85b563c8-18d0-4668-9462-9"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/{{unique_id}}/responders/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "k8Ds9iL768XMdGbdSWjthA",
                "incident": 4,
                "user": "85b563c8-18d0-4668-9462-9",
                "subject": null,
                "message": null,
                "user_name": "Vishwa Kirshnakumar",
                "creation_date": "2024-05-20T09:06:09.580Z"
              }
            },
            {
              "name": "Add an Incident Responder - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "user": "85b563c8-18d0-4668-9462-9"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/{{unique_id}}/responders/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "message": "This request can not be processed."
              }
            },
            {
              "name": "Add an Incident Responder - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "user": "85b563c8-18d0-4668-9462-9"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/{{unique_id}}/responders/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Add an Incident Responder - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "user": "85b563c8-18d0-4668-9462-9"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/incidents/{{unique_id}}/responders/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve an Incident Responder",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/incidents/{{unique_id}}/responders/{{responder_unique_id}}/"
          },
          "response": [
            {
              "name": "Retrieve an Incident Responder - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/responders/{{responder_unique_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "k8Ds9iL768XMdGbdSWjthA",
                "incident": 4,
                "user": "85b563c8-18d0-4668-9462-9",
                "subject": null,
                "message": null,
                "user_name": "Vishwa Kirshnakumar",
                "creation_date": "2024-05-20T09:06:09.580Z"
              }
            },
            {
              "name": "Retrieve an Incident Responder - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/responders/{{responder_unique_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve an Incident Responder - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/responders/{{responder_unique_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve an Incident Responder - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/responders/{{responder_unique_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete an Incident Responder",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{host}}/api/incidents/{{unique_id}}/responders/{{responder_unique_id}}/"
          },
          "response": [
            {
              "name": "Delete an Incident Responder - 400 Bad Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/responders/{{responder_unique_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete an Incident Responder - 403 Forbidden",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/responders/{{responder_unique_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete an Incident Responder - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/responders/{{responder_unique_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Events",
      "item": [
        {
          "name": "Create an Alert",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"alert_type\": \"info\", //A pre-defined string that represents the Event. [info, warning, error, critical, acknowledged, resolved]\n  \"message\": \"This is info alert\",\n  \"summary\": \"This is the incident summary\",\n  \"entity_id\": 12345, //A unique id for the alert. If not provided, the Zenduty API will create one.\n  \"payload\": {\n    \"status\": \"ACME Payments are failing\",\n    \"severity\": \"1\",\n    \"project\": \"kubeprod\"\n  },\n  \"urls\": [\n    {\n      \"link_url\": \"https://www.example.com/alerts/12345/\",\n      \"link_text\": \"Alert URL\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/events/{{integration_key}}/",
            "description": "This endpoint will give you the details of team priority"
          },
          "response": [
            {
              "name": "Create an Alert - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "alert_type": "info",
                    "message": "This is info alert",
                    "summary": "This is the incident summary",
                    "entity_id": 12345,
                    "payload": {
                      "status": "ACME Payments are failing",
                      "severity": "1",
                      "project": "kubeprod"
                    },
                    "urls": [
                      {
                        "link_url": "https://www.example.com/alerts/12345/",
                        "link_text": "Alert URL"
                      }
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/events/{{integration_key}}/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "integration_object": {
                  "name": "API",
                  "creation_date": "2022-11-14T14:08:56.089450Z",
                  "summary": "Zenduty API integration",
                  "unique_id": "828361de-681f-4f00-9420-07a185a83e46",
                  "service": "1587103f-6ed2-4eac-8a56-866128df036f",
                  "team": "db61f7ed-ba78-4536-9b2d-256b135a731d",
                  "integration_key": "082a1af8-064c-40a2-a99c-bc9c27d2042d",
                  "is_enabled": true,
                  "integration_type": 0
                },
                "summary": "This is the incident summary",
                "incident": null,
                "creation_date": "2023-04-05T12:40:35.405170Z",
                "message": "This is info alert",
                "integration": "828361de-681f-4f00-9420-07a185a83e46",
                "suppressed": false,
                "entity_id": "12345",
                "payload": {},
                "alert_type": "0",
                "unique_id": "hD5dKNDyFDVADEYdrLViM7",
                "images": [],
                "urls": [
                  {
                    "unique_id": "b7cc93a2-6f64-46c6-bed7-2dd0504917f6",
                    "link_url": "https://www.example.com/alerts/1234/",
                    "link_text": "Alert URL"
                  }
                ],
                "notes": [],
                "incident_created": false
              }
            },
            {
              "name": "Create an Alert - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "alert_type": "info",
                    "message": "This is info alert",
                    "summary": "This is the incident summary",
                    "entity_id": 12345,
                    "payload": {
                      "status": "ACME Payments are failing",
                      "severity": "1",
                      "project": "kubeprod"
                    },
                    "urls": [
                      {
                        "link_url": "https://www.example.com/alerts/12345/",
                        "link_text": "Alert URL"
                      }
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/events/{{integration_key}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create an Alert - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "alert_type": "info",
                    "message": "This is info alert",
                    "summary": "This is the incident summary",
                    "entity_id": 12345,
                    "payload": {
                      "status": "ACME Payments are failing",
                      "severity": "1",
                      "project": "kubeprod"
                    },
                    "urls": [
                      {
                        "link_url": "https://www.example.com/alerts/12345/",
                        "link_text": "Alert URL"
                      }
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/events/{{integration_key}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create an Alert - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "alert_type": "info",
                    "message": "This is info alert",
                    "summary": "This is the incident summary",
                    "entity_id": 12345,
                    "payload": {
                      "status": "ACME Payments are failing",
                      "severity": "1",
                      "project": "kubeprod"
                    },
                    "urls": [
                      {
                        "link_url": "https://www.example.com/alerts/12345/",
                        "link_text": "Alert URL"
                      }
                    ]
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/events/{{integration_key}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "All the API endpoints related to Events."
    },
    {
      "name": "Incident Alerts",
      "item": [
        {
          "name": "List Incident Alerts",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/incidents/{{unique_id}}/alerts/",
            "description": "This request will fetch all the alerts for the specific Incident.\n"
          },
          "response": [
            {
              "name": "List Incident Alerts - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/alerts/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "integration_object": {
                    "name": "Modified Infra custom Integration",
                    "creation_date": "2022-07-08T12:52:22.906327Z",
                    "summary": "This is the summary for Infra custom Integration",
                    "unique_id": "72da1133-a471-4e70-95f3-ce3a5650e9fd",
                    "service": "191f5e2c-515e-4ee0-b501-3a292f8dae2f",
                    "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                    "integration_key": "5f306dae-b327-4ba9-8f3a-ab4cffd57645",
                    "is_enabled": true,
                    "integration_type": 0
                  },
                  "summary": "",
                  "incident": 2,
                  "creation_date": "2022-07-08T13:14:31.300448Z",
                  "message": "Infra Integration Alert",
                  "integration": "72da1133-a471-4e70-95f3-ce3a5650e9fd",
                  "suppressed": false,
                  "entity_id": "de8cf7fc-08ee-4966-b8d3-b6b631da",
                  "alert_type": "3",
                  "unique_id": "xc6qbUftpzkQ28f2MxpRxh",
                  "images": [],
                  "urls": [],
                  "notes": []
                }
              ]
            },
            {
              "name": "List Incident Alerts - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/alerts/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List Incident Alerts - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/alerts/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List Incident Alerts - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/incidents/{{unique_id}}/alerts/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "All the API endpoints related to Incident Alerts."
    },
    {
      "name": "Tags",
      "item": [
        {
          "name": "Create Tag",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": {
                "name": "New Tag",
                "color": "red"
              },
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/tags/",
            "description": "This endpoint lets you create a new Tag for a specific team."
          },
          "response": [
            {
              "name": "Create Tag - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "New Tag",
                    "color": "red"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/tags/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "fbdd8538-8651-4684-bb5e-7cc4b0c7528d",
                "name": "New Infra Tag",
                "creation_date": "2022-07-08T14:11:20.697785Z",
                "color": "red",
                "team": 3674
              }
            },
            {
              "name": "Create Tag - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "New Tag",
                    "color": "red"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/tags/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create Tag - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "New Tag",
                    "color": "red"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/tags/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create Tag - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "New Tag",
                    "color": "red"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/tags/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List Tags",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/tags/",
            "description": "This request will get all the Roles for a specific team."
          },
          "response": [
            {
              "name": "List Tags - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/tags/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "unique_id": "b89de69e-3f7b-4425-a19e-9a56b1e9dbf4",
                  "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                  "name": "Infra Tag",
                  "creation_date": "2022-07-08T12:29:58.621021Z",
                  "color": "volcano"
                },
                {
                  "unique_id": "fbdd8538-8651-4684-bb5e-7cc4b0c7528d",
                  "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                  "name": "New Infra Tag",
                  "creation_date": "2022-07-08T14:11:20.697785Z",
                  "color": "red"
                }
              ]
            },
            {
              "name": "List Tags - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/tags/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List Tags - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/tags/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List Tags - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/tags/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve Tag",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/tags/{{tag_id}}/"
          },
          "response": [
            {
              "name": "Retrieve Tag - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/tags/{{tag_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "fbdd8538-8651-4684-bb5e-7cc4b0c7528d",
                "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                "name": "New Infra Tag",
                "creation_date": "2022-07-08T14:11:20.697785Z",
                "color": "red"
              }
            },
            {
              "name": "Retrieve Tag - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/tags/{{tag_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve Tag - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/tags/{{tag_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve Tag - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/tags/{{tag_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Update Tag",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": {
                "name": "Modified Infra Tag",
                "color": "orange"
              },
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/tags/{{tag_id}}/"
          },
          "response": [
            {
              "name": "Update Tag - 200 OK",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Modified Infra Tag",
                    "color": "orange"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/tags/{{tag_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "fbdd8538-8651-4684-bb5e-7cc4b0c7528d",
                "name": "Modified Infra Tag",
                "creation_date": "2022-07-08T14:11:20.697785Z",
                "color": "orange",
                "team": 3674
              }
            },
            {
              "name": "Update Tag - 400 Bad Request",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Modified Infra Tag",
                    "color": "orange"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/tags/{{tag_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Update Tag - 403 Forbidden",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Modified Infra Tag",
                    "color": "orange"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/tags/{{tag_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Update Tag - 404 Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Modified Infra Tag",
                    "color": "orange"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/tags/{{tag_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete Tag",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/tags/{{tag_id}}/",
            "description": "This request lets you delete a Tag."
          },
          "response": [
            {
              "name": "Delete Tag - 400 Bad Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/tags/{{tag_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete Tag - 403 Forbidden",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/tags/{{tag_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete Tag - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/tags/{{tag_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "This endpoint will handle all the Roles for a team."
    },
    {
      "name": "Task Templates",
      "item": [
        {
          "name": "Create Task Template",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"New Task Template\",\n    \"summary\": \"This is the summary of the new Task Template\",\n    \"due_immediately\": \"0\" //An integer that represents whether the Task Template is due immediately or not [0 - False, 1 - True]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/",
            "description": "This endpoint lets you create a Task Template for a specific Team."
          },
          "response": [
            {
              "name": "Create Task Template - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "New Task Template",
                    "summary": "This is the summary of the new Task Template",
                    "due_immediately": "0"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "94d836f1-4fda-4124-a339-ba7975a15559",
                "name": "New Infra Task Template",
                "creation_date": "2022-07-08T14:22:08.597518Z",
                "summary": "This is the summary for New Infra Task Template",
                "due_immediately": 0
              }
            },
            {
              "name": "Create Task Template - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "New Task Template",
                    "summary": "This is the summary of the new Task Template",
                    "due_immediately": "0"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create Task Template - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "New Task Template",
                    "summary": "This is the summary of the new Task Template",
                    "due_immediately": "0"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create Task Template - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "New Task Template",
                    "summary": "This is the summary of the new Task Template",
                    "due_immediately": "0"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List Task Templates",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/",
            "description": "This request will get all the Task Templates for the specific team."
          },
          "response": [
            {
              "name": "List Task Templates - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "unique_id": "8d2640ca-c6ef-45f0-be5f-61dedcf85032",
                  "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                  "name": "Infra Task Template",
                  "creation_date": "2022-07-08T12:26:47.700733Z",
                  "summary": "This is the summary for Infra Task Template",
                  "due_immediately": 0
                },
                {
                  "unique_id": "94d836f1-4fda-4124-a339-ba7975a15559",
                  "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                  "name": "New Infra Task Template",
                  "creation_date": "2022-07-08T14:22:08.597518Z",
                  "summary": "This is the summary for New Infra Task Template",
                  "due_immediately": 0
                }
              ]
            },
            {
              "name": "List Task Templates - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List Task Templates - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List Task Templates - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve Task Templates",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/{{task_template_id}}/"
          },
          "response": [
            {
              "name": "Retrieve Task Templates - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/{{task_template_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "94d836f1-4fda-4124-a339-ba7975a15559",
                "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                "name": "New Infra Task Template",
                "creation_date": "2022-07-08T14:22:08.597518Z",
                "summary": "This is the summary for New Infra Task Template",
                "due_immediately": 0
              }
            },
            {
              "name": "Retrieve Task Templates - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/{{task_template_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve Task Templates - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/{{task_template_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve Task Templates - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/{{task_template_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Update Task Template",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"New Task Template\",\n    \"summary\": \"This is the summary of the new Task Template\",\n    \"due_immediately\": \"0\" //An integer that represents whether the Task Template is due immediately or not [0 - False, 1 - True]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/{{task_template_id}}/",
            "description": "This endpoint lets you update the Task Template details of a specific team."
          },
          "response": [
            {
              "name": "Update Task Template - 200 OK",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "New Task Template",
                    "summary": "This is the summary of the new Task Template",
                    "due_immediately": "0"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/{{task_template_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "94d836f1-4fda-4124-a339-ba7975a15559",
                "name": "Modified Infra Task Template",
                "creation_date": "2022-07-08T14:22:08.597518Z",
                "summary": "This is the summary for Modified Infra Task Template",
                "due_immediately": 0
              }
            },
            {
              "name": "Update Task Template - 400 Bad Request",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "New Task Template",
                    "summary": "This is the summary of the new Task Template",
                    "due_immediately": "0"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/{{task_template_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Update Task Template - 403 Forbidden",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "New Task Template",
                    "summary": "This is the summary of the new Task Template",
                    "due_immediately": "0"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/{{task_template_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Update Task Template - 404 Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "New Task Template",
                    "summary": "This is the summary of the new Task Template",
                    "due_immediately": "0"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/{{task_template_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete Task Template",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/{{task_template_id}}/",
            "description": "This request lets you delete a Task Template for a specific Team."
          },
          "response": [
            {
              "name": "Delete Task Template - 400 Bad Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/{{task_template_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete Task Template - 403 Forbidden",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/{{task_template_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete Task Template - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/task_templates/{{task_template_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "This endpoint will handle all the operation related to Task Templates."
    },
    {
      "name": "Priorities",
      "item": [
        {
          "name": "Create Priority",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": {
                "name": "Priority 0",
                "description": "Description of the Priority",
                "color": "red"
              },
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/priority/"
          },
          "response": [
            {
              "name": "Create Priority - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Priority 0",
                    "description": "Description of the Priority",
                    "color": "red"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/priority/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "88519afe-3409-4f96-b9de-4464908f6e88",
                "name": "New Infra Priority",
                "description": "",
                "creation_date": "2022-07-08T14:33:05.609863Z",
                "color": "",
                "team": 3674
              }
            },
            {
              "name": "Create Priority - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Priority 0",
                    "description": "Description of the Priority",
                    "color": "red"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/priority/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create Priority - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Priority 0",
                    "description": "Description of the Priority",
                    "color": "red"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/priority/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create Priority - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Priority 0",
                    "description": "Description of the Priority",
                    "color": "red"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/priority/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List Priorities",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/priority/"
          },
          "response": [
            {
              "name": "List Priorities - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/priority/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "unique_id": "6d100d52-998b-41c8-8928-a7e3aa68e329",
                  "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                  "description": "This is the description for Infra Priority",
                  "name": "Infra Priority",
                  "creation_date": "2022-07-08T12:29:45.895959Z",
                  "color": "orange"
                },
                {
                  "unique_id": "88519afe-3409-4f96-b9de-4464908f6e88",
                  "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                  "description": "",
                  "name": "New Infra Priority",
                  "creation_date": "2022-07-08T14:33:05.609863Z",
                  "color": ""
                }
              ]
            },
            {
              "name": "List Priorities - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/priority/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List Priorities - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/priority/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List Priorities - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/priority/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve Priority",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/priority/{{priority_id}}/"
          },
          "response": [
            {
              "name": "Retrieve Priority - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/priority/{{priority_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "88519afe-3409-4f96-b9de-4464908f6e88",
                "team": "61010821-08aa-4098-94f8-f88f1990b54a",
                "description": "",
                "name": "New Infra Priority",
                "creation_date": "2022-07-08T14:33:05.609863Z",
                "color": ""
              }
            },
            {
              "name": "Retrieve Priority - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/priority/{{priority_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve Priority - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/priority/{{priority_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve Priority - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/priority/{{priority_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Update Priority",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": {
                "name": "Priority 0",
                "description": "Description of the Priority",
                "color": "red"
              },
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/priority/{{priority_id}}/"
          },
          "response": [
            {
              "name": "Update Priority - 200 OK",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Priority 0",
                    "description": "Description of the Priority",
                    "color": "red"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/priority/{{priority_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "88519afe-3409-4f96-b9de-4464908f6e88",
                "name": "Modified Infra Priority",
                "description": "",
                "creation_date": "2022-07-08T14:33:05.609863Z",
                "color": "",
                "team": 3674
              }
            },
            {
              "name": "Update Priority - 400 Bad Request",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Priority 0",
                    "description": "Description of the Priority",
                    "color": "red"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/priority/{{priority_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Update Priority - 403 Forbidden",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Priority 0",
                    "description": "Description of the Priority",
                    "color": "red"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/priority/{{priority_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Update Priority - 404 Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Priority 0",
                    "description": "Description of the Priority",
                    "color": "red"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/priority/{{priority_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete Priority",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/priority/{{priority_id}}/"
          },
          "response": [
            {
              "name": "Delete Priority - 400 Bad Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/priority/{{priority_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete Priority - 403 Forbidden",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/priority/{{priority_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete Priority - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/priority/{{priority_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "This endpoint will handle all the operations related to team priority."
    },
    {
      "name": "SLA",
      "item": [
        {
          "name": "Create SLA",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{sla_name}}\", // example: \"New Infra SLA\",\n    \"escalations\": [\n        {\n            \"responder\": [\n                {\n                    \"user\": \"{{user_uuid}}\"\n                }\n            ],\n            \"time\": \"-5\", //An integer that represents the SLA Escalation time. The value will be -ve before sla breach and +ve after sla breach. (in minutes)\n            \"type\": \"1\" //An integer that represents the SLA Escalation type. [1 - Acknowledge SLA escalation, 2 - Resolve SLA escalation]\n        }\n    ],\n    \"is_active\": \"true\",\n    \"acknowledge_time\": \"5\", //An integer that represents the SLA acknowledge time (in minutes)\n    \"resolve_time\": \"30\" ////An integer that represents the SLA resolve time (in minutes)\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/sla/",
            "description": "Create the SLA object by setting the values of all the required parameters passed in the request body."
          },
          "response": [
            {
              "name": "Create SLA - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": {{sla_name}}, // example: \"New Infra SLA\",\n    \"escalations\": [],\n    \"is_active\": \"true\",\n    \"acknowledge_time\": \"5\",\n    \"resolve_time\": \"30\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/sla/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "escalations": [],
                "unique_id": "010bc17d-f688-403d-b762-f039fb6f5ad9",
                "name": "New Infra SLA",
                "description": "",
                "is_active": true,
                "conditions": "{}",
                "acknowledge_time": null,
                "resolve_time": null,
                "team": 3674
              }
            },
            {
              "name": "Create SLA - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": {{sla_name}}, // example: \"New Infra SLA\",\n    \"escalations\": [],\n    \"is_active\": \"true\",\n    \"acknowledge_time\": \"5\",\n    \"resolve_time\": \"30\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/sla/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create SLA - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": {{sla_name}}, // example: \"New Infra SLA\",\n    \"escalations\": [],\n    \"is_active\": \"true\",\n    \"acknowledge_time\": \"5\",\n    \"resolve_time\": \"30\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/sla/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create SLA - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": {{sla_name}}, // example: \"New Infra SLA\",\n    \"escalations\": [],\n    \"is_active\": \"true\",\n    \"acknowledge_time\": \"5\",\n    \"resolve_time\": \"30\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/sla/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List SLA's",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/sla/",
            "description": "Returns a list of SLA objects."
          },
          "response": [
            {
              "name": "List SLA's - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/sla/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "unique_id": "b3c6af23-2b9e-414e-9706-bbf3af76828c",
                  "name": "Infra SLA",
                  "is_active": true,
                  "acknowledge_time": 30,
                  "resolve_time": 60,
                  "creation_date": "2022-07-08T12:29:08.545605Z"
                },
                {
                  "unique_id": "010bc17d-f688-403d-b762-f039fb6f5ad9",
                  "name": "New Infra SLA",
                  "is_active": true,
                  "acknowledge_time": null,
                  "resolve_time": null,
                  "creation_date": "2022-07-08T14:45:21.096085Z"
                }
              ]
            },
            {
              "name": "List SLA's - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/sla/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List SLA's - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/sla/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List SLA's - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/sla/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve SLA",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/sla/{{sla_id}}/",
            "description": "Retrieve the specified SLA object."
          },
          "response": [
            {
              "name": "Retrieve SLA - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/sla/{{sla_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "escalations": [],
                "unique_id": "010bc17d-f688-403d-b762-f039fb6f5ad9",
                "name": "New Infra SLA",
                "description": "",
                "is_active": true,
                "conditions": "{}",
                "acknowledge_time": null,
                "resolve_time": null,
                "team": 3674
              }
            },
            {
              "name": "Retrieve SLA - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/sla/{{sla_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve SLA - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/sla/{{sla_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve SLA - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/sla/{{sla_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Update SLA",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{sla_name}}\", // example: \"New Infra SLA\",\n    \"escalations\": [\n        {\n            \"responder\": [\n                {\n                    \"user\": \"{{user_uuid}}\"\n                }\n            ],\n            \"time\": \"-5\", //An integer that represents the SLA Escalation time. The value will be -ve before sla breach and +ve after sla breach. (in minutes)\n            \"type\": \"1\" //An integer that represents the SLA Escalation type. [1 - Acknowledge SLA escalation, 2 - Resolve SLA escalation]\n        }\n    ],\n    \"is_active\": \"true\",\n    \"acknowledge_time\": \"5\", //An integer that represents the SLA acknowledge time (in minutes)\n    \"resolve_time\": \"30\" ////An integer that represents the SLA resolve time (in minutes)\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/sla/{{sla_id}}/",
            "description": "Updates the specified SLA object by setting the values of the parameters passed in the request body. Any parameters not provided will be left unchanged."
          },
          "response": [
            {
              "name": "Update SLA - 200 OK",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": {{sla_name}}, // example: \"New Infra SLA\",\n    \"escalations\": [],\n    \"is_active\": \"true\",\n    \"acknowledge_time\": \"5\",\n    \"resolve_time\": \"30\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/sla/{{sla_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "escalations": [],
                "unique_id": "010bc17d-f688-403d-b762-f039fb6f5ad9",
                "name": "Modified Infra SLA",
                "description": "",
                "is_active": true,
                "conditions": "{}",
                "acknowledge_time": null,
                "resolve_time": null,
                "team": 3674
              }
            },
            {
              "name": "Update SLA - 400 Bad Request",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": {{sla_name}}, // example: \"New Infra SLA\",\n    \"escalations\": [],\n    \"is_active\": \"true\",\n    \"acknowledge_time\": \"5\",\n    \"resolve_time\": \"30\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/sla/{{sla_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Update SLA - 403 Forbidden",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": {{sla_name}}, // example: \"New Infra SLA\",\n    \"escalations\": [],\n    \"is_active\": \"true\",\n    \"acknowledge_time\": \"5\",\n    \"resolve_time\": \"30\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/sla/{{sla_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Update SLA - 404 Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": {{sla_name}}, // example: \"New Infra SLA\",\n    \"escalations\": [],\n    \"is_active\": \"true\",\n    \"acknowledge_time\": \"5\",\n    \"resolve_time\": \"30\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/sla/{{sla_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete SLA",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/sla/{{sla_id}}/",
            "description": "Delete the specified SLA object permanently."
          },
          "response": [
            {
              "name": "Delete SLA - 400 Bad Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/sla/{{sla_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete SLA - 403 Forbidden",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/sla/{{sla_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete SLA - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/sla/{{sla_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "This object represents the sla of the incident. You can checkout the sla docs here [https://docs.zenduty.com/docs/incidentsla](https://docs.zenduty.com/docs/incidentsla)"
    },
    {
      "name": "Team Maintenance Mode",
      "item": [
        {
          "name": "Create Team Maintenance Mode",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{team_maintenance_name}}\", // example: \"New Infra Team Maintenance\",\n    \"services\": [\n        {\n            \"service\": \"{{service_unique_id}}\" // example: 191f5e2c-515e-4ee0-b501-3a292f8dae2f\n        }\n    ],\n    \"start_time\": \"{{team_maintenance_start_time}}\", // example: \"2022-07-08T18:06:00Z\",\n    \"end_time\": \"{{team_maintenance_end_time}}\", // example: \"2022-07-15T18:06:00Z\"\n    \"repeat_interval\": \"0\", //An integer that represents the Team Maintenance Mode repeat interval in number of days\n    \"time_zone\": \"UTC\",\n    \"repeat_until\": \"\" //example: \"2022-07-15T18:06:00Z\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/maintenance/",
            "description": "Create the Team Maintenance Mode object by setting the values of all the required parameters passed in the request body."
          },
          "response": [
            {
              "name": "Create Team Maintenance Mode - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": {{team_maintenance_name}}, // example: \"New Infra Team Maintenance\",\n  \"services\": [\n      {\n          \"service\": {{service_unique_id}} // example: 191f5e2c-515e-4ee0-b501-3a292f8dae2f\n      }\n  ],\n  \"start_time\": {{team_maintenance_start_time}}, // example: \"2022-07-08T18:06:00Z\",\n  \"end_time\": {{team_maintenance_end_time}}, // example: \"2022-07-15T18:06:00Z\"\n  \"repeat_interval\": \"0\",\n  \"time_zone\": \"UTC\",\n  \"repeat_until\": \"\" //string <date-time>\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/maintenance/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "162055d5-9646-43df-95cb-2ac511bf34ef",
                "start_time": "2022-07-08T18:06:00Z",
                "end_time": "2022-07-15T18:06:00Z",
                "repeat_interval": 0,
                "services": [
                  {
                    "unique_id": "5390bdd2-8e97-44cb-9d48-db32364511b1",
                    "service": "191f5e2c-515e-4ee0-b501-3a292f8dae2f"
                  }
                ],
                "creation_date": "2022-07-08T14:55:46.681634Z",
                "name": "New Infra Team Maintenance",
                "time_zone": "UTC",
                "repeat_until": null
              }
            },
            {
              "name": "Create Team Maintenance Mode - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": {{team_maintenance_name}}, // example: \"New Infra Team Maintenance\",\n  \"services\": [\n      {\n          \"service\": {{service_unique_id}} // example: 191f5e2c-515e-4ee0-b501-3a292f8dae2f\n      }\n  ],\n  \"start_time\": {{team_maintenance_start_time}}, // example: \"2022-07-08T18:06:00Z\",\n  \"end_time\": {{team_maintenance_end_time}}, // example: \"2022-07-15T18:06:00Z\"\n  \"repeat_interval\": \"0\",\n  \"time_zone\": \"UTC\",\n  \"repeat_until\": \"\" //string <date-time>\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/maintenance/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create Team Maintenance Mode - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": {{team_maintenance_name}}, // example: \"New Infra Team Maintenance\",\n  \"services\": [\n      {\n          \"service\": {{service_unique_id}} // example: 191f5e2c-515e-4ee0-b501-3a292f8dae2f\n      }\n  ],\n  \"start_time\": {{team_maintenance_start_time}}, // example: \"2022-07-08T18:06:00Z\",\n  \"end_time\": {{team_maintenance_end_time}}, // example: \"2022-07-15T18:06:00Z\"\n  \"repeat_interval\": \"0\",\n  \"time_zone\": \"UTC\",\n  \"repeat_until\": \"\" //string <date-time>\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/maintenance/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create Team Maintenance Mode - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": {{team_maintenance_name}}, // example: \"New Infra Team Maintenance\",\n  \"services\": [\n      {\n          \"service\": {{service_unique_id}} // example: 191f5e2c-515e-4ee0-b501-3a292f8dae2f\n      }\n  ],\n  \"start_time\": {{team_maintenance_start_time}}, // example: \"2022-07-08T18:06:00Z\",\n  \"end_time\": {{team_maintenance_end_time}}, // example: \"2022-07-15T18:06:00Z\"\n  \"repeat_interval\": \"0\",\n  \"time_zone\": \"UTC\",\n  \"repeat_until\": \"\" //string <date-time>\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/maintenance/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List Team Maintenance Modes",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/maintenance/",
            "description": "Returns a list of Team Maintenance Mode objects. The Team Maintenance Mode objects are sorted by creation_date, with the most recent Team Maintenance Mode object appearing last."
          },
          "response": [
            {
              "name": "List Team Maintenance Modes - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/maintenance/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "unique_id": "de38ec19-283f-4501-90df-1e7eb74191cb",
                  "start_time": "2022-07-08T18:06:00Z",
                  "end_time": "2022-07-15T18:06:00Z",
                  "repeat_interval": 4,
                  "services": [
                    {
                      "unique_id": "9b5a0301-3325-49b6-b54c-71d79a50c82d",
                      "service": "191f5e2c-515e-4ee0-b501-3a292f8dae2f"
                    }
                  ],
                  "creation_date": "2022-07-08T12:36:43.932588Z",
                  "name": "Infra Team Maintenance",
                  "time_zone": "UTC",
                  "repeat_until": "2022-07-12T12:36:42.137000Z"
                },
                {
                  "unique_id": "162055d5-9646-43df-95cb-2ac511bf34ef",
                  "start_time": "2022-07-08T18:06:00Z",
                  "end_time": "2022-07-15T18:06:00Z",
                  "repeat_interval": 0,
                  "services": [
                    {
                      "unique_id": "5390bdd2-8e97-44cb-9d48-db32364511b1",
                      "service": "191f5e2c-515e-4ee0-b501-3a292f8dae2f"
                    }
                  ],
                  "creation_date": "2022-07-08T14:55:46.681634Z",
                  "name": "New Infra Team Maintenance",
                  "time_zone": "UTC",
                  "repeat_until": null
                }
              ]
            },
            {
              "name": "List Team Maintenance Modes - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/maintenance/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List Team Maintenance Modes - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/maintenance/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List Team Maintenance Modes - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/maintenance/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve Team Maintenance Mode",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/maintenance/{{team_maintenance_unique_id}}/",
            "description": "Retrieve the specified Team Maintenance Mode object."
          },
          "response": [
            {
              "name": "Retrieve Team Maintenance Mode - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/maintenance/{{team_maintenance_unique_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "162055d5-9646-43df-95cb-2ac511bf34ef",
                "start_time": "2022-07-08T18:06:00Z",
                "end_time": "2022-07-15T18:06:00Z",
                "repeat_interval": 0,
                "services": [
                  {
                    "unique_id": "5390bdd2-8e97-44cb-9d48-db32364511b1",
                    "service": "191f5e2c-515e-4ee0-b501-3a292f8dae2f"
                  }
                ],
                "creation_date": "2022-07-08T14:55:46.681634Z",
                "name": "New Infra Team Maintenance",
                "time_zone": "UTC",
                "repeat_until": null
              }
            },
            {
              "name": "Retrieve Team Maintenance Mode - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/maintenance/{{team_maintenance_unique_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve Team Maintenance Mode - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/maintenance/{{team_maintenance_unique_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve Team Maintenance Mode - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/maintenance/{{team_maintenance_unique_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Update Team Maintenance Mode",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{team_maintenance_name}}\", // example: \"New Infra Team Maintenance\",\n    \"services\": [\n        {\n            \"service\": \"{{service_unique_id}}\" // example: 191f5e2c-515e-4ee0-b501-3a292f8dae2f\n        }\n    ],\n    \"start_time\": \"{{team_maintenance_start_time}}\", // example: \"2022-07-08T18:06:00Z\",\n    \"end_time\": \"{{team_maintenance_end_time}}\", // example: \"2022-07-15T18:06:00Z\"\n    \"repeat_interval\": \"0\", //An integer that represents the Team Maintenance Mode repeat interval in number of days\n    \"time_zone\": \"UTC\",\n    \"repeat_until\": \"\" //example: \"2022-07-15T18:06:00Z\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/maintenance/{{team_maintenance_unique_id}}/",
            "description": "Updates the specified Team Maintenance Mode object by setting the values of the parameters passed in the request body. Any parameters not provided will be left unchanged."
          },
          "response": [
            {
              "name": "Update Team Maintenance Mode - 200 OK",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": {{team_maintenance_name}}, // example: \"New Infra Team Maintenance\",\n  \"services\": [\n      {\n          \"service\": {{service_unique_id}} // example: 191f5e2c-515e-4ee0-b501-3a292f8dae2f\n      }\n  ],\n  \"start_time\": {{team_maintenance_start_time}}, // example: \"2022-07-08T18:06:00Z\",\n  \"end_time\": {{team_maintenance_end_time}}, // example: \"2022-07-15T18:06:00Z\"\n  \"repeat_interval\": \"0\",\n  \"time_zone\": \"UTC\",\n  \"repeat_until\": \"\" //string <date-time>\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/maintenance/{{team_maintenance_unique_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "162055d5-9646-43df-95cb-2ac511bf34ef",
                "start_time": "2022-07-08T18:06:00Z",
                "end_time": "2022-07-15T18:06:00Z",
                "repeat_interval": null,
                "services": [
                  {
                    "unique_id": "5390bdd2-8e97-44cb-9d48-db32364511b1",
                    "service": "191f5e2c-515e-4ee0-b501-3a292f8dae2f"
                  }
                ],
                "creation_date": "2022-07-08T14:55:46.681634Z",
                "name": "Modified Infra Team Maintenance",
                "time_zone": null,
                "repeat_until": null
              }
            },
            {
              "name": "Update Team Maintenance Mode - 400 Bad Request",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": {{team_maintenance_name}}, // example: \"New Infra Team Maintenance\",\n  \"services\": [\n      {\n          \"service\": {{service_unique_id}} // example: 191f5e2c-515e-4ee0-b501-3a292f8dae2f\n      }\n  ],\n  \"start_time\": {{team_maintenance_start_time}}, // example: \"2022-07-08T18:06:00Z\",\n  \"end_time\": {{team_maintenance_end_time}}, // example: \"2022-07-15T18:06:00Z\"\n  \"repeat_interval\": \"0\",\n  \"time_zone\": \"UTC\",\n  \"repeat_until\": \"\" //string <date-time>\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/maintenance/{{team_maintenance_unique_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Update Team Maintenance Mode - 403 Forbidden",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": {{team_maintenance_name}}, // example: \"New Infra Team Maintenance\",\n  \"services\": [\n      {\n          \"service\": {{service_unique_id}} // example: 191f5e2c-515e-4ee0-b501-3a292f8dae2f\n      }\n  ],\n  \"start_time\": {{team_maintenance_start_time}}, // example: \"2022-07-08T18:06:00Z\",\n  \"end_time\": {{team_maintenance_end_time}}, // example: \"2022-07-15T18:06:00Z\"\n  \"repeat_interval\": \"0\",\n  \"time_zone\": \"UTC\",\n  \"repeat_until\": \"\" //string <date-time>\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/maintenance/{{team_maintenance_unique_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Update Team Maintenance Mode - 404 Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": {{team_maintenance_name}}, // example: \"New Infra Team Maintenance\",\n  \"services\": [\n      {\n          \"service\": {{service_unique_id}} // example: 191f5e2c-515e-4ee0-b501-3a292f8dae2f\n      }\n  ],\n  \"start_time\": {{team_maintenance_start_time}}, // example: \"2022-07-08T18:06:00Z\",\n  \"end_time\": {{team_maintenance_end_time}}, // example: \"2022-07-15T18:06:00Z\"\n  \"repeat_interval\": \"0\",\n  \"time_zone\": \"UTC\",\n  \"repeat_until\": \"\" //string <date-time>\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/maintenance/{{team_maintenance_unique_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete Team Maintenance Mode",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{host}}/api/account/teams/{{host}}/maintenance/{{team_maintenance_unique_id}}/",
            "description": "Delete the specified Team Maintenance Mode object permanently."
          },
          "response": [
            {
              "name": "Delete Team Maintenance Mode - 400 Bad Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{host}}/maintenance/{{team_maintenance_unique_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete Team Maintenance Mode - 403 Forbidden",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{host}}/maintenance/{{team_maintenance_unique_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete Team Maintenance Mode - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{host}}/maintenance/{{team_maintenance_unique_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "This object represents the maintenance mode of the team. You can checkout the team maintenance mode docs here [https://docs.zenduty.com/docs/maintenancewindows](https://docs.zenduty.com/docs/maintenancewindows)"
    },
    {
      "name": "Team Postmortems",
      "item": [
        {
          "name": "Create Team Postmortem",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"author\": \"{{user_uuid}}\", // example: \"85b563c8-18d0-4668-9462-9\",\n    \"incidents\": [\n        {\n            \"incident\": \"{{incident_unique_id}}\" // example: \"U2gGkyJnLQLkX2zQnvkpLW\"\n        }\n    ],\n    \"title\": \"{{team_postmortem_title}}\", // example: \"New Infra Postmortem\"\n    \"status\": \"Pending\",\n    \"postmortem_data\": \"Details of the postmortem\",\n    \"download_status\": \"0\" //An integer that represents the Postmortem download status [1 - Uninitiated, 2- Initiated, 3 - Finished, 4 - Error]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/",
            "description": "Create the Team Postmortem object by setting the values of all the required parameters passed in the request body."
          },
          "response": [
            {
              "name": "Create Team Postmortem - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"author\": {{user_username}}, // example: \"85b563c8-18d0-4668-9462-9\",\n    \"incidents\": [\n        {\n            \"incident\": {{incident_unique_id}} // example: \"U2gGkyJnLQLkX2zQnvkpLW\"\n        }\n    ],\n    \"title\": {{team_postmortem_title}}, // example: \"New Infra Postmortem\"\n    \"status\": \"Pending\",\n    \"postmortem_data\": \"Details of the postmortem\",\n    \"download_status\": \"0\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "f6778c71-eba2-49da-b226-ca27172d7303",
                "author": "85b563c8-18d0-4668-9462-9",
                "status": "",
                "incidents": [
                  {
                    "unique_id": "80673be0-aa18-4f70-ae92-dec403dfc32e",
                    "incident": "U2gGkyJnLQLkX2zQnvkpLW"
                  }
                ],
                "author_name": "Vishwa Krishnakumar",
                "title": "New Infra Postmortem",
                "postmortem_data": "",
                "download_status": 0
              }
            },
            {
              "name": "Create Team Postmortem - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"author\": {{user_username}}, // example: \"85b563c8-18d0-4668-9462-9\",\n    \"incidents\": [\n        {\n            \"incident\": {{incident_unique_id}} // example: \"U2gGkyJnLQLkX2zQnvkpLW\"\n        }\n    ],\n    \"title\": {{team_postmortem_title}}, // example: \"New Infra Postmortem\"\n    \"status\": \"Pending\",\n    \"postmortem_data\": \"Details of the postmortem\",\n    \"download_status\": \"0\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create Team Postmortem - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"author\": {{user_username}}, // example: \"85b563c8-18d0-4668-9462-9\",\n    \"incidents\": [\n        {\n            \"incident\": {{incident_unique_id}} // example: \"U2gGkyJnLQLkX2zQnvkpLW\"\n        }\n    ],\n    \"title\": {{team_postmortem_title}}, // example: \"New Infra Postmortem\"\n    \"status\": \"Pending\",\n    \"postmortem_data\": \"Details of the postmortem\",\n    \"download_status\": \"0\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create Team Postmortem - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"author\": {{user_username}}, // example: \"85b563c8-18d0-4668-9462-9\",\n    \"incidents\": [\n        {\n            \"incident\": {{incident_unique_id}} // example: \"U2gGkyJnLQLkX2zQnvkpLW\"\n        }\n    ],\n    \"title\": {{team_postmortem_title}}, // example: \"New Infra Postmortem\"\n    \"status\": \"Pending\",\n    \"postmortem_data\": \"Details of the postmortem\",\n    \"download_status\": \"0\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List Team Postmortem",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/",
            "description": "Returns a list of Team Postmortem objects."
          },
          "response": [
            {
              "name": "List Team Postmortem - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "unique_id": "4d0726ca-664f-4d07-8005-a9ba2c654cc9",
                  "author": "85b563c8-18d0-4668-9462-9",
                  "status": "Critical",
                  "postmortem_data": "<p>This is the Infra Postmortem data</p>",
                  "incidents": [
                    {
                      "unique_id": "d86daf72-a2f2-4d54-adec-19f4380ada48",
                      "incident": {
                        "unique_id": "U2gGkyJnLQLkX2zQnvkpLW",
                        "title": "Infra Incident",
                        "incident_number": 1
                      }
                    }
                  ],
                  "author_name": "Vishwa Krishnakumar",
                  "title": "Infra Postmortem",
                  "download_status": 1,
                  "amazon_link": "https://zenduty-dev-report.s3.amazonaws.com/",
                  "creation_date": "2022-07-08T12:35:38.234310Z"
                },
                {
                  "unique_id": "f6778c71-eba2-49da-b226-ca27172d7303",
                  "author": "85b563c8-18d0-4668-9462-9",
                  "status": "",
                  "postmortem_data": "",
                  "incidents": [
                    {
                      "unique_id": "80673be0-aa18-4f70-ae92-dec403dfc32e",
                      "incident": {
                        "unique_id": "U2gGkyJnLQLkX2zQnvkpLW",
                        "title": "Infra Incident",
                        "incident_number": 1
                      }
                    }
                  ],
                  "author_name": "Vishwa Krishnakumar",
                  "title": "New Infra Postmortem",
                  "download_status": 0,
                  "amazon_link": "https://zenduty-dev-report.s3.amazonaws.com/",
                  "creation_date": "2022-07-08T15:08:01.521494Z"
                }
              ]
            },
            {
              "name": "List Team Postmortem - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List Team Postmortem - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List Team Postmortem - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve Team Postmortem",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/{{postmortem_id}}/",
            "description": "Retrieve the specified Postmortem object."
          },
          "response": [
            {
              "name": "Retrieve Team Postmortem - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/{{postmortem_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "f6778c71-eba2-49da-b226-ca27172d7303",
                "author": "85b563c8-18d0-4668-9462-9",
                "status": "",
                "postmortem_data": "",
                "incidents": [
                  {
                    "unique_id": "80673be0-aa18-4f70-ae92-dec403dfc32e",
                    "incident": {
                      "unique_id": "U2gGkyJnLQLkX2zQnvkpLW",
                      "title": "Infra Incident",
                      "incident_number": 1
                    }
                  }
                ],
                "author_name": "Vishwa Krishnakumar",
                "title": "New Infra Postmortem",
                "download_status": 0,
                "amazon_link": "https://zenduty-dev-report.s3.amazonaws.com/",
                "creation_date": "2022-07-08T15:08:01.521494Z"
              }
            },
            {
              "name": "Retrieve Team Postmortem - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/{{postmortem_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve Team Postmortem - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/{{postmortem_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve Team Postmortem - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/{{postmortem_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Update Team Postmortem",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"author\": \"{{user_uuid}}\", // example: \"85b563c8-18d0-4668-9462-9\",\n    \"incidents\": [\n        {\n            \"incident\": \"{{incident_unique_id}}\" // example: \"U2gGkyJnLQLkX2zQnvkpLW\"\n        }\n    ],\n    \"title\": \"{{team_postmortem_title}}\", // example: \"New Infra Postmortem\"\n    \"status\": \"Pending\",\n    \"postmortem_data\": \"Details of the postmortem\",\n    \"download_status\": \"0\" //An integer that represents the Postmortem download status [1 - Uninitiated, 2- Initiated, 3 - Finished, 4 - Error]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/{{postmortem_id}}/",
            "description": "Updates the specified Team Postmortem object by setting the values of the parameters passed in the request body. Any parameters not provided will be left unchanged."
          },
          "response": [
            {
              "name": "Update Team Postmortem - 200 OK",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"author\": {{user_username}}, // example: \"85b563c8-18d0-4668-9462-9\",\n    \"incidents\": [\n        {\n            \"incident\": {{incident_unique_id}} // example: \"U2gGkyJnLQLkX2zQnvkpLW\"\n        }\n    ],\n    \"title\": {{team_postmortem_title}}, // example: \"New Infra Postmortem\"\n    \"status\": \"Pending\",\n    \"postmortem_data\": \"Details of the postmortem\",\n    \"download_status\": \"0\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/{{postmortem_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "f6778c71-eba2-49da-b226-ca27172d7303",
                "author": "85b563c8-18d0-4668-9462-9",
                "status": null,
                "incidents": [
                  {
                    "unique_id": "80673be0-aa18-4f70-ae92-dec403dfc32e",
                    "incident": "U2gGkyJnLQLkX2zQnvkpLW"
                  }
                ],
                "author_name": "Vishwa Krishnakumar",
                "title": "Modified Infra Postmortem",
                "postmortem_data": null,
                "download_status": 0
              }
            },
            {
              "name": "Update Team Postmortem - 400 Bad Request",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"author\": {{user_username}}, // example: \"85b563c8-18d0-4668-9462-9\",\n    \"incidents\": [\n        {\n            \"incident\": {{incident_unique_id}} // example: \"U2gGkyJnLQLkX2zQnvkpLW\"\n        }\n    ],\n    \"title\": {{team_postmortem_title}}, // example: \"New Infra Postmortem\"\n    \"status\": \"Pending\",\n    \"postmortem_data\": \"Details of the postmortem\",\n    \"download_status\": \"0\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/{{postmortem_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Update Team Postmortem - 403 Forbidden",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"author\": {{user_username}}, // example: \"85b563c8-18d0-4668-9462-9\",\n    \"incidents\": [\n        {\n            \"incident\": {{incident_unique_id}} // example: \"U2gGkyJnLQLkX2zQnvkpLW\"\n        }\n    ],\n    \"title\": {{team_postmortem_title}}, // example: \"New Infra Postmortem\"\n    \"status\": \"Pending\",\n    \"postmortem_data\": \"Details of the postmortem\",\n    \"download_status\": \"0\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/{{postmortem_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Update Team Postmortem - 404 Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"author\": {{user_username}}, // example: \"85b563c8-18d0-4668-9462-9\",\n    \"incidents\": [\n        {\n            \"incident\": {{incident_unique_id}} // example: \"U2gGkyJnLQLkX2zQnvkpLW\"\n        }\n    ],\n    \"title\": {{team_postmortem_title}}, // example: \"New Infra Postmortem\"\n    \"status\": \"Pending\",\n    \"postmortem_data\": \"Details of the postmortem\",\n    \"download_status\": \"0\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/{{postmortem_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete Team Postmortem",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/{{postmortem_id}}/",
            "description": "Delete the specified Postmortem object permanently."
          },
          "response": [
            {
              "name": "Delete Team Postmortem - 400 Bad Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/{{postmortem_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete Team Postmortem - 403 Forbidden",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/{{postmortem_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete Team Postmortem - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/postmortem/{{postmortem_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "This object represents the postmortem of the incident. You can checkout the postmortem docs here [https://docs.zenduty.com/docs/incidentpostmortem](https://docs.zenduty.com/docs/incidentpostmortem)"
    },
    {
      "name": "On Call",
      "item": [
        {
          "name": "List all Escalation Policy OnCall (v1)",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/oncall/",
            "description": "This request will show you the on call detais"
          },
          "response": [
            {
              "name": "List all Escalation Policy OnCall (v1) - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/oncall/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "escalation_policy": {
                    "name": "Default Escalation Policy",
                    "summary": "This is the default escalation policy for this team",
                    "description": "",
                    "unique_id": "19fdd4c3-0d4a-4a6e-9885-8c8d33ef1488",
                    "repeat_policy": 0,
                    "move_to_next": true,
                    "global_ep": false
                  },
                  "team": {
                    "unique_id": "61010821-08aa-4098-94f8-f88f1990b54a",
                    "name": "Modified Production Team"
                  },
                  "users": [
                    {
                      "username": "216bba3d-7268-4a8e-89e9-6",
                      "first_name": "Anshul",
                      "email": "anshulrajput229@gmail.com",
                      "last_name": "Rajput"
                    }
                  ]
                },
                {
                  "escalation_policy": {
                    "name": "Infra Escalation Policy",
                    "summary": "",
                    "description": "",
                    "unique_id": "9ea1f98d-b5a3-4d72-8057-2f5f3d743a44",
                    "repeat_policy": 2,
                    "move_to_next": true,
                    "global_ep": false
                  },
                  "team": {
                    "unique_id": "61010821-08aa-4098-94f8-f88f1990b54a",
                    "name": "Modified Production Team"
                  },
                  "users": [
                    {
                      "username": "216bba3d-7268-4a8e-89e9-6",
                      "first_name": "Anshul",
                      "email": "anshulrajput229@gmail.com",
                      "last_name": "Rajput"
                    },
                    {
                      "username": "507dfda0-a1fd-40e5-943a-e",
                      "first_name": "Mary",
                      "email": "maryjane@sharklasers.com",
                      "last_name": "Jane"
                    },
                    {
                      "username": "85b563c8-18d0-4668-9462-9",
                      "first_name": "Vishwa",
                      "email": "vishwa@yellowant.com",
                      "last_name": "Krishnakumar"
                    }
                  ]
                }
              ]
            },
            {
              "name": "List all Escalation Policy OnCall (v1) - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/oncall/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List all Escalation Policy OnCall (v1) - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/oncall/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List all Escalation Policy OnCall (v1) - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/oncall/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List all Escalation Policy OnCall (v2)",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/v2/account/teams/{{team_id}}/oncall/"
          },
          "response": [
            {
              "name": "List all Escalation Policy OnCall (v2) - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/teams/{{team_id}}/oncall/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "unique_id": "0c9120eb-12a7-4daa-a23b-64e208dcb6a3",
                  "name": "Default Escalation Policy",
                  "oncalls": [
                    {
                      "ep_rule": "5bf14fc1-67a5-4f51-bc7b-33be2f4454c4",
                      "position": 1,
                      "delay": 0,
                      "oncalls": [
                        {
                          "username": "d24b310c-b9b2-4cc7-aa4b-4",
                          "first_name": "Nitin",
                          "last_name": "Chavan",
                          "email": "initinbc@gmail.com"
                        }
                      ]
                    },
                    {
                      "ep_rule": "f433c672-fa4b-40c8-92cc-2641c0705f54",
                      "position": 2,
                      "delay": 2,
                      "oncalls": [
                        {
                          "username": "b115be42-9c4f-4277-a885-9",
                          "first_name": "Deepak .D",
                          "last_name": "Kumar",
                          "email": "deepakdx7@gmail.com"
                        },
                        {
                          "username": "fc02c22a-da4b-4807-bbf7-5",
                          "first_name": "Ankur",
                          "last_name": "Rawal",
                          "email": "ankurrawalnitk@gmail.com"
                        }
                      ]
                    },
                    {
                      "ep_rule": "a24ffd7e-adb9-4c2e-ac6a-6320988f8c98",
                      "position": 3,
                      "delay": 4,
                      "oncalls": [
                        {
                          "username": "fc02c22a-da4b-4807-bbf7-5",
                          "first_name": "Ankur",
                          "last_name": "Rawal",
                          "email": "ankurrawalnitk@gmail.com"
                        }
                      ]
                    }
                  ]
                },
                {
                  "unique_id": "77fefd9e-e96c-4992-a63b-8995f2740cf1",
                  "name": "TEST DELAY",
                  "oncalls": [
                    {
                      "ep_rule": "cee87bfb-85d4-420e-b7aa-25b9e25b53c7",
                      "position": 1,
                      "delay": 0,
                      "oncalls": [
                        {
                          "username": "259d67f8-c975-4403-b9b8-8",
                          "first_name": "Michael",
                          "last_name": "Scott",
                          "email": "dheerukreddy@gmail.com"
                        },
                        {
                          "username": "18e76e66-7c24-4daa-9c58-e",
                          "first_name": "nithin",
                          "last_name": " ",
                          "email": "nithin@zenduty.com"
                        },
                        {
                          "username": "b115be42-9c4f-4277-a885-9",
                          "first_name": "Deepak .D",
                          "last_name": "Kumar",
                          "email": "deepakdx7@gmail.com"
                        }
                      ]
                    },
                    {
                      "ep_rule": "03dc65e5-268a-41df-aae4-6313cad3d8a6",
                      "position": 2,
                      "delay": 2,
                      "oncalls": [
                        {
                          "username": "fc02c22a-da4b-4807-bbf7-5",
                          "first_name": "Ankur",
                          "last_name": "Rawal",
                          "email": "ankurrawalnitk@gmail.com"
                        }
                      ]
                    },
                    {
                      "ep_rule": "43ade01e-6443-4ab7-91c9-5d9061b509da",
                      "position": 3,
                      "delay": 5,
                      "oncalls": [
                        {
                          "username": "b115be42-9c4f-4277-a885-9",
                          "first_name": "Deepak .D",
                          "last_name": "Kumar",
                          "email": "deepakdx7@gmail.com"
                        },
                        {
                          "username": "fc02c22a-da4b-4807-bbf7-5",
                          "first_name": "Ankur",
                          "last_name": "Rawal",
                          "email": "ankurrawalnitk@gmail.com"
                        }
                      ]
                    }
                  ]
                },
                {
                  "unique_id": "7c8e75dd-ad6a-46a8-98e4-70bd4416462a",
                  "name": "Test schedule deletion",
                  "oncalls": [
                    {
                      "ep_rule": "54c082b4-9a38-43d6-889f-2d2f70725af5",
                      "position": 1,
                      "delay": 0,
                      "oncalls": []
                    },
                    {
                      "ep_rule": "fb0fa91c-cc3d-4090-9c68-e1801b6318c7",
                      "position": 2,
                      "delay": 1,
                      "oncalls": [
                        {
                          "username": "b115be42-9c4f-4277-a885-9",
                          "first_name": "Deepak .D",
                          "last_name": "Kumar",
                          "email": "deepakdx7@gmail.com"
                        },
                        {
                          "username": "fc02c22a-da4b-4807-bbf7-5",
                          "first_name": "Ankur",
                          "last_name": "Rawal",
                          "email": "ankurrawalnitk@gmail.com"
                        }
                      ]
                    }
                  ]
                },
                {
                  "unique_id": "83ea11e4-52cb-46f6-9f55-b0037c792078",
                  "name": "test preserve resolve incident",
                  "oncalls": [
                    {
                      "ep_rule": "e33daa6b-2814-4e5b-ac1d-0feef28c4aad",
                      "position": 1,
                      "delay": 0,
                      "oncalls": [
                        {
                          "username": "08a4805c-8f07-4221-85c2-1",
                          "first_name": "Test",
                          "last_name": "Rajput",
                          "email": "anshulrajput229@gmail.com"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "List all Escalation Policy OnCall (v2) - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/teams/{{team_id}}/oncall/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List all Escalation Policy OnCall (v2) - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/teams/{{team_id}}/oncall/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List all Escalation Policy OnCall (v2) - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/teams/{{team_id}}/oncall/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List all OnCall Users of an Escalation Policy.",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/v2/account/teams/{{team_id}}/escalation_policies/{{ep_id}}/oncall/"
          },
          "response": [
            {
              "name": "List all OnCall Users of an Escalation Policy - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/teams/{{team_id}}/escalation_policies/{{ep_id}}/oncall/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "unique_id": "77fefd9e-e96c-4992-a63b-8995f2740cf1",
                  "name": "TEST DELAY",
                  "oncalls": [
                    {
                      "ep_rule": "cee87bfb-85d4-420e-b7aa-25b9e25b53c7",
                      "position": 1,
                      "delay": 0,
                      "oncalls": [
                        {
                          "username": "259d67f8-c975-4403-b9b8-8",
                          "first_name": "Michael",
                          "last_name": "Scott",
                          "email": "dheerukreddy@gmail.com"
                        },
                        {
                          "username": "18e76e66-7c24-4daa-9c58-e",
                          "first_name": "nithin",
                          "last_name": " ",
                          "email": "nithin@zenduty.com"
                        },
                        {
                          "username": "b115be42-9c4f-4277-a885-9",
                          "first_name": "Deepak .D",
                          "last_name": "Kumar",
                          "email": "deepakdx7@gmail.com"
                        }
                      ]
                    },
                    {
                      "ep_rule": "03dc65e5-268a-41df-aae4-6313cad3d8a6",
                      "position": 2,
                      "delay": 2,
                      "oncalls": [
                        {
                          "username": "fc02c22a-da4b-4807-bbf7-5",
                          "first_name": "Ankur",
                          "last_name": "Rawal",
                          "email": "ankurrawalnitk@gmail.com"
                        }
                      ]
                    },
                    {
                      "ep_rule": "43ade01e-6443-4ab7-91c9-5d9061b509da",
                      "position": 3,
                      "delay": 5,
                      "oncalls": [
                        {
                          "username": "b115be42-9c4f-4277-a885-9",
                          "first_name": "Deepak .D",
                          "last_name": "Kumar",
                          "email": "deepakdx7@gmail.com"
                        },
                        {
                          "username": "fc02c22a-da4b-4807-bbf7-5",
                          "first_name": "Ankur",
                          "last_name": "Rawal",
                          "email": "ankurrawalnitk@gmail.com"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "List all OnCall Users of an Escalation Policy - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/teams/{{team_id}}/escalation_policies/{{ep_id}}/oncall/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List all OnCall Users of an Escalation Policy - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/teams/{{team_id}}/escalation_policies/{{ep_id}}/oncall/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List all OnCall Users of an Escalation Policy - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/teams/{{team_id}}/escalation_policies/{{ep_id}}/oncall/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List all OnCall Users of a Service Escalation Policy.",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/v2/account/teams/{{team_id}}/services/{{service_id}}/oncall/"
          },
          "response": [
            {
              "name": "List all OnCall Users of a Service Escalation Policy - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/teams/{{team_id}}/services/{{service_id}}/oncall/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "unique_id": "0c9120eb-12a7-4daa-a23b-64e208dcb6a3",
                  "name": "Default Escalation Policy",
                  "oncalls": [
                    {
                      "ep_rule": "5bf14fc1-67a5-4f51-bc7b-33be2f4454c4",
                      "position": 1,
                      "delay": 0,
                      "oncalls": [
                        {
                          "username": "d24b310c-b9b2-4cc7-aa4b-4",
                          "first_name": "Nitin",
                          "last_name": "Chavan",
                          "email": "initinbc@gmail.com"
                        }
                      ]
                    },
                    {
                      "ep_rule": "f433c672-fa4b-40c8-92cc-2641c0705f54",
                      "position": 2,
                      "delay": 2,
                      "oncalls": [
                        {
                          "username": "b115be42-9c4f-4277-a885-9",
                          "first_name": "Deepak .D",
                          "last_name": "Kumar",
                          "email": "deepakdx7@gmail.com"
                        },
                        {
                          "username": "fc02c22a-da4b-4807-bbf7-5",
                          "first_name": "Ankur",
                          "last_name": "Rawal",
                          "email": "ankurrawalnitk@gmail.com"
                        }
                      ]
                    },
                    {
                      "ep_rule": "a24ffd7e-adb9-4c2e-ac6a-6320988f8c98",
                      "position": 3,
                      "delay": 4,
                      "oncalls": [
                        {
                          "username": "fc02c22a-da4b-4807-bbf7-5",
                          "first_name": "Ankur",
                          "last_name": "Rawal",
                          "email": "ankurrawalnitk@gmail.com"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "List all OnCall Users of a Service Escalation Policy - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/teams/{{team_id}}/services/{{service_id}}/oncall/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List all OnCall Users of a Service Escalation Policy - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/teams/{{team_id}}/services/{{service_id}}/oncall/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List all OnCall Users of a Service Escalation Policy - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/teams/{{team_id}}/services/{{service_id}}/oncall/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "This object represents the user who is oncall."
    },
    {
      "name": "Global Router",
      "item": [
        {
          "name": "Create the Global Router object",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{global_router_name}}\", // example: \"Infra Global Router\",\n    \"description\": \"{{global_router_description}}\" // example: \"This is Infra Global Router for this account\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v2/account/events/router/",
            "description": "Create the Global Router object by setting the values of all the required parameters passed in the request body."
          },
          "response": [
            {
              "name": "Create the Global Router object - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": {{global_router_name}}, // example: \"Infra Global Router\",\n  \"description\": {{global_router_description}} // example: \"This is Infra Global Router for this account\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v2/account/events/router/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "b0c1867f-dfd2-4cb3-a298-0b9f322fe716",
                "name": "Infra Global Router",
                "description": "This is Infra Global Router for this account",
                "account": "61fb2d9e-088b-471f-a6d7-872c03cf483d",
                "is_enabled": true,
                "integration_key": "cb1de2f2-bb17-4a6c-8a80-03739ca0a911"
              }
            },
            {
              "name": "Create the Global Router object - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": {{global_router_name}}, // example: \"Infra Global Router\",\n  \"description\": {{global_router_description}} // example: \"This is Infra Global Router for this account\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v2/account/events/router/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create the Global Router object - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": {{global_router_name}}, // example: \"Infra Global Router\",\n  \"description\": {{global_router_description}} // example: \"This is Infra Global Router for this account\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v2/account/events/router/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create the Global Router object - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": {{global_router_name}}, // example: \"Infra Global Router\",\n  \"description\": {{global_router_description}} // example: \"This is Infra Global Router for this account\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v2/account/events/router/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List all Global Router objects",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/v2/account/events/router/",
            "description": "Returns a list of Global Router objects."
          },
          "response": [
            {
              "name": "List all Global Router objects - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/events/router/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "unique_id": "e9be034e-6076-4953-a315-9a3666ffe774",
                  "name": "Default",
                  "description": "testing",
                  "account": "61fb2d9e-088b-471f-a6d7-872c03cf483d",
                  "is_enabled": true,
                  "integration_key": "e29c214c-3397-4b92-b4f4-dd63135ad214"
                },
                {
                  "unique_id": "0dfb3150-456c-4f34-884f-23d449ae7561",
                  "name": "Default-2",
                  "description": "testing",
                  "account": "61fb2d9e-088b-471f-a6d7-872c03cf483d",
                  "is_enabled": true,
                  "integration_key": "5d3b2210-6849-42a4-b268-c8f44a5e50f5"
                },
                {
                  "unique_id": "b0c1867f-dfd2-4cb3-a298-0b9f322fe716",
                  "name": "Infra Global Router",
                  "description": "This is Infra Global Router for this account",
                  "account": "61fb2d9e-088b-471f-a6d7-872c03cf483d",
                  "is_enabled": true,
                  "integration_key": "cb1de2f2-bb17-4a6c-8a80-03739ca0a911"
                }
              ]
            },
            {
              "name": "List all Global Router objects - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/events/router/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List all Global Router objects - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/events/router/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List all Global Router objects - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/events/router/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve the Global Router object",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/v2/account/events/router/{{router_id}}/",
            "description": "Retrieve the specified Global Router object."
          },
          "response": [
            {
              "name": "Retrieve the Global Router object - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "b0c1867f-dfd2-4cb3-a298-0b9f322fe716",
                "name": "Infra Global Router",
                "description": "This is Infra Global Router for this account",
                "account": "61fb2d9e-088b-471f-a6d7-872c03cf483d",
                "is_enabled": true,
                "integration_key": "cb1de2f2-bb17-4a6c-8a80-03739ca0a911"
              }
            },
            {
              "name": "Retrieve the Global Router object - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve the Global Router object - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve the Global Router object - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Update the Global Router data",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{global_router_name}}\", // example: \"Infra Global Router\",\n    \"description\": \"{{global_router_description}}\" // example: \"This is Infra Global Router for this account\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v2/account/events/router/{{router_id}}/",
            "description": "Updates the specified Global Router object by setting the values of the parameters passed in the request body. Any parameters not provided will be left unchanged."
          },
          "response": [
            {
              "name": "Update the Global Router data - 200 OK",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": {{global_router_name}}, // example: \"Infra Global Router Updated\",\n    \"description\": {{global_router_description}} // example: \"This is Infra Global Router Updated for this account\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "b0c1867f-dfd2-4cb3-a298-0b9f322fe716",
                "name": "Infra Global Router Updated",
                "description": "This is Infra Global Router Updated for this account",
                "account": "61fb2d9e-088b-471f-a6d7-872c03cf483d",
                "is_enabled": true,
                "integration_key": "cb1de2f2-bb17-4a6c-8a80-03739ca0a911"
              }
            },
            {
              "name": "Update the Global Router data - 400 Bad Request",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": {{global_router_name}}, // example: \"Infra Global Router Updated\",\n    \"description\": {{global_router_description}} // example: \"This is Infra Global Router Updated for this account\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Update the Global Router data - 403 Forbidden",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": {{global_router_name}}, // example: \"Infra Global Router Updated\",\n    \"description\": {{global_router_description}} // example: \"This is Infra Global Router Updated for this account\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Update the Global Router data - 404 Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": {{global_router_name}}, // example: \"Infra Global Router Updated\",\n    \"description\": {{global_router_description}} // example: \"This is Infra Global Router Updated for this account\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete the Global Router data",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{host}}/api/v2/account/events/router/{{router_id}}/",
            "description": "Delete the specified Global Router object permanently."
          },
          "response": [
            {
              "name": "Delete the Global Router data - 400 Bad Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete the Global Router data - 403 Forbidden",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete the Global Router data - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "This object represents the Global Router of the Account. You can checkout the global alert routing docs here [https://docs.zenduty.com/docs/globalalertrouting](https://docs.zenduty.com/docs/globalalertrouting)"
    },
    {
      "name": "Global Router Rules",
      "item": [
        {
          "name": "Create the Global Router Rule object",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Rule for Grafana Integration\",\n    \"actions\": [\n        {\n            \"action_type\": 0, //0 - Route to Integration, 1 - Suppress\n            \"integration\": \"{{integration_key}}\" //example: 0c4e939d-6d54-401e-ad83-6114368bdd0b\n        }\n    ],\n    \"rule_json\": \"{\\\"type\\\":\\\"group\\\",\\\"id\\\":\\\"9a99988a-0123-4456-b89a-b1607f326fd8\\\",\\\"children1\\\":{\\\"898aa9ba-0123-4456-b89a-b16a429f5d94\\\":{\\\"type\\\":\\\"rule\\\",\\\"id\\\":\\\"898aa9ba-0123-4456-b89a-b16a429f5d94\\\",\\\"properties\\\":{\\\"field\\\":\\\"alert.payload\\\",\\\"operator\\\":\\\"payloadsearch\\\",\\\"value\\\":[\\\"$.commonLabels.alertname\\\",\\\"grafana\\\"],\\\"valueSrc\\\":[\\\"value\\\",\\\"value\\\"],\\\"operatorOptions\\\":{\\\"ploperator\\\":\\\"equal\\\"},\\\"valueType\\\":[\\\"text\\\",\\\"text\\\"]},\\\"path\\\":[\\\"9a99988a-0123-4456-b89a-b1607f326fd8\\\",\\\"898aa9ba-0123-4456-b89a-b16a429f5d94\\\"]}},\\\"properties\\\":{\\\"conjunction\\\":\\\"AND\\\",\\\"not\\\":false},\\\"path\\\":[\\\"9a99988a-0123-4456-b89a-b1607f326fd8\\\"]}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/",
            "description": "Create the Global Router Rule object by setting the values of all the required parameters passed in the request body."
          },
          "response": [
            {
              "name": "Create the Global Router Rule object - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Rule for Grafana Integration",
                    "actions": [
                      {
                        "action_type": 0,
                        "integration": "0c4e939d-6d54-401e-ad83-6114368bdd0b"
                      }
                    ],
                    "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.payload\",\"operator\":\"payloadsearch\",\"value\":[\"$.commonLabels.alertname\",\"grafana\"],\"valueSrc\":[\"value\",\"value\"],\"operatorOptions\":{\"ploperator\":\"equal\"},\"valueType\":[\"text\",\"text\"]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "4c9924cc-d051-4e58-978b-d673a7de540a",
                "name": "Rule for Grafana Integration",
                "position": 7,
                "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.payload\",\"operator\":\"payloadsearch\",\"value\":[\"$.commonLabels.alertname\",\"grafana\"],\"valueSrc\":[\"value\",\"value\"],\"operatorOptions\":{\"ploperator\":\"equal\"},\"valueType\":[\"text\",\"text\"]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}",
                "actions": [
                  {
                    "unique_id": "fb742645-dc2f-4b76-bf44-8a0a8aa48e09",
                    "action_type": 0,
                    "service": {
                      "name": "Team 1 Service 1",
                      "unique_id": "32a7c77f-aa0a-49de-ab52-e52f0aa77888"
                    },
                    "team": {
                      "name": "Team 1",
                      "unique_id": "91fd3cc0-ebd6-43b8-aab3-67a05762ba0c"
                    },
                    "integration_obj": {
                      "unique_id": "0c4e939d-6d54-401e-ad83-6114368bdd0b",
                      "name": "Anodot"
                    }
                  }
                ],
                "router": "e9be034e-6076-4953-a315-9a3666ffe774"
              }
            },
            {
              "name": "Create the Global Router Rule object - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Rule for Grafana Integration",
                    "actions": [
                      {
                        "action_type": 0,
                        "integration": "0c4e939d-6d54-401e-ad83-6114368bdd0b"
                      }
                    ],
                    "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.payload\",\"operator\":\"payloadsearch\",\"value\":[\"$.commonLabels.alertname\",\"grafana\"],\"valueSrc\":[\"value\",\"value\"],\"operatorOptions\":{\"ploperator\":\"equal\"},\"valueType\":[\"text\",\"text\"]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create the Global Router Rule object - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Rule for Grafana Integration",
                    "actions": [
                      {
                        "action_type": 0,
                        "integration": "0c4e939d-6d54-401e-ad83-6114368bdd0b"
                      }
                    ],
                    "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.payload\",\"operator\":\"payloadsearch\",\"value\":[\"$.commonLabels.alertname\",\"grafana\"],\"valueSrc\":[\"value\",\"value\"],\"operatorOptions\":{\"ploperator\":\"equal\"},\"valueType\":[\"text\",\"text\"]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create the Global Router Rule object - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "name": "Rule for Grafana Integration",
                    "actions": [
                      {
                        "action_type": 0,
                        "integration": "0c4e939d-6d54-401e-ad83-6114368bdd0b"
                      }
                    ],
                    "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.payload\",\"operator\":\"payloadsearch\",\"value\":[\"$.commonLabels.alertname\",\"grafana\"],\"valueSrc\":[\"value\",\"value\"],\"operatorOptions\":{\"ploperator\":\"equal\"},\"valueType\":[\"text\",\"text\"]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List all Global Router Rule objects",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/",
            "description": "Returns a list of Global Router Rule objects."
          },
          "response": [
            {
              "name": "List all Global Router Rule objects - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "unique_id": "12edd6c5-2217-4b53-b635-83083f420dd8",
                  "name": "position 1",
                  "position": 1,
                  "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"8bbbbaba-cdef-4012-b456-7184d20607aa\":{\"type\":\"rule\",\"id\":\"8bbbbaba-cdef-4012-b456-7184d20607aa\",\"properties\":{\"field\":\"alert.payload\",\"operator\":\"payloadsearch\",\"value\":[\"$.payload.summary\",\"testing\"],\"valueSrc\":[\"value\",\"value\"],\"operatorOptions\":{\"ploperator\":\"equal\"},\"valueType\":[\"text\",\"text\"]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"8bbbbaba-cdef-4012-b456-7184d20607aa\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}",
                  "actions": [
                    {
                      "unique_id": "6d90b452-6b5f-4ea1-8b58-9ad091aba040",
                      "action_type": 0,
                      "service": {
                        "name": "Team 1 Service 1",
                        "unique_id": "32a7c77f-aa0a-49de-ab52-e52f0aa77888"
                      },
                      "team": {
                        "name": "Team 1",
                        "unique_id": "91fd3cc0-ebd6-43b8-aab3-67a05762ba0c"
                      },
                      "integration_obj": {
                        "unique_id": "0c4e939d-6d54-401e-ad83-6114368bdd0b",
                        "name": "Anodot"
                      }
                    },
                    {
                      "unique_id": "be64664d-ab1d-419a-ab50-d48b05cbc1e6",
                      "action_type": 0,
                      "service": {
                        "name": "Team 1 Service 1",
                        "unique_id": "32a7c77f-aa0a-49de-ab52-e52f0aa77888"
                      },
                      "team": {
                        "name": "Team 1",
                        "unique_id": "91fd3cc0-ebd6-43b8-aab3-67a05762ba0c"
                      },
                      "integration_obj": {
                        "unique_id": "0c4e939d-6d54-401e-ad83-6114368bdd0b",
                        "name": "Anodot"
                      }
                    }
                  ],
                  "router": "e9be034e-6076-4953-a315-9a3666ffe774"
                },
                {
                  "unique_id": "4c9924cc-d051-4e58-978b-d673a7de540a",
                  "name": "Rule for Grafana Integration",
                  "position": 2,
                  "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.payload\",\"operator\":\"payloadsearch\",\"value\":[\"$.commonLabels.alertname\",\"grafana\"],\"valueSrc\":[\"value\",\"value\"],\"operatorOptions\":{\"ploperator\":\"equal\"},\"valueType\":[\"text\",\"text\"]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}",
                  "actions": [
                    {
                      "unique_id": "fb742645-dc2f-4b76-bf44-8a0a8aa48e09",
                      "action_type": 0,
                      "service": {
                        "name": "Team 1 Service 1",
                        "unique_id": "32a7c77f-aa0a-49de-ab52-e52f0aa77888"
                      },
                      "team": {
                        "name": "Team 1",
                        "unique_id": "91fd3cc0-ebd6-43b8-aab3-67a05762ba0c"
                      },
                      "integration_obj": {
                        "unique_id": "0c4e939d-6d54-401e-ad83-6114368bdd0b",
                        "name": "Anodot"
                      }
                    }
                  ],
                  "router": "e9be034e-6076-4953-a315-9a3666ffe774"
                }
              ]
            },
            {
              "name": "List all Global Router Rule objects - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List all Global Router Rule objects - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List all Global Router Rule objects - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Update the Global Router Rule object",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"rule\": \"{{global_router_rule_unique_id}}\", // example: \"12edd6c5-2217-4b53-b635-83083f420dd8\",\n    \"position\": \"{{global_router_rule_position}}\" // example: 1\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/",
            "description": "Updates the position of the Global Router Rule object by setting the position and rule unique id passed in the request body"
          },
          "response": [
            {
              "name": "Update the Global Router Rule object - 200 OK",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"rule\": {{global_router_rule_unique_id}}, // example: \"12edd6c5-2217-4b53-b635-83083f420dd8\",\n    \"position\": {{global_router_rule_position}} // example: 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "unique_id": "12edd6c5-2217-4b53-b635-83083f420dd8",
                  "name": "position 1",
                  "position": 1,
                  "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"8bbbbaba-cdef-4012-b456-7184d20607aa\":{\"type\":\"rule\",\"id\":\"8bbbbaba-cdef-4012-b456-7184d20607aa\",\"properties\":{\"field\":\"alert.payload\",\"operator\":\"payloadsearch\",\"value\":[\"$.payload.summary\",\"testing\"],\"valueSrc\":[\"value\",\"value\"],\"operatorOptions\":{\"ploperator\":\"equal\"},\"valueType\":[\"text\",\"text\"]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"8bbbbaba-cdef-4012-b456-7184d20607aa\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}",
                  "actions": [
                    {
                      "unique_id": "6d90b452-6b5f-4ea1-8b58-9ad091aba040",
                      "action_type": 0,
                      "service": {
                        "name": "Team 1 Service 1",
                        "unique_id": "32a7c77f-aa0a-49de-ab52-e52f0aa77888"
                      },
                      "team": {
                        "name": "Team 1",
                        "unique_id": "91fd3cc0-ebd6-43b8-aab3-67a05762ba0c"
                      },
                      "integration_obj": {
                        "unique_id": "0c4e939d-6d54-401e-ad83-6114368bdd0b",
                        "name": "Anodot"
                      }
                    },
                    {
                      "unique_id": "be64664d-ab1d-419a-ab50-d48b05cbc1e6",
                      "action_type": 0,
                      "service": {
                        "name": "Team 1 Service 1",
                        "unique_id": "32a7c77f-aa0a-49de-ab52-e52f0aa77888"
                      },
                      "team": {
                        "name": "Team 1",
                        "unique_id": "91fd3cc0-ebd6-43b8-aab3-67a05762ba0c"
                      },
                      "integration_obj": {
                        "unique_id": "0c4e939d-6d54-401e-ad83-6114368bdd0b",
                        "name": "Anodot"
                      }
                    }
                  ],
                  "router": "e9be034e-6076-4953-a315-9a3666ffe774"
                },
                {
                  "unique_id": "c757e713-e2c4-40f1-813a-6c82b487d9b2",
                  "name": "position 2",
                  "position": 2,
                  "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"8bbbbaba-cdef-4012-b456-7184d20607aa\":{\"type\":\"rule\",\"id\":\"8bbbbaba-cdef-4012-b456-7184d20607aa\",\"properties\":{\"field\":\"alert.payload\",\"operator\":\"payloadsearch\",\"value\":[\"$.payload.summary\",\"testing\"],\"valueSrc\":[\"value\",\"value\"],\"operatorOptions\":{\"ploperator\":\"equal\"},\"valueType\":[\"text\",\"text\"]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"8bbbbaba-cdef-4012-b456-7184d20607aa\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}",
                  "actions": [
                    {
                      "unique_id": "69efe5d0-450e-4842-98ce-2bd4235ed4f7",
                      "action_type": 0,
                      "service": {
                        "name": "Team 1 Service 1",
                        "unique_id": "32a7c77f-aa0a-49de-ab52-e52f0aa77888"
                      },
                      "team": {
                        "name": "Team 1",
                        "unique_id": "91fd3cc0-ebd6-43b8-aab3-67a05762ba0c"
                      },
                      "integration_obj": {
                        "unique_id": "0c4e939d-6d54-401e-ad83-6114368bdd0b",
                        "name": "Anodot"
                      }
                    },
                    {
                      "unique_id": "ca20dc3c-bbd8-467d-8aba-ad50547858c2",
                      "action_type": 0,
                      "service": {
                        "name": "Team 1 Service 1",
                        "unique_id": "32a7c77f-aa0a-49de-ab52-e52f0aa77888"
                      },
                      "team": {
                        "name": "Team 1",
                        "unique_id": "91fd3cc0-ebd6-43b8-aab3-67a05762ba0c"
                      },
                      "integration_obj": {
                        "unique_id": "0c4e939d-6d54-401e-ad83-6114368bdd0b",
                        "name": "Anodot"
                      }
                    }
                  ],
                  "router": "e9be034e-6076-4953-a315-9a3666ffe774"
                }
              ]
            },
            {
              "name": "Update the Global Router Rule object - 400 Bad Request",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"rule\": {{global_router_rule_unique_id}}, // example: \"12edd6c5-2217-4b53-b635-83083f420dd8\",\n    \"position\": {{global_router_rule_position}} // example: 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Update the Global Router Rule object - 403 Forbidden",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"rule\": {{global_router_rule_unique_id}}, // example: \"12edd6c5-2217-4b53-b635-83083f420dd8\",\n    \"position\": {{global_router_rule_position}} // example: 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Update the Global Router Rule object - 404 Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"rule\": {{global_router_rule_unique_id}}, // example: \"12edd6c5-2217-4b53-b635-83083f420dd8\",\n    \"position\": {{global_router_rule_position}} // example: 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve the Global Router Rule object",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/{{ruleset_unique_id}}/",
            "description": "Retrieve the specified Global Router Rule object."
          },
          "response": [
            {
              "name": "Retrieve the Global Router Rule object - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/{{ruleset_unique_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "4c9924cc-d051-4e58-978b-d673a7de540a",
                "name": "Rule for Grafana Integration",
                "position": 2,
                "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.payload\",\"operator\":\"payloadsearch\",\"value\":[\"$.commonLabels.alertname\",\"grafana\"],\"valueSrc\":[\"value\",\"value\"],\"operatorOptions\":{\"ploperator\":\"equal\"},\"valueType\":[\"text\",\"text\"]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}",
                "actions": [
                  {
                    "unique_id": "fb742645-dc2f-4b76-bf44-8a0a8aa48e09",
                    "action_type": 0,
                    "service": {
                      "name": "Team 1 Service 1",
                      "unique_id": "32a7c77f-aa0a-49de-ab52-e52f0aa77888"
                    },
                    "team": {
                      "name": "Team 1",
                      "unique_id": "91fd3cc0-ebd6-43b8-aab3-67a05762ba0c"
                    },
                    "integration_obj": {
                      "unique_id": "0c4e939d-6d54-401e-ad83-6114368bdd0b",
                      "name": "Anodot"
                    }
                  }
                ],
                "router": "e9be034e-6076-4953-a315-9a3666ffe774"
              }
            },
            {
              "name": "Retrieve the Global Router Rule object - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/{{ruleset_unique_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve the Global Router Rule object - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/{{ruleset_unique_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve the Global Router Rule object - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/{{ruleset_unique_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Update the Global Router Rule data",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": {
                "unique_id": "4c9924cc-d051-4e58-978b-d673a7de540a",
                "name": "Rule for Grafana Integration",
                "position": 2,
                "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.payload\",\"operator\":\"payloadsearch\",\"value\":[\"$.commonLabels.alertname\",\"grafana\"],\"valueSrc\":[\"value\",\"value\"],\"operatorOptions\":{\"ploperator\":\"equal\"},\"valueType\":[\"text\",\"text\"]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}",
                "actions": [
                  {
                    "unique_id": "fb742645-dc2f-4b76-bf44-8a0a8aa48e09",
                    "action_type": 0,
                    "service": {
                      "name": "Team 1 Service 1",
                      "unique_id": "32a7c77f-aa0a-49de-ab52-e52f0aa77888"
                    },
                    "team": {
                      "name": "Team 1",
                      "unique_id": "91fd3cc0-ebd6-43b8-aab3-67a05762ba0c"
                    },
                    "integration_obj": {
                      "unique_id": "0c4e939d-6d54-401e-ad83-6114368bdd0b",
                      "name": "Anodot"
                    }
                  }
                ],
                "router": "e9be034e-6076-4953-a315-9a3666ffe774"
              },
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/{{ruleset_unique_id}}/",
            "description": "Updates the specified Global Router Rule object by setting the values of the parameters passed in the request body. Any parameters not provided will be left unchanged."
          },
          "response": [
            {
              "name": "Update the Global Router Rule data - 200 OK",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "unique_id": "4c9924cc-d051-4e58-978b-d673a7de540a",
                    "name": "Rule for Grafana Integration",
                    "position": 2,
                    "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.payload\",\"operator\":\"payloadsearch\",\"value\":[\"$.commonLabels.alertname\",\"grafana\"],\"valueSrc\":[\"value\",\"value\"],\"operatorOptions\":{\"ploperator\":\"equal\"},\"valueType\":[\"text\",\"text\"]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}",
                    "actions": [
                      {
                        "unique_id": "fb742645-dc2f-4b76-bf44-8a0a8aa48e09",
                        "action_type": 0,
                        "service": {
                          "name": "Team 1 Service 1",
                          "unique_id": "32a7c77f-aa0a-49de-ab52-e52f0aa77888"
                        },
                        "team": {
                          "name": "Team 1",
                          "unique_id": "91fd3cc0-ebd6-43b8-aab3-67a05762ba0c"
                        },
                        "integration_obj": {
                          "unique_id": "0c4e939d-6d54-401e-ad83-6114368bdd0b",
                          "name": "Anodot"
                        }
                      }
                    ],
                    "router": "e9be034e-6076-4953-a315-9a3666ffe774"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/{{ruleset_unique_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "unique_id": "4c9924cc-d051-4e58-978b-d673a7de540a",
                "name": "Rule for Grafana Integration Updated",
                "position": 2,
                "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.payload\",\"operator\":\"payloadsearch\",\"value\":[\"$.commonLabels.alertname\",\"grafana\"],\"valueSrc\":[\"value\",\"value\"],\"operatorOptions\":{\"ploperator\":\"equal\"},\"valueType\":[\"text\",\"text\"]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}",
                "actions": [
                  {
                    "unique_id": "d926e67a-60ae-4ed4-8ece-b93c31da6bc7",
                    "action_type": 0,
                    "service": {
                      "name": "Team 1 Service 1",
                      "unique_id": "32a7c77f-aa0a-49de-ab52-e52f0aa77888"
                    },
                    "team": {
                      "name": "Team 1",
                      "unique_id": "91fd3cc0-ebd6-43b8-aab3-67a05762ba0c"
                    },
                    "integration_obj": {
                      "unique_id": "0c4e939d-6d54-401e-ad83-6114368bdd0b",
                      "name": "Anodot"
                    }
                  }
                ],
                "router": "e9be034e-6076-4953-a315-9a3666ffe774"
              }
            },
            {
              "name": "Update the Global Router Rule data - 400 Bad Request",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "unique_id": "4c9924cc-d051-4e58-978b-d673a7de540a",
                    "name": "Rule for Grafana Integration",
                    "position": 2,
                    "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.payload\",\"operator\":\"payloadsearch\",\"value\":[\"$.commonLabels.alertname\",\"grafana\"],\"valueSrc\":[\"value\",\"value\"],\"operatorOptions\":{\"ploperator\":\"equal\"},\"valueType\":[\"text\",\"text\"]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}",
                    "actions": [
                      {
                        "unique_id": "fb742645-dc2f-4b76-bf44-8a0a8aa48e09",
                        "action_type": 0,
                        "service": {
                          "name": "Team 1 Service 1",
                          "unique_id": "32a7c77f-aa0a-49de-ab52-e52f0aa77888"
                        },
                        "team": {
                          "name": "Team 1",
                          "unique_id": "91fd3cc0-ebd6-43b8-aab3-67a05762ba0c"
                        },
                        "integration_obj": {
                          "unique_id": "0c4e939d-6d54-401e-ad83-6114368bdd0b",
                          "name": "Anodot"
                        }
                      }
                    ],
                    "router": "e9be034e-6076-4953-a315-9a3666ffe774"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/{{ruleset_unique_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Update the Global Router Rule data - 403 Forbidden",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "unique_id": "4c9924cc-d051-4e58-978b-d673a7de540a",
                    "name": "Rule for Grafana Integration",
                    "position": 2,
                    "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.payload\",\"operator\":\"payloadsearch\",\"value\":[\"$.commonLabels.alertname\",\"grafana\"],\"valueSrc\":[\"value\",\"value\"],\"operatorOptions\":{\"ploperator\":\"equal\"},\"valueType\":[\"text\",\"text\"]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}",
                    "actions": [
                      {
                        "unique_id": "fb742645-dc2f-4b76-bf44-8a0a8aa48e09",
                        "action_type": 0,
                        "service": {
                          "name": "Team 1 Service 1",
                          "unique_id": "32a7c77f-aa0a-49de-ab52-e52f0aa77888"
                        },
                        "team": {
                          "name": "Team 1",
                          "unique_id": "91fd3cc0-ebd6-43b8-aab3-67a05762ba0c"
                        },
                        "integration_obj": {
                          "unique_id": "0c4e939d-6d54-401e-ad83-6114368bdd0b",
                          "name": "Anodot"
                        }
                      }
                    ],
                    "router": "e9be034e-6076-4953-a315-9a3666ffe774"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/{{ruleset_unique_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Update the Global Router Rule data - 404 Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "unique_id": "4c9924cc-d051-4e58-978b-d673a7de540a",
                    "name": "Rule for Grafana Integration",
                    "position": 2,
                    "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.payload\",\"operator\":\"payloadsearch\",\"value\":[\"$.commonLabels.alertname\",\"grafana\"],\"valueSrc\":[\"value\",\"value\"],\"operatorOptions\":{\"ploperator\":\"equal\"},\"valueType\":[\"text\",\"text\"]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}",
                    "actions": [
                      {
                        "unique_id": "fb742645-dc2f-4b76-bf44-8a0a8aa48e09",
                        "action_type": 0,
                        "service": {
                          "name": "Team 1 Service 1",
                          "unique_id": "32a7c77f-aa0a-49de-ab52-e52f0aa77888"
                        },
                        "team": {
                          "name": "Team 1",
                          "unique_id": "91fd3cc0-ebd6-43b8-aab3-67a05762ba0c"
                        },
                        "integration_obj": {
                          "unique_id": "0c4e939d-6d54-401e-ad83-6114368bdd0b",
                          "name": "Anodot"
                        }
                      }
                    ],
                    "router": "e9be034e-6076-4953-a315-9a3666ffe774"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/{{ruleset_unique_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete the Global Router Rule data",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/{{ruleset_unique_id}}/",
            "description": "Delete the specified Global Router Rule object permanently."
          },
          "response": [
            {
              "name": "Delete the Global Router Rule data - 400 Bad Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/{{ruleset_unique_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete the Global Router Rule data - 403 Forbidden",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/{{ruleset_unique_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete the Global Router Rule data - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/v2/account/events/router/{{router_id}}/rulesets/{{ruleset_unique_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ],
      "description": "The Rules of the Global Router in an Account are represented by this object. Visit this link to view the documentation for the global alert routing rules [https://docs.zenduty.com/docs/globalalertrouting](https://docs.zenduty.com/docs/globalalertrouting)"
    },
    {
      "name": "Alert Rules",
      "item": [
        {
          "name": "Create the Alert Rule",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"position\": 1,\n    \"actions\": [\n        {\n            \"action_type\": 9, //An integer that represents the Alert Transformer Action. [1 - Change Alert Type, 2 - Add note, 3 - Suppress alert, 4 - Assign Escalation policy, 5 - Assign Schedule, 6 - Assign user, 7 - Change Urgency, 8 - Change Message, 9 - Change Summary, 10 - Change Entity ID, 11 - Assign User role, 12 - Add tag, 13 - Create Task, 14 - Assign SLA, 15 - Assign Team priority, 16 - Assign Task template, 17 - Add Responder, 18 - Change Entity ID Hash]\n            \"value\": \"{{summary}} https://www.zenduty.com/docs/alertrules/\", //A system-generated string that represents the User object username or Schedule object unique_id\n            \"escalation_policy\": null,\n            \"schedule\": null,\n            \"assign_to\": null,\n            \"task_template\": null\n        }\n    ],\n    \"description\": \"Add links to alert summary\",\n    \"rule_json\": \"{\\\"type\\\":\\\"group\\\",\\\"id\\\":\\\"9a99988a-0123-4456-b89a-b1607f326fd8\\\",\\\"children1\\\":{\\\"898aa9ba-0123-4456-b89a-b16a429f5d94\\\":{\\\"type\\\":\\\"rule\\\",\\\"id\\\":\\\"898aa9ba-0123-4456-b89a-b16a429f5d94\\\",\\\"properties\\\":{\\\"field\\\":\\\"alert.message\\\",\\\"operator\\\":\\\"is_not_empty\\\",\\\"value\\\":[],\\\"valueSrc\\\":[],\\\"operatorOptions\\\":null,\\\"valueType\\\":[]},\\\"path\\\":[\\\"9a99988a-0123-4456-b89a-b1607f326fd8\\\",\\\"898aa9ba-0123-4456-b89a-b16a429f5d94\\\"]}},\\\"properties\\\":{\\\"conjunction\\\":\\\"AND\\\",\\\"not\\\":false},\\\"path\\\":[\\\"9a99988a-0123-4456-b89a-b1607f326fd8\\\"]}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/"
          },
          "response": [
            {
              "name": "Create the Alert Rule - 201 Created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "actions": [
                      {
                        "unique_id": "992d6573-fb54-4a2b-8d5a-82619d477c3e",
                        "action_type": 9,
                        "key": "",
                        "value": "{{summary}} https://www.zenduty.com/docs/alertrules/",
                        "escalation_policy": null,
                        "schedule": null,
                        "assign_to": null,
                        "task_template": null
                      }
                    ],
                    "description": "Add links to alert summary",
                    "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.message\",\"operator\":\"is_not_empty\",\"value\":[],\"valueSrc\":[],\"operatorOptions\":null,\"valueType\":[]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "rule_type": 0,
                "unique_id": "8de24581-eade-4b50-a7f0-ac20594fde98",
                "description": "Add links to alert summary",
                "stop": false,
                "position": 1,
                "conditions": [],
                "actions": [
                  {
                    "unique_id": "13eddca2-38a2-4efd-a8a9-08adcb036416",
                    "action_type": 9,
                    "key": "",
                    "value": "{{summary}} https://www.zenduty.com/docs/alertrules/",
                    "value_reference_name": null,
                    "escalation_policy": null,
                    "escalation_policy_name": null,
                    "assign_to": null,
                    "assign_to_name": null,
                    "schedule": null,
                    "sla": null,
                    "team_priority": null,
                    "task_template": null
                  }
                ],
                "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.message\",\"operator\":\"is_not_empty\",\"value\":[],\"valueSrc\":[],\"operatorOptions\":null,\"valueType\":[]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}"
              }
            },
            {
              "name": "Create the Alert Rule - 400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "actions": [
                      {
                        "unique_id": "992d6573-fb54-4a2b-8d5a-82619d477c3e",
                        "action_type": 9,
                        "key": "",
                        "value": "{{summary}} https://www.zenduty.com/docs/alertrules/",
                        "escalation_policy": null,
                        "schedule": null,
                        "assign_to": null,
                        "task_template": null
                      }
                    ],
                    "description": "Add links to alert summary",
                    "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.message\",\"operator\":\"is_not_empty\",\"value\":[],\"valueSrc\":[],\"operatorOptions\":null,\"valueType\":[]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Create the Alert Rule - 403 Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "actions": [
                      {
                        "unique_id": "992d6573-fb54-4a2b-8d5a-82619d477c3e",
                        "action_type": 9,
                        "key": "",
                        "value": "{{summary}} https://www.zenduty.com/docs/alertrules/",
                        "escalation_policy": null,
                        "schedule": null,
                        "assign_to": null,
                        "task_template": null
                      }
                    ],
                    "description": "Add links to alert summary",
                    "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.message\",\"operator\":\"is_not_empty\",\"value\":[],\"valueSrc\":[],\"operatorOptions\":null,\"valueType\":[]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Create the Alert Rule - 404 Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "actions": [
                      {
                        "unique_id": "992d6573-fb54-4a2b-8d5a-82619d477c3e",
                        "action_type": 9,
                        "key": "",
                        "value": "{{summary}} https://www.zenduty.com/docs/alertrules/",
                        "escalation_policy": null,
                        "schedule": null,
                        "assign_to": null,
                        "task_template": null
                      }
                    ],
                    "description": "Add links to alert summary",
                    "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.message\",\"operator\":\"is_not_empty\",\"value\":[],\"valueSrc\":[],\"operatorOptions\":null,\"valueType\":[]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "List all Alert Rules",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/"
          },
          "response": [
            {
              "name": "List all Alert Rules - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": [
                {
                  "rule_type": 0,
                  "unique_id": "8de24581-eade-4b50-a7f0-ac20594fde98",
                  "description": "Add links to alert summary",
                  "stop": false,
                  "position": 1,
                  "conditions": [],
                  "actions": [
                    {
                      "unique_id": "13eddca2-38a2-4efd-a8a9-08adcb036416",
                      "action_type": 9,
                      "key": "",
                      "value": "{{summary}} https://www.zenduty.com/docs/alertrules/",
                      "value_reference_name": null,
                      "escalation_policy": null,
                      "escalation_policy_name": null,
                      "assign_to": null,
                      "assign_to_name": null,
                      "schedule": null,
                      "sla": null,
                      "team_priority": null,
                      "task_template": null
                    }
                  ],
                  "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.message\",\"operator\":\"is_not_empty\",\"value\":[],\"valueSrc\":[],\"operatorOptions\":null,\"valueType\":[]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}"
                },
                {
                  "rule_type": 0,
                  "unique_id": "ec73021b-1017-4909-a85f-ff9ad04f38db",
                  "description": "Create Incident for every alert",
                  "stop": false,
                  "position": 1,
                  "conditions": [],
                  "actions": [
                    {
                      "unique_id": "55754d02-b91a-4138-81fe-5b3b7b01a51e",
                      "action_type": 10,
                      "key": "",
                      "value": "",
                      "value_reference_name": null,
                      "escalation_policy": null,
                      "escalation_policy_name": null,
                      "assign_to": null,
                      "assign_to_name": null,
                      "schedule": null,
                      "sla": null,
                      "team_priority": null,
                      "task_template": null
                    }
                  ],
                  "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.message\",\"operator\":\"is_not_empty\",\"value\":[],\"valueSrc\":[],\"operatorOptions\":null,\"valueType\":[]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}"
                }
              ]
            },
            {
              "name": "List all Alert Rules - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "List all Alert Rules - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "List all Alert Rules - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Retrieve the Alert Rule",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/{{transformers_id}}/"
          },
          "response": [
            {
              "name": "Retrieve the Alert Rule - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/{{transformers_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "rule_type": 0,
                "unique_id": "8de24581-eade-4b50-a7f0-ac20594fde98",
                "description": "Add links to alert summary",
                "stop": false,
                "position": 1,
                "conditions": [],
                "actions": [
                  {
                    "unique_id": "13eddca2-38a2-4efd-a8a9-08adcb036416",
                    "action_type": 9,
                    "key": "",
                    "value": "{{summary}} https://www.zenduty.com/docs/alertrules/",
                    "value_reference_name": null,
                    "escalation_policy": null,
                    "escalation_policy_name": null,
                    "assign_to": null,
                    "assign_to_name": null,
                    "schedule": null,
                    "sla": null,
                    "team_priority": null,
                    "task_template": null
                  }
                ],
                "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.message\",\"operator\":\"is_not_empty\",\"value\":[],\"valueSrc\":[],\"operatorOptions\":null,\"valueType\":[]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}"
              }
            },
            {
              "name": "Retrieve the Alert Rule - 400 Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/{{transformers_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Retrieve the Alert Rule - 403 Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/{{transformers_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Retrieve the Alert Rule - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/{{transformers_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Update the Alert Rule",
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"position\": 1,\n    \"actions\": [\n        {\n            \"action_type\": 9, //An integer that represents the Alert Transformer Action. [1 - Change Alert Type, 2 - Add note, 3 - Suppress alert, 4 - Assign Escalation policy, 5 - Assign Schedule, 6 - Assign user, 7 - Change Urgency, 8 - Change Message, 9 - Change Summary, 10 - Change Entity ID, 11 - Assign User role, 12 - Add tag, 13 - Create Task, 14 - Assign SLA, 15 - Assign Team priority, 16 - Assign Task template, 17 - Add Responder, 18 - Change Entity ID Hash]\n            \"value\": \"{{summary}} https://www.zenduty.com/docs/alertrules/\", //A system-generated string that represents the User object username or Schedule object unique_id\n            \"escalation_policy\": null,\n            \"schedule\": null,\n            \"assign_to\": null,\n            \"task_template\": null\n        }\n    ],\n    \"description\": \"Add links to alert summary\",\n    \"rule_json\": \"{\\\"type\\\":\\\"group\\\",\\\"id\\\":\\\"9a99988a-0123-4456-b89a-b1607f326fd8\\\",\\\"children1\\\":{\\\"898aa9ba-0123-4456-b89a-b16a429f5d94\\\":{\\\"type\\\":\\\"rule\\\",\\\"id\\\":\\\"898aa9ba-0123-4456-b89a-b16a429f5d94\\\",\\\"properties\\\":{\\\"field\\\":\\\"alert.message\\\",\\\"operator\\\":\\\"is_not_empty\\\",\\\"value\\\":[],\\\"valueSrc\\\":[],\\\"operatorOptions\\\":null,\\\"valueType\\\":[]},\\\"path\\\":[\\\"9a99988a-0123-4456-b89a-b1607f326fd8\\\",\\\"898aa9ba-0123-4456-b89a-b16a429f5d94\\\"]}},\\\"properties\\\":{\\\"conjunction\\\":\\\"AND\\\",\\\"not\\\":false},\\\"path\\\":[\\\"9a99988a-0123-4456-b89a-b1607f326fd8\\\"]}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/{{transformers_id}}/"
          },
          "response": [
            {
              "name": "Update the Alert Rule - 200 OK",
              "originalRequest": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "rule_type": 0,
                    "unique_id": "8de24581-eade-4b50-a7f0-ac20594fde98",
                    "description": "Add links to alert summary updated",
                    "stop": false,
                    "position": 1,
                    "conditions": [],
                    "actions": [
                      {
                        "unique_id": "13eddca2-38a2-4efd-a8a9-08adcb036416",
                        "action_type": 9,
                        "key": "",
                        "value": "{{summary}} https://www.zenduty.com/docs/alertrules/",
                        "value_reference_name": null,
                        "escalation_policy": null,
                        "escalation_policy_name": null,
                        "assign_to": null,
                        "assign_to_name": null,
                        "schedule": null,
                        "sla": null,
                        "team_priority": null,
                        "task_template": null
                      }
                    ],
                    "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.message\",\"operator\":\"is_not_empty\",\"value\":[],\"valueSrc\":[],\"operatorOptions\":null,\"valueType\":[]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/{{transformers_id}}/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "rule_type": 0,
                "unique_id": "8de24581-eade-4b50-a7f0-ac20594fde98",
                "description": "Add links to alert summary updated",
                "stop": false,
                "position": 1,
                "conditions": [],
                "actions": [
                  {
                    "unique_id": "c6d6028b-74f3-4f51-b748-b14f207e380f",
                    "action_type": 9,
                    "key": "",
                    "value": "{{summary}} https://www.zenduty.com/docs/alertrules/",
                    "value_reference_name": null,
                    "escalation_policy": null,
                    "escalation_policy_name": null,
                    "assign_to": null,
                    "assign_to_name": null,
                    "schedule": null,
                    "sla": null,
                    "team_priority": null,
                    "task_template": null
                  }
                ],
                "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.message\",\"operator\":\"is_not_empty\",\"value\":[],\"valueSrc\":[],\"operatorOptions\":null,\"valueType\":[]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}"
              }
            },
            {
              "name": "Update the Alert Rule - 400 Bad Request",
              "originalRequest": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "rule_type": 0,
                    "unique_id": "8de24581-eade-4b50-a7f0-ac20594fde98",
                    "description": "Add links to alert summary updated",
                    "stop": false,
                    "position": 1,
                    "conditions": [],
                    "actions": [
                      {
                        "unique_id": "13eddca2-38a2-4efd-a8a9-08adcb036416",
                        "action_type": 9,
                        "key": "",
                        "value": "{{summary}} https://www.zenduty.com/docs/alertrules/",
                        "value_reference_name": null,
                        "escalation_policy": null,
                        "escalation_policy_name": null,
                        "assign_to": null,
                        "assign_to_name": null,
                        "schedule": null,
                        "sla": null,
                        "team_priority": null,
                        "task_template": null
                      }
                    ],
                    "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.message\",\"operator\":\"is_not_empty\",\"value\":[],\"valueSrc\":[],\"operatorOptions\":null,\"valueType\":[]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/{{transformers_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Update the Alert Rule - 403 Forbidden",
              "originalRequest": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "rule_type": 0,
                    "unique_id": "8de24581-eade-4b50-a7f0-ac20594fde98",
                    "description": "Add links to alert summary updated",
                    "stop": false,
                    "position": 1,
                    "conditions": [],
                    "actions": [
                      {
                        "unique_id": "13eddca2-38a2-4efd-a8a9-08adcb036416",
                        "action_type": 9,
                        "key": "",
                        "value": "{{summary}} https://www.zenduty.com/docs/alertrules/",
                        "value_reference_name": null,
                        "escalation_policy": null,
                        "escalation_policy_name": null,
                        "assign_to": null,
                        "assign_to_name": null,
                        "schedule": null,
                        "sla": null,
                        "team_priority": null,
                        "task_template": null
                      }
                    ],
                    "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.message\",\"operator\":\"is_not_empty\",\"value\":[],\"valueSrc\":[],\"operatorOptions\":null,\"valueType\":[]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/{{transformers_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Update the Alert Rule - 404 Not Found",
              "originalRequest": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": {
                    "rule_type": 0,
                    "unique_id": "8de24581-eade-4b50-a7f0-ac20594fde98",
                    "description": "Add links to alert summary updated",
                    "stop": false,
                    "position": 1,
                    "conditions": [],
                    "actions": [
                      {
                        "unique_id": "13eddca2-38a2-4efd-a8a9-08adcb036416",
                        "action_type": 9,
                        "key": "",
                        "value": "{{summary}} https://www.zenduty.com/docs/alertrules/",
                        "value_reference_name": null,
                        "escalation_policy": null,
                        "escalation_policy_name": null,
                        "assign_to": null,
                        "assign_to_name": null,
                        "schedule": null,
                        "sla": null,
                        "team_priority": null,
                        "task_template": null
                      }
                    ],
                    "rule_json": "{\"type\":\"group\",\"id\":\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"children1\":{\"898aa9ba-0123-4456-b89a-b16a429f5d94\":{\"type\":\"rule\",\"id\":\"898aa9ba-0123-4456-b89a-b16a429f5d94\",\"properties\":{\"field\":\"alert.message\",\"operator\":\"is_not_empty\",\"value\":[],\"valueSrc\":[],\"operatorOptions\":null,\"valueType\":[]},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\",\"898aa9ba-0123-4456-b89a-b16a429f5d94\"]}},\"properties\":{\"conjunction\":\"AND\",\"not\":false},\"path\":[\"9a99988a-0123-4456-b89a-b1607f326fd8\"]}"
                  },
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/{{transformers_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        },
        {
          "name": "Delete the Alert Rule",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/{{transformers_id}}/"
          },
          "response": [
            {
              "name": "Delete the Alert Rule - 400 Bad Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/{{transformers_id}}/"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "This request can not be processed."
              }
            },
            {
              "name": "Delete the Alert Rule - 403 Forbidden",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/{{transformers_id}}/"
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "You do not have permission to perform this action."
              }
            },
            {
              "name": "Delete the Alert Rule - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/api/account/teams/{{team_id}}/services/{{service_id}}/integrations/{{integration_id}}/transformers/{{transformers_id}}/"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "body": {
                "detail": "Not Found."
              }
            }
          ]
        }
      ]
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": {
      "value": "token {{auth_token}}",
      "key": "Authorization"
    }
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "auth_token",
      "value": "{{auth_token}}"
    },
    {
      "key": "host",
      "value": "https://www.zenduty.com"
    },
    {
      "key": "username",
      "value": "{{user_uuid}}"
    },
    {
      "key": "custom_role_id",
      "value": "{{custom_role_id}}"
    },
    {
      "key": "notification_rule_unique_id",
      "value": "{{notification_rule_unique_id}}"
    },
    {
      "key": "forwarding_rule_unique_id",
      "value": "{{forwarding_rule_unique_id}}"
    },
    {
      "key": "contact_unique_id",
      "value": "{{contact_unique_id}}"
    },
    {
      "key": "team_id",
      "value": "{[team_id}}"
    },
    {
      "key": "member_id",
      "value": "{{member_id}}"
    },
    {
      "key": "schedule_id",
      "value": "{{schedule_id}}"
    },
    {
      "key": "ep_id",
      "value": "{{ep_id}}"
    },
    {
      "key": "service_id",
      "value": "{{service_id}}"
    },
    {
      "key": "integration_id",
      "value": "{{integration_id}}"
    },
    {
      "key": "unique_id",
      "value": "{{unique_id}}"
    },
    {
      "key": "role_id",
      "value": "{{role_id}}"
    },
    {
      "key": "incident_note_unique_id",
      "value": "{{incident_note_unique_id}}"
    },
    {
      "key": "incident_tag_unique_id",
      "value": "{{incident_tag_unique_id}}"
    },
    {
      "key": "responder_unique_id",
      "value": "{{responder_unique_id}}"
    },
    {
      "key": "integration_key",
      "value": "{{integration_key}}"
    },
    {
      "key": "tag_id",
      "value": "{{tag_id}}"
    },
    {
      "key": "task_template_id",
      "value": "{{task_template_id}}"
    },
    {
      "key": "priority_id",
      "value": "{{priority_id}}"
    },
    {
      "key": "sla_id",
      "value": "{{sla_id}}"
    },
    {
      "key": "team_maintenance_unique_id",
      "value": "{{team_maintenance_unique_id}}"
    },
    {
      "key": "postmortem_id",
      "value": "{{postmortem_id}}"
    },
    {
      "key": "router_id",
      "value": "{{router_id}}"
    },
    {
      "key": "ruleset_unique_id",
      "value": "{{ruleset_unique_id}}"
    },
    {
      "key": "transformers_id",
      "value": "{{transformers_id}}"
    }
  ]
}